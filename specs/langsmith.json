{
  "openapi": "3.1.0",
  "info": {
    "title": "LangSmith",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/sessions/{session_id}/dashboard": {
      "post": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Get Tracing Project Prebuilt Dashboard",
        "description": "Get a prebuilt dashboard for a tracing project.",
        "operationId": "get_tracing_project_prebuilt_dashboard_api_v1_sessions__session_id__dashboard_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsSectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartsSection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}": {
      "get": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Read Tracer Session",
        "description": "Get a specific session.",
        "operationId": "read_tracer_session_api_v1_sessions__session_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "include_stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Stats"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TracerSession"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Update Tracer Session",
        "description": "Create a new session.",
        "operationId": "update_tracer_session_api_v1_sessions__session_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TracerSessionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TracerSessionWithoutVirtualFields"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Delete Tracer Session",
        "description": "Delete a specific session.",
        "operationId": "delete_tracer_session_api_v1_sessions__session_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "get": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Read Tracer Sessions",
        "description": "Get all sessions.",
        "operationId": "read_tracer_sessions_api_v1_sessions_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "reference_free",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reference Free"
            }
          },
          {
            "name": "reference_dataset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reference Dataset"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "dataset_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset Version"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SessionSortableColumns",
              "default": "start_time"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          {
            "name": "sort_by_feedback_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By Feedback Key"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "tag_value_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag Value Id"
            }
          },
          {
            "name": "facets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Facets"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filter"
            }
          },
          {
            "name": "include_stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Stats"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TracerSession"
                  },
                  "title": "Response Read Tracer Sessions Api V1 Sessions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Create Tracer Session",
        "description": "Create a new session.",
        "operationId": "create_tracer_session_api_v1_sessions_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "upsert",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Upsert"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TracerSessionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TracerSessionWithoutVirtualFields"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Delete Tracer Sessions",
        "description": "Delete a specific session.",
        "operationId": "delete_tracer_sessions_api_v1_sessions_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "title": "Session Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/metadata": {
      "get": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Read Tracer Sessions Runs Metadata",
        "description": "Given a session, a number K, and (optionally) a list of metadata keys, return the top K values for each key.",
        "operationId": "read_tracer_sessions_runs_metadata_api_v1_sessions__session_id__metadata_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "metadata_keys",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata Keys"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "k",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "title": "K"
            }
          },
          {
            "name": "root_runs_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Root Runs Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootModel_Dict_str__list_str___"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/views": {
      "get": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Read Filter Views",
        "description": "Get all filter views for a session.",
        "operationId": "read_filter_views_api_v1_sessions__session_id__views_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FilterViewType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FilterView"
                  },
                  "title": "Response Read Filter Views Api V1 Sessions  Session Id  Views Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Create Filter View",
        "description": "Create a new filter view.",
        "operationId": "create_filter_view_api_v1_sessions__session_id__views_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterViewCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterView"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/views/{view_id}": {
      "get": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Read Filter View",
        "description": "Get a specific filter view.",
        "operationId": "read_filter_view_api_v1_sessions__session_id__views__view_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "View Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterView"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Update Filter View",
        "description": "Update a filter view.",
        "operationId": "update_filter_view_api_v1_sessions__session_id__views__view_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "View Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterViewUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterView"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Delete Filter View",
        "description": "Delete a specific filter view.",
        "operationId": "delete_filter_view_api_v1_sessions__session_id__views__view_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "View Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "List Organizations",
        "description": "Get all orgs visible to this auth",
        "operationId": "list_organizations_api_v1_orgs_get",
        "security": [
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "skip_create",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Skip Create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationPGSchemaSlim"
                  },
                  "title": "Response List Organizations Api V1 Orgs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Create Organization",
        "operationId": "create_organization_api_v1_orgs_post",
        "security": [
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationPGSchemaSlim"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/current/setup": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Create Customers And Get Stripe Setup Intent",
        "operationId": "create_customers_and_get_stripe_setup_intent_api_v1_orgs_current_setup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeSetupIntentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Organization Info",
        "operationId": "get_organization_info_api_v1_orgs_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/info": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Current Organization Info",
        "operationId": "get_current_organization_info_api_v1_orgs_current_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "orgs"
        ],
        "summary": "Update Current Organization Info",
        "operationId": "update_current_organization_info_api_v1_orgs_current_info_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/billing": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Organization Billing Info",
        "operationId": "get_organization_billing_info_api_v1_orgs_current_billing_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationBillingInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/dashboard": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Dashboard",
        "operationId": "get_dashboard_api_v1_orgs_current_dashboard_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrganizationDashboardType"
            }
          },
          {
            "name": "color_scheme",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OrganizationDashboardColorScheme"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Color Scheme"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDashboardSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/current/payment-method": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "On Payment Method Created",
        "operationId": "on_payment_method_created_api_v1_orgs_current_payment_method_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripePaymentInformation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/business-info": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Company Info",
        "operationId": "get_company_info_api_v1_orgs_current_business_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeBusinessInfo-Output"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Set Company Info",
        "operationId": "set_company_info_api_v1_orgs_current_business_info_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeBusinessInfo-Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/plan": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Change Payment Plan",
        "operationId": "change_payment_plan_api_v1_orgs_current_plan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePaymentPlanSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/roles": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "List Organization Roles",
        "operationId": "list_organization_roles_api_v1_orgs_current_roles_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  },
                  "type": "array",
                  "title": "Response List Organization Roles Api V1 Orgs Current Roles Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Create Organization Roles",
        "operationId": "create_organization_roles_api_v1_orgs_current_roles_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/roles/{role_id}": {
      "delete": {
        "tags": [
          "orgs"
        ],
        "summary": "Delete Organization Roles",
        "operationId": "delete_organization_roles_api_v1_orgs_current_roles__role_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "orgs"
        ],
        "summary": "Update Organization Roles",
        "operationId": "update_organization_roles_api_v1_orgs_current_roles__role_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/permissions": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "List Permissions",
        "operationId": "list_permissions_api_v1_orgs_permissions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionResponse"
                  },
                  "type": "array",
                  "title": "Response List Permissions Api V1 Orgs Permissions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/pending": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "List Pending Organization Invites",
        "description": "Get all pending orgs visible to this auth",
        "operationId": "list_pending_organization_invites_api_v1_orgs_pending_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrganizationPGSchemaSlim"
                  },
                  "type": "array",
                  "title": "Response List Pending Organization Invites Api V1 Orgs Pending Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/members": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Current Org Members",
        "operationId": "get_current_org_members_api_v1_orgs_current_members_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMembers"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Add Member To Current Org",
        "operationId": "add_member_to_current_org_api_v1_orgs_current_members_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingIdentityCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingIdentity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/members/active": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Current Active Org Members",
        "operationId": "get_current_active_org_members_api_v1_orgs_current_members_active_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "emails",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [],
              "title": "Emails"
            }
          },
          {
            "name": "ls_user_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "default": [],
              "title": "Ls User Ids"
            }
          },
          {
            "name": "user_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "default": [],
              "title": "User Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrgMemberIdentity"
                  },
                  "title": "Response Get Current Active Org Members Api V1 Orgs Current Members Active Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/current/members/pending": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Current Pending Org Members",
        "operationId": "get_current_pending_org_members_api_v1_orgs_current_members_pending_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "emails",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [],
              "title": "Emails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrgPendingIdentity"
                  },
                  "title": "Response Get Current Pending Org Members Api V1 Orgs Current Members Pending Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/current/members/batch": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Add Members To Current Org Batch",
        "description": "Batch invite up to 500 users to the current org.",
        "operationId": "add_members_to_current_org_batch_api_v1_orgs_current_members_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/PendingIdentityCreate"
                },
                "type": "array",
                "title": "Payloads"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PendingIdentity"
                  },
                  "type": "array",
                  "title": "Response Add Members To Current Org Batch Api V1 Orgs Current Members Batch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/members/basic/batch": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Add Basic Auth Members To Current Org",
        "description": "Batch add up to 500 users to the org and specified workspaces in basic auth mode.",
        "operationId": "add_basic_auth_members_to_current_org_api_v1_orgs_current_members_basic_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BasicAuthMemberCreate"
                },
                "type": "array",
                "title": "Payloads"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserWithPassword"
                  },
                  "type": "array",
                  "title": "Response Add Basic Auth Members To Current Org Api V1 Orgs Current Members Basic Batch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/members/{identity_id}/pending": {
      "delete": {
        "tags": [
          "orgs"
        ],
        "summary": "Delete Current Org Pending Member",
        "description": "When an admin deletes a pending member invite.",
        "operationId": "delete_current_org_pending_member_api_v1_orgs_current_members__identity_id__pending_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/pending/{organization_id}": {
      "delete": {
        "tags": [
          "orgs"
        ],
        "summary": "Delete Pending Organization Invite",
        "operationId": "delete_pending_organization_invite_api_v1_orgs_pending__organization_id__delete",
        "security": [
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/pending/{organization_id}/claim": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Claim Pending Organization Invite",
        "operationId": "claim_pending_organization_invite_api_v1_orgs_pending__organization_id__claim_post",
        "security": [
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/current/members/{identity_id}": {
      "delete": {
        "tags": [
          "orgs"
        ],
        "summary": "Remove Member From Current Org",
        "description": "Remove a user from the current organization.",
        "operationId": "remove_member_from_current_org_api_v1_orgs_current_members__identity_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "orgs"
        ],
        "summary": "Update Current Org Member",
        "description": "This is used for updating a user's role (all auth modes) or full_name/password (basic auth)",
        "operationId": "update_current_org_member_api_v1_orgs_current_members__identity_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgIdentityPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/members/basic": {
      "patch": {
        "tags": [
          "orgs"
        ],
        "summary": "Update Current User",
        "description": "Update a user's full_name/password (basic auth only)",
        "operationId": "update_current_user_api_v1_orgs_members_basic_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicAuthUserPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/ttl-settings": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "List Ttl Settings",
        "description": "List out the configured TTL settings for a given org (org-level and tenant-level).",
        "operationId": "list_ttl_settings_api_v1_orgs_ttl_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TTLSettings"
                  },
                  "type": "array",
                  "title": "Response List Ttl Settings Api V1 Orgs Ttl Settings Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "orgs"
        ],
        "summary": "Upsert Ttl Settings",
        "operationId": "upsert_ttl_settings_api_v1_orgs_ttl_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertTTLSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TTLSettings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/sso-settings": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Current Sso Settings",
        "description": "Get SSO provider settings for the current organization.",
        "operationId": "get_current_sso_settings_api_v1_orgs_current_sso_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SSOProvider"
                  },
                  "type": "array",
                  "title": "Response Get Current Sso Settings Api V1 Orgs Current Sso Settings Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Create Sso Settings",
        "description": "Create SSO provider settings for the current organization.",
        "operationId": "create_sso_settings_api_v1_orgs_current_sso_settings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOSettingsCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOProvider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/sso-settings/{id}": {
      "patch": {
        "tags": [
          "orgs"
        ],
        "summary": "Update Sso Settings",
        "description": "Update SSO provider settings defaults for the current organization.",
        "operationId": "update_sso_settings_api_v1_orgs_current_sso_settings__id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOSettingsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOProvider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "orgs"
        ],
        "summary": "Delete Sso Settings",
        "description": "Delete SSO provider settings for the current organization.",
        "operationId": "delete_sso_settings_api_v1_orgs_current_sso_settings__id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOProvider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/current/login-methods": {
      "patch": {
        "tags": [
          "orgs"
        ],
        "summary": "Update Allowed Login Methods",
        "description": "Update allowed login methods for the current organization.",
        "operationId": "update_allowed_login_methods_api_v1_orgs_current_login_methods_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowedLoginMethodsUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Allowed Login Methods Api V1 Orgs Current Login Methods Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/billing/usage": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Org Usage",
        "operationId": "get_org_usage_api_v1_orgs_current_billing_usage_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "starting_on",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Starting On"
            }
          },
          {
            "name": "ending_before",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Ending Before"
            }
          },
          {
            "name": "on_current_plan",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "On Current Plan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrgUsage"
                  },
                  "title": "Response Get Org Usage Api V1 Orgs Current Billing Usage Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/current/user/login-methods": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Current User Login Methods",
        "description": "Get login methods for the current user.",
        "operationId": "get_current_user_login_methods_api_v1_orgs_current_user_login_methods_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProviderUserSlim"
                  },
                  "type": "array",
                  "title": "Response Get Current User Login Methods Api V1 Orgs Current User Login Methods Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/stripe_checkout_session": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Create Stripe Checkout Sessions Endpoint",
        "description": "Kick off a Stripe checkout session flow.",
        "operationId": "create_stripe_checkout_sessions_endpoint_api_v1_orgs_current_stripe_checkout_session_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCheckoutSessionsCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/confirm_checkout_session_completion": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Confirm Checkout Session Completion Endpoint",
        "description": "Complete a Stripe checkout session flow.",
        "operationId": "confirm_checkout_session_completion_endpoint_api_v1_orgs_current_confirm_checkout_session_completion_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCheckoutSessionsConfirm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/stripe_account_links": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Create Stripe Account Links Endpoint",
        "description": "Kick off a Stripe account link flow.",
        "operationId": "create_stripe_account_links_endpoint_api_v1_orgs_current_stripe_account_links_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeAccountLinksCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_api_v1_login_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicAuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth/{provider}/callback": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Oauth Provider Callback",
        "operationId": "oauth_provider_callback_api_v1_oauth__provider__callback_get",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OAuthProvider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Oauth Provider Callback Api V1 Oauth  Provider  Callback Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth/{provider}/logout": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Oauth Provider Logout",
        "operationId": "oauth_provider_logout_api_v1_oauth__provider__logout_get",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OAuthProvider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth/{provider}": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Oauth Provider Auth",
        "operationId": "oauth_provider_auth_api_v1_oauth__provider__get",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OAuthProvider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth/{provider}/current-user": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Oauth Provider Current User",
        "operationId": "oauth_provider_current_user_api_v1_oauth__provider__current_user_get",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OAuthProvider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sso/email-verification/send": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Send Sso Email Confirmation",
        "description": "Send an email to confirm the email address for an SSO user.",
        "operationId": "send_sso_email_confirmation_api_v1_sso_email_verification_send_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOEmailVerificationSendRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Send Sso Email Confirmation Api V1 Sso Email Verification Send Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/sso/email-verification/status": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Check Sso Email Verification Status",
        "description": "Retrieve the email verification status of an SSO user.",
        "operationId": "check_sso_email_verification_status_api_v1_sso_email_verification_status_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOEmailVerificationStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOEmailVerificationStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sso/email-verification/confirm": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Confirm Sso User Email",
        "description": "Confirm the email of an SSO user.",
        "operationId": "confirm_sso_user_email_api_v1_sso_email_verification_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOConfirmEmailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Confirm Sso User Email Api V1 Sso Email Verification Confirm Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sso/settings/{sso_login_slug}": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Sso Settings",
        "description": "Get SSO provider settings from login slug.",
        "operationId": "get_sso_settings_api_v1_sso_settings__sso_login_slug__get",
        "parameters": [
          {
            "name": "sso_login_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sso Login Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SSOProviderSlim"
                  },
                  "title": "Response Get Sso Settings Api V1 Sso Settings  Sso Login Slug  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api-key": {
      "get": {
        "tags": [
          "api-key"
        ],
        "summary": "Get Api Keys",
        "description": "Get the current tenant's API keys",
        "operationId": "get_api_keys_api_v1_api_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/APIKeyGetResponse"
                  },
                  "type": "array",
                  "title": "Response Get Api Keys Api V1 Api Key Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "api-key"
        ],
        "summary": "Generate Api Key",
        "description": "Generate an api key for the user",
        "operationId": "generate_api_key_api_v1_api_key_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyCreateRequest",
                "default": {
                  "description": "Default API key",
                  "read_only": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/api-key/{api_key_id}": {
      "delete": {
        "tags": [
          "api-key"
        ],
        "summary": "Delete Api Key",
        "description": "Delete an api key for the user",
        "operationId": "delete_api_key_api_v1_api_key__api_key_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Api Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyGetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api-key/current": {
      "get": {
        "tags": [
          "api-key"
        ],
        "summary": "Get Personal Access Tokens",
        "description": "Get the current users PATs for this tenant",
        "operationId": "get_personal_access_tokens_api_v1_api_key_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/APIKeyGetResponse"
                  },
                  "type": "array",
                  "title": "Response Get Personal Access Tokens Api V1 Api Key Current Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "api-key"
        ],
        "summary": "Generate Personal Access Token",
        "description": "Generate a Personal Access Token the user",
        "operationId": "generate_personal_access_token_api_v1_api_key_current_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyCreateRequest",
                "default": {
                  "description": "Default API key",
                  "read_only": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/api-key/current/{pat_id}": {
      "delete": {
        "tags": [
          "api-key"
        ],
        "summary": "Delete Personal Access Token",
        "description": "Delete a Personal Access Token for the user",
        "operationId": "delete_personal_access_token_api_v1_api_key_current__pat_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "pat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Pat Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyGetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/examples/count": {
      "get": {
        "tags": [
          "examples"
        ],
        "summary": "Count Examples",
        "description": "Count all examples by query params",
        "operationId": "count_examples_api_v1_examples_count_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "default": "latest",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          },
          {
            "name": "metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          {
            "name": "full_text_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Text Contains"
            }
          },
          {
            "name": "splits",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Splits"
            }
          },
          {
            "name": "dataset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Examples Api V1 Examples Count Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/examples/{example_id}": {
      "get": {
        "tags": [
          "examples"
        ],
        "summary": "Read Example",
        "description": "Get a specific example.",
        "operationId": "read_example_api_v1_examples__example_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Example Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "default": "latest",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Example"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "examples"
        ],
        "summary": "Update Example",
        "description": "Update a specific example.",
        "operationId": "update_example_api_v1_examples__example_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Example Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExampleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "examples"
        ],
        "summary": "Delete Example",
        "description": "Delete a specific example.",
        "operationId": "delete_example_api_v1_examples__example_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Example Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/examples": {
      "get": {
        "tags": [
          "examples"
        ],
        "summary": "Read Examples",
        "description": "Get all examples by query params",
        "operationId": "read_examples_api_v1_examples_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "default": "latest",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          },
          {
            "name": "metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          {
            "name": "full_text_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Text Contains"
            }
          },
          {
            "name": "splits",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Splits"
            }
          },
          {
            "name": "dataset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ExampleListOrder",
              "default": "recent"
            }
          },
          {
            "name": "random_seed",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Random Seed"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExampleSelect"
              },
              "default": [
                "id",
                "created_at",
                "modified_at",
                "name",
                "dataset_id",
                "source_run_id",
                "metadata",
                "inputs",
                "outputs"
              ],
              "title": "Select"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Example"
                  },
                  "title": "Response Read Examples Api V1 Examples Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "examples"
        ],
        "summary": "Create Example",
        "description": "Create a new example.",
        "operationId": "create_example_api_v1_examples_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Example"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "examples"
        ],
        "summary": "Delete Examples",
        "description": "Delete a specific set of examples.",
        "operationId": "delete_examples_api_v1_examples_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "example_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "title": "Example Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/examples/bulk": {
      "post": {
        "tags": [
          "examples"
        ],
        "summary": "Create Examples",
        "description": "Create a new example.",
        "operationId": "create_examples_api_v1_examples_bulk_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "examples"
        ],
        "summary": "Legacy Update Examples",
        "description": "Update examples in bulk.",
        "operationId": "legacy_update_examples_api_v1_examples_bulk_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ExampleUpdateWithID"
                },
                "type": "array",
                "title": "Example Updates"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/examples/upload/{dataset_id}": {
      "post": {
        "tags": [
          "examples"
        ],
        "summary": "Legacy Upload Examples",
        "description": "Create a new example.",
        "operationId": "legacy_upload_examples_api_v1_examples_upload__dataset_id__post",
        "deprecated": true,
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_legacy_upload_examples_api_v1_examples_upload__dataset_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Example"
                  },
                  "title": "Response Legacy Upload Examples Api V1 Examples Upload  Dataset Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/examples/validate": {
      "post": {
        "tags": [
          "examples"
        ],
        "summary": "Validate Example",
        "description": "Validate an example.",
        "operationId": "validate_example_api_v1_examples_validate_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/examples/validate/bulk": {
      "post": {
        "tags": [
          "examples"
        ],
        "summary": "Validate Examples",
        "description": "Validate an example.",
        "operationId": "validate_examples_api_v1_examples_validate_bulk_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExampleValidationResult"
                  },
                  "type": "array",
                  "title": "Response Validate Examples Api V1 Examples Validate Bulk Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/datasets/{dataset_id}": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Dataset",
        "description": "Get a specific dataset.",
        "operationId": "read_dataset_api_v1_datasets__dataset_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete Dataset",
        "description": "Delete a specific dataset.",
        "operationId": "delete_dataset_api_v1_datasets__dataset_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset",
        "description": "Update a specific dataset.",
        "operationId": "update_dataset_api_v1_datasets__dataset_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dataset updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetSchemaForUpdate"
                }
              }
            },
            "headers": {
              "X-Updated-Examples-Count": {
                "description": "Number of examples updated",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Datasets",
        "description": "Get all datasets by query params and owner.",
        "operationId": "read_datasets_api_v1_datasets_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "data_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataType"
                  }
                },
                {
                  "$ref": "#/components/schemas/DataType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Type"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortByDatasetColumn",
              "default": "last_session_start_time"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          },
          {
            "name": "tag_value_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag Value Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dataset"
                  },
                  "title": "Response Read Datasets Api V1 Datasets Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset.",
        "operationId": "create_dataset_api_v1_datasets_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/upload": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Upload Csv Dataset",
        "description": "Create a new dataset from a CSV file.",
        "operationId": "upload_csv_dataset_api_v1_datasets_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_csv_dataset_api_v1_datasets_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/datasets/upload-experiment": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Upload Experiment",
        "description": "Upload an experiment that has already been run.",
        "operationId": "upload_experiment_api_v1_datasets_upload_experiment_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentResultsUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperimentResultsUploadResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/datasets/{dataset_id}/versions": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Versions",
        "description": "Get dataset versions.",
        "operationId": "get_dataset_versions_api_v1_datasets__dataset_id__versions_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "example",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Example"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DatasetVersion"
                  },
                  "title": "Response Get Dataset Versions Api V1 Datasets  Dataset Id  Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/versions/diff": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Diff Dataset Versions",
        "description": "Get diff between two dataset versions.",
        "operationId": "diff_dataset_versions_api_v1_datasets__dataset_id__versions_diff_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "from_version",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "title": "From Version"
            }
          },
          {
            "name": "to_version",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "title": "To Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetDiffInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/version": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Version",
        "description": "Get dataset version by as_of or exact tag.",
        "operationId": "get_dataset_version_api_v1_datasets__dataset_id__version_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "As Of"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetVersion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/tags": {
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset Version",
        "description": "Set a tag on a dataset version.",
        "operationId": "update_dataset_version_api_v1_datasets__dataset_id__tags_put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutDatasetVersionsSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetVersion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/openai": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download Dataset Openai",
        "description": "Download a dataset as OpenAI Evals Jsonl format.",
        "operationId": "download_dataset_openai_api_v1_datasets__dataset_id__openai_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/openai_ft": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download Dataset Openai Ft",
        "description": "Download a dataset as OpenAI Jsonl format.",
        "operationId": "download_dataset_openai_ft_api_v1_datasets__dataset_id__openai_ft_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/csv": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download Dataset Csv",
        "description": "Download a dataset as CSV format.",
        "operationId": "download_dataset_csv_api_v1_datasets__dataset_id__csv_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/jsonl": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download Dataset Jsonl",
        "description": "Download a dataset as CSV format.",
        "operationId": "download_dataset_jsonl_api_v1_datasets__dataset_id__jsonl_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/runs": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Examples With Runs",
        "description": "Fetch examples for a dataset, and fetch the runs for each example if they are associated with the given session_ids.",
        "operationId": "read_examples_with_runs_api_v1_datasets__dataset_id__runs_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Response format, e.g., 'csv'",
              "title": "Format"
            },
            "description": "Response format, e.g., 'csv'"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryExampleSchemaWithRuns"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExampleWithRuns"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExampleWithRunsCH"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Read Examples With Runs Api V1 Datasets  Dataset Id  Runs Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/group/runs": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Examples With Runs Grouped",
        "description": "Fetch examples for a dataset, and fetch the runs for each example if they are associated with the given session_ids.",
        "operationId": "read_examples_with_runs_grouped_api_v1_datasets__dataset_id__group_runs_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryGroupedExamplesWithRuns"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupedExamplesWithRunsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/runs/delta": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Delta",
        "description": "Fetch the number of regressions/improvements for each example in a dataset, between sessions[0] and sessions[1].",
        "operationId": "read_delta_api_v1_datasets__dataset_id__runs_delta_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryFeedbackDelta"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionFeedbackDelta"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/share": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Dataset Share State",
        "description": "Get the state of sharing a dataset",
        "operationId": "read_dataset_share_state_api_v1_datasets__dataset_id__share_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DatasetShareSchema"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Read Dataset Share State Api V1 Datasets  Dataset Id  Share Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Share Dataset",
        "description": "Share a dataset.",
        "operationId": "share_dataset_api_v1_datasets__dataset_id__share_put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "share_projects",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Share Projects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetShareSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Unshare Dataset",
        "description": "Unshare a dataset.",
        "operationId": "unshare_dataset_api_v1_datasets__dataset_id__share_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/comparative": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Comparative Experiments",
        "description": "Get all comparative experiments for a given dataset.",
        "operationId": "read_comparative_experiments_api_v1_datasets__dataset_id__comparative_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortByComparativeExperimentColumn",
              "default": "created_at"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComparativeExperiment"
                  },
                  "title": "Response Read Comparative Experiments Api V1 Datasets  Dataset Id  Comparative Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/comparative": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Create Comparative Experiment",
        "description": "Create a comparative experiment.",
        "operationId": "create_comparative_experiment_api_v1_datasets_comparative_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComparativeExperimentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComparativeExperimentBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/datasets/comparative/{comparative_experiment_id}": {
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete Comparative Experiment",
        "description": "Delete a specific comparative experiment.",
        "operationId": "delete_comparative_experiment_api_v1_datasets_comparative__comparative_experiment_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "comparative_experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comparative Experiment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/clone": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Clone Dataset",
        "description": "Clone a dataset.",
        "operationId": "clone_dataset_api_v1_datasets_clone_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_clone_dataset_api_v1_datasets_clone_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Example"
                  },
                  "type": "array",
                  "title": "Response Clone Dataset Api V1 Datasets Clone Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/datasets/{dataset_id}/splits": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Splits",
        "operationId": "get_dataset_splits_api_v1_datasets__dataset_id__splits_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "default": "latest",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Get Dataset Splits Api V1 Datasets  Dataset Id  Splits Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset Splits",
        "operationId": "update_dataset_splits_api_v1_datasets__dataset_id__splits_put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_dataset_splits_api_v1_datasets__dataset_id__splits_put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Update Dataset Splits Api V1 Datasets  Dataset Id  Splits Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/index": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Index",
        "description": "Index a dataset.",
        "operationId": "index_api_v1_datasets__dataset_id__index_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetIndexRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Remove Index",
        "description": "Remove an index for a dataset.",
        "operationId": "remove_index_api_v1_datasets__dataset_id__index_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Index Info",
        "description": "Get index info.",
        "operationId": "get_index_info_api_v1_datasets__dataset_id__index_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetIndexInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/index/sync": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Sync Index",
        "description": "Sync an index for a dataset.",
        "operationId": "sync_index_api_v1_datasets__dataset_id__index_sync_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/search": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Search",
        "description": "Search a dataset.",
        "operationId": "search_api_v1_datasets__dataset_id__search_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchDatasetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDatasetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/generate": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Generate",
        "description": "Generate synthetic examples for a dataset.",
        "operationId": "generate_api_v1_datasets__dataset_id__generate_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateSyntheticExamplesBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/playground_experiment/batch": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Dataset Handler",
        "operationId": "dataset_handler_api_v1_datasets_playground_experiment_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaygroundRunOverDatasetRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Dataset Handler Api V1 Datasets Playground Experiment Batch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/datasets/playground_experiment/stream": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Stream Dataset Handler",
        "operationId": "stream_dataset_handler_api_v1_datasets_playground_experiment_stream_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaygroundRunOverDatasetRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/rules": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "List Rules",
        "description": "List all run rules.",
        "operationId": "list_rules_api_v1_runs_rules_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset Id"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "session",
                    "dataset"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunRulesSchema"
                  },
                  "title": "Response List Rules Api V1 Runs Rules Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Create Rule",
        "description": "Create a new run rule.",
        "operationId": "create_rule_api_v1_runs_rules_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunRulesCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunRulesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}": {
      "patch": {
        "tags": [
          "run"
        ],
        "summary": "Update Rule",
        "description": "Update a run rule.",
        "operationId": "update_rule_api_v1_runs_rules__rule_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunRulesCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunRulesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "run"
        ],
        "summary": "Delete Rule",
        "description": "Delete a run rule.",
        "operationId": "delete_rule_api_v1_runs_rules__rule_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}/logs": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "List Rule Logs",
        "description": "List logs for a particular rule",
        "operationId": "list_rule_logs_api_v1_runs_rules__rule_id__logs_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1440,
              "minimum": 100,
              "default": 720,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RuleLogSchema"
                  },
                  "title": "Response List Rule Logs Api V1 Runs Rules  Rule Id  Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}/last_applied": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "Get Last Applied Rule",
        "description": "Get the last applied rule.",
        "operationId": "get_last_applied_rule_api_v1_runs_rules__rule_id__last_applied_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleLogSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}/trigger": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Trigger Rule",
        "description": "Trigger a run rule manually.",
        "operationId": "trigger_rule_api_v1_runs_rules__rule_id__trigger_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunRulesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/trigger": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Trigger Rules",
        "description": "Trigger an array of run rules manually.",
        "operationId": "trigger_rules_api_v1_runs_rules_trigger_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerRulesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/{run_id}": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "Read Run",
        "description": "Get a specific run.",
        "operationId": "read_run_api_v1_runs__run_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session Id"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "exclude_s3_stored_attributes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Exclude S3 Stored Attributes"
            }
          },
          {
            "name": "exclude_serialized",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Exclude Serialized"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "run"
        ],
        "summary": "Update Run",
        "description": "Update a run.",
        "operationId": "update_run_api_v1_runs__run_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRunRequest"
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/{run_id}/share": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "Read Run Share State",
        "description": "Get the state of sharing of a run.",
        "operationId": "read_run_share_state_api_v1_runs__run_id__share_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/RunShareSchema"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Read Run Share State Api V1 Runs  Run Id  Share Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "run"
        ],
        "summary": "Share Run",
        "description": "Share a run.",
        "operationId": "share_run_api_v1_runs__run_id__share_put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunShareSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "run"
        ],
        "summary": "Unshare Run",
        "description": "Unshare a run.",
        "operationId": "unshare_run_api_v1_runs__run_id__share_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/query": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Query Runs",
        "operationId": "query_runs_api_v1_runs_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyParamsForRunSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRunsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/generate-query": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Generate Query For Runs",
        "description": "Get runs filter expression query for a given natural language query.",
        "operationId": "generate_query_for_runs_api_v1_runs_generate_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBodyForRunsGenerateQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyForRunsGenerateQuery"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/stats": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Stats Runs",
        "description": "Get all runs by query in body payload.",
        "operationId": "stats_runs_api_v1_runs_stats_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunStatsQueryParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/RunStats"
                    },
                    {
                      "additionalProperties": {
                        "$ref": "#/components/schemas/RunStats"
                      },
                      "type": "object"
                    }
                  ],
                  "title": "Response Stats Runs Api V1 Runs Stats Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/monitor": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Monitor Tracer Session",
        "description": "Get monitoring data for a specific session.",
        "operationId": "monitor_tracer_session_api_v1_runs_monitor_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonitorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Create Run",
        "description": "Create a new run.",
        "operationId": "create_run_api_v1_runs_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRunRequest"
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/batch": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Batch Ingest Runs",
        "description": "Batch ingest runs.",
        "operationId": "batch_ingest_runs_api_v1_runs_batch_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchIngestRunsRequest"
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/multipart": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Multipart Ingest Runs",
        "description": "Batch ingest runs.",
        "operationId": "multipart_ingest_runs_api_v1_runs_multipart_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/group": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Group Runs",
        "description": "Get runs grouped by an expression",
        "operationId": "group_runs_api_v1_runs_group_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/group/stats": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Stats Group Runs",
        "description": "Get stats for the grouped runs.",
        "operationId": "stats_group_runs_api_v1_runs_group_stats_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunGroupStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/delete": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Delete Runs",
        "description": "Delete specific runs.",
        "operationId": "delete_runs_api_v1_runs_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_delete_runs_api_v1_runs_delete_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/feedback/{feedback_id}": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Read Feedback",
        "description": "Get a specific feedback.",
        "operationId": "read_feedback_api_v1_feedback__feedback_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "feedback_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feedback Id"
            }
          },
          {
            "name": "include_user_names",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include User Names"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "feedback"
        ],
        "summary": "Update Feedback",
        "description": "Replace an existing feedback entry with a new, modified entry.",
        "operationId": "update_feedback_api_v1_feedback__feedback_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "feedback_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feedback Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "feedback"
        ],
        "summary": "Delete Feedback",
        "description": "Delete a feedback.",
        "operationId": "delete_feedback_api_v1_feedback__feedback_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "feedback_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feedback Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Read Feedbacks",
        "description": "List all Feedback by query params.",
        "operationId": "read_feedbacks_api_v1_feedback_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Run"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key"
            }
          },
          {
            "name": "session",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "User"
            }
          },
          {
            "name": "has_comment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Comment"
            }
          },
          {
            "name": "has_score",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Score"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FeedbackLevel"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          },
          {
            "name": "max_created_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Created At"
            }
          },
          {
            "name": "min_created_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Created At"
            }
          },
          {
            "name": "include_user_names",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include User Names"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackSchema"
                  },
                  "title": "Response Read Feedbacks Api V1 Feedback Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Create Feedback",
        "description": "Create a new feedback.",
        "operationId": "create_feedback_api_v1_feedback_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback/eager": {
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Eagerly Create Feedback",
        "description": "Create a new feedback.\n\nThis method is invoked under the assumption that the run\nis already visible in the app, thus already present in DB",
        "operationId": "eagerly_create_feedback_api_v1_feedback_eager_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/feedback/tokens": {
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Create Feedback Ingest Token",
        "description": "Create a new feedback ingest token.",
        "operationId": "create_feedback_ingest_token_api_v1_feedback_tokens_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/FeedbackIngestTokenCreateSchema"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FeedbackIngestTokenCreateSchema"
                    }
                  }
                ],
                "title": "Feedback Ingest Token"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FeedbackIngestTokenSchema"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FeedbackIngestTokenSchema"
                      }
                    }
                  ],
                  "title": "Response Create Feedback Ingest Token Api V1 Feedback Tokens Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "List Feedback Ingest Tokens",
        "description": "List all feedback ingest tokens for a run.",
        "operationId": "list_feedback_ingest_tokens_api_v1_feedback_tokens_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackIngestTokenSchema"
                  },
                  "title": "Response List Feedback Ingest Tokens Api V1 Feedback Tokens Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback/tokens/{token}": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Create Feedback With Token Get",
        "description": "Create a new feedback with a token.",
        "operationId": "create_feedback_with_token_get_api_v1_feedback_tokens__token__get",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token"
            }
          },
          {
            "name": "score",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Score"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Value"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Comment"
            }
          },
          {
            "name": "correction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Correction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Create Feedback With Token Post",
        "description": "Create a new feedback with a token.",
        "operationId": "create_feedback_with_token_post_api_v1_feedback_tokens__token__post",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackCreateWithTokenExtendedSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/run": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Get Shared Run",
        "description": "Get the shared run.",
        "operationId": "get_shared_run_api_v1_public__share_token__run_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "exclude_s3_stored_attributes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Exclude S3 Stored Attributes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunPublicSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/run/{id}": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Get Shared Run By Id",
        "description": "Get the shared run.",
        "operationId": "get_shared_run_by_id_api_v1_public__share_token__run__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "exclude_s3_stored_attributes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Exclude S3 Stored Attributes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunPublicSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/runs/query": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Query Shared Runs",
        "description": "Get run by ids or the shared run if not specifed.",
        "operationId": "query_shared_runs_api_v1_public__share_token__runs_query_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryParamsForPublicRunSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPublicRunsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/feedbacks": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Feedbacks",
        "operationId": "read_shared_feedbacks_api_v1_public__share_token__feedbacks_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "run",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Run"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key"
            }
          },
          {
            "name": "session",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "User"
            }
          },
          {
            "name": "has_comment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Comment"
            }
          },
          {
            "name": "has_score",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Score"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FeedbackLevel"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackSchema"
                  },
                  "title": "Response Read Shared Feedbacks Api V1 Public  Share Token  Feedbacks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset",
        "description": "Get dataset by ids or the shared dataset if not specifed.",
        "operationId": "read_shared_dataset_api_v1_public__share_token__datasets_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortByDatasetColumn",
              "default": "last_session_start_time"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetPublicSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/examples/count": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Count Shared Examples",
        "description": "Count all examples by query params",
        "operationId": "count_shared_examples_api_v1_public__share_token__examples_count_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "default": "latest",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          },
          {
            "name": "metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Shared Examples Api V1 Public  Share Token  Examples Count Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/examples": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Examples",
        "description": "Get example by ids or the shared example if not specifed.",
        "operationId": "read_shared_examples_api_v1_public__share_token__examples_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "default": "latest",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          },
          {
            "name": "metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExampleSelect"
              },
              "default": [
                "id",
                "created_at",
                "modified_at",
                "name",
                "dataset_id",
                "metadata",
                "inputs",
                "outputs",
                "attachment_urls"
              ],
              "title": "Select"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Example"
                  },
                  "title": "Response Read Shared Examples Api V1 Public  Share Token  Examples Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/sessions": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset Tracer Sessions",
        "description": "Get projects run on a dataset that has been shared.",
        "operationId": "read_shared_dataset_tracer_sessions_api_v1_public__share_token__datasets_sessions_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "dataset_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset Version"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SessionSortableColumns",
              "default": "start_time"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          },
          {
            "name": "sort_by_feedback_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By Feedback Key"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "facets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Facets"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TracerSession"
                  },
                  "title": "Response Read Shared Dataset Tracer Sessions Api V1 Public  Share Token  Datasets Sessions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/datasets/sessions-bulk": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset Tracer Sessions Bulk",
        "description": "Get sessions from multiple datasets using share tokens.",
        "operationId": "read_shared_dataset_tracer_sessions_bulk_api_v1_public_datasets_sessions_bulk_get",
        "parameters": [
          {
            "name": "share_tokens",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Share Tokens"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TracerSession"
                  },
                  "title": "Response Read Shared Dataset Tracer Sessions Bulk Api V1 Public Datasets Sessions Bulk Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/examples/runs": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset Examples With Runs",
        "description": "Get examples with associated runs from sessions in a dataset that has been shared.",
        "operationId": "read_shared_dataset_examples_with_runs_api_v1_public__share_token__examples_runs_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryExampleSchemaWithRuns"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicExampleWithRuns"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExampleWithRunsCH"
                      }
                    }
                  ],
                  "title": "Response Read Shared Dataset Examples With Runs Api V1 Public  Share Token  Examples Runs Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/runs/delta": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Delta",
        "description": "Fetch the number of regressions/improvements for each example in a dataset, between sessions[0] and sessions[1].",
        "operationId": "read_shared_delta_api_v1_public__share_token__datasets_runs_delta_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryFeedbackDelta"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionFeedbackDelta"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/runs/query": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Query Shared Dataset Runs",
        "description": "Get runs in projects run over a dataset that has been shared.",
        "operationId": "query_shared_dataset_runs_api_v1_public__share_token__datasets_runs_query_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyParamsForRunSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPublicDatasetRunsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/runs/generate-query": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Generate Query For Shared Dataset Runs",
        "description": "Get runs in projects run over a dataset that has been shared.",
        "operationId": "generate_query_for_shared_dataset_runs_api_v1_public__share_token__datasets_runs_generate_query_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBodyForRunsGenerateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyForRunsGenerateQuery"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/runs/stats": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Stats Shared Dataset Runs",
        "description": "Get run stats in projects run over a dataset that has been shared.",
        "operationId": "stats_shared_dataset_runs_api_v1_public__share_token__datasets_runs_stats_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunStatsQueryParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/runs/{run_id}": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset Run",
        "description": "Get runs in projects run over a dataset that has been shared.",
        "operationId": "read_shared_dataset_run_api_v1_public__share_token__datasets_runs__run_id__get",
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          },
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "exclude_s3_stored_attributes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Exclude S3 Stored Attributes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunPublicDatasetSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/feedback": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset Feedback",
        "description": "Get feedback for runs in projects run over a dataset that has been shared.",
        "operationId": "read_shared_dataset_feedback_api_v1_public__share_token__datasets_feedback_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "run",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Run"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key"
            }
          },
          {
            "name": "session",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "User"
            }
          },
          {
            "name": "has_comment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Comment"
            }
          },
          {
            "name": "has_score",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Score"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FeedbackLevel"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackSchema"
                  },
                  "title": "Response Read Shared Dataset Feedback Api V1 Public  Share Token  Datasets Feedback Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/comparative": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Comparative Experiments",
        "description": "Get all comparative experiments for a given dataset.",
        "operationId": "read_shared_comparative_experiments_api_v1_public__share_token__datasets_comparative_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortByComparativeExperimentColumn",
              "default": "created_at"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublicComparativeExperiment"
                  },
                  "title": "Response Read Shared Comparative Experiments Api V1 Public  Share Token  Datasets Comparative Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/schemas/{version}/message.json": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Get Message Json Schema",
        "operationId": "get_message_json_schema_api_v1_public_schemas__version__message_json_get",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/schemas/{version}/tooldef.json": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Get Tool Def Json Schema",
        "operationId": "get_tool_def_json_schema_api_v1_public_schemas__version__tooldef_json_get",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues": {
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Annotation Queues",
        "operationId": "get_annotation_queues_api_v1_annotation_queues_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ids"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "tag_value_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag Value Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationQueueSchemaWithSize"
                  },
                  "title": "Response Get Annotation Queues Api V1 Annotation Queues Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Create Annotation Queue",
        "operationId": "create_annotation_queue_api_v1_annotation_queues_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationQueueCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationQueueSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/populate": {
      "post": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Populate Annotation Queue",
        "description": "Populate annotation queue with runs from an experiment.",
        "operationId": "populate_annotation_queue_api_v1_annotation_queues_populate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PopulateAnnotationQueueSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/annotation-queues/{queue_id}": {
      "delete": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Delete Annotation Queue",
        "operationId": "delete_annotation_queue_api_v1_annotation_queues__queue_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Update Annotation Queue",
        "operationId": "update_annotation_queue_api_v1_annotation_queues__queue_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationQueueUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Annotation Queue",
        "operationId": "get_annotation_queue_api_v1_annotation_queues__queue_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationQueueSchemaWithRubric"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/runs": {
      "post": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Add Runs To Annotation Queue",
        "operationId": "add_runs_to_annotation_queue_api_v1_annotation_queues__queue_id__runs_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": "Run Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationQueueRunSchema"
                  },
                  "title": "Response Add Runs To Annotation Queue Api V1 Annotation Queues  Queue Id  Runs Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Runs From Annotation Queue",
        "operationId": "get_runs_from_annotation_queue_api_v1_annotation_queues__queue_id__runs_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Archived"
            }
          },
          {
            "name": "include_stats",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include Stats"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunSchemaWithAnnotationQueueInfo"
                  },
                  "title": "Response Get Runs From Annotation Queue Api V1 Annotation Queues  Queue Id  Runs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/export": {
      "post": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Export Annotation Queue Archived Runs",
        "operationId": "export_annotation_queue_archived_runs_api_v1_annotation_queues__queue_id__export_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportAnnotationQueueRunsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/run/{index}": {
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Run From Annotation Queue",
        "operationId": "get_run_from_annotation_queue_api_v1_annotation_queues__queue_id__run__index__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunSchemaWithAnnotationQueueInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{run_id}/queues": {
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Annotation Queues For Run",
        "operationId": "get_annotation_queues_for_run_api_v1_annotation_queues__run_id__queues_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationQueueSchema"
                  },
                  "title": "Response Get Annotation Queues For Run Api V1 Annotation Queues  Run Id  Queues Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/runs/{queue_run_id}": {
      "patch": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Update Run In Annotation Queue",
        "operationId": "update_run_in_annotation_queue_api_v1_annotation_queues__queue_id__runs__queue_run_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          },
          {
            "name": "queue_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Run Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationQueueRunUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Delete Run From Annotation Queue",
        "operationId": "delete_run_from_annotation_queue_api_v1_annotation_queues__queue_id__runs__queue_run_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          },
          {
            "name": "queue_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/runs/delete": {
      "post": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Delete Runs From Annotation Queue",
        "operationId": "delete_runs_from_annotation_queue_api_v1_annotation_queues__queue_id__runs_delete_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationQueueBulkDeleteRunsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/total_size": {
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Total Size From Annotation Queue",
        "operationId": "get_total_size_from_annotation_queue_api_v1_annotation_queues__queue_id__total_size_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationQueueSizeSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/total_archived": {
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Total Archived From Annotation Queue",
        "operationId": "get_total_archived_from_annotation_queue_api_v1_annotation_queues__queue_id__total_archived_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationQueueSizeSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/size": {
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Size From Annotation Queue",
        "operationId": "get_size_from_annotation_queue_api_v1_annotation_queues__queue_id__size_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationQueueSizeSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/status/{annotation_queue_run_id}": {
      "post": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Create Identity Annotation Queue Run Status",
        "operationId": "create_identity_annotation_queue_run_status_api_v1_annotation_queues_status__annotation_queue_run_id__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "annotation_queue_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Annotation Queue Run Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityAnnotationQueueRunStatusCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ace/execute": {
      "post": {
        "tags": [
          "ace"
        ],
        "summary": "Execute",
        "description": "Execute some custom code for testing purposes.",
        "operationId": "execute_api_v1_ace_execute_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_execute_api_v1_ace_execute_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Execute Api V1 Ace Execute Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/bulk-exports": {
      "get": {
        "tags": [
          "bulk-exports"
        ],
        "summary": "Get Bulk Exports",
        "description": "Get the current workspace's bulk exports",
        "operationId": "get_bulk_exports_api_v1_bulk_exports_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BulkExport"
                  },
                  "type": "array",
                  "title": "Response Get Bulk Exports Api V1 Bulk Exports Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "bulk-exports"
        ],
        "summary": "Create Bulk Export",
        "description": "Create a new bulk export",
        "operationId": "create_bulk_export_api_v1_bulk_exports_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkExportCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkExport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/bulk-exports/destinations": {
      "get": {
        "tags": [
          "bulk-exports"
        ],
        "summary": "Get Bulk Export Destinations",
        "description": "Get the current workspace's bulk export destinations",
        "operationId": "get_bulk_export_destinations_api_v1_bulk_exports_destinations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BulkExportDestination"
                  },
                  "type": "array",
                  "title": "Response Get Bulk Export Destinations Api V1 Bulk Exports Destinations Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "bulk-exports"
        ],
        "summary": "Create Bulk Export Destination",
        "description": "Create a new bulk export destination",
        "operationId": "create_bulk_export_destination_api_v1_bulk_exports_destinations_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkExportDestinationCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkExportDestination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/bulk-exports/{bulk_export_id}": {
      "get": {
        "tags": [
          "bulk-exports"
        ],
        "summary": "Get Bulk Export",
        "description": "Get a single bulk export by ID",
        "operationId": "get_bulk_export_api_v1_bulk_exports__bulk_export_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "bulk_export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Bulk Export Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkExport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "bulk-exports"
        ],
        "summary": "Cancel Bulk Export",
        "description": "Cancel a bulk export by ID",
        "operationId": "cancel_bulk_export_api_v1_bulk_exports__bulk_export_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "bulk_export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Bulk Export Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkExportUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkExport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bulk-exports/destinations/{destination_id}": {
      "get": {
        "tags": [
          "bulk-exports"
        ],
        "summary": "Get Bulk Export Destination",
        "description": "Get a single bulk export destination by ID",
        "operationId": "get_bulk_export_destination_api_v1_bulk_exports_destinations__destination_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "destination_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Destination Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkExportDestination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bulk-exports/{bulk_export_id}/runs": {
      "get": {
        "tags": [
          "bulk-exports"
        ],
        "summary": "Get Bulk Export Runs",
        "description": "Get a bulk export's runs",
        "operationId": "get_bulk_export_runs_api_v1_bulk_exports__bulk_export_id__runs_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "bulk_export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Bulk Export Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkExportRun"
                  },
                  "title": "Response Get Bulk Export Runs Api V1 Bulk Exports  Bulk Export Id  Runs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bulk-exports/{bulk_export_id}/runs/{run_id}": {
      "get": {
        "tags": [
          "bulk-exports"
        ],
        "summary": "Get Bulk Export Run",
        "description": "Get a single bulk export's run by ID",
        "operationId": "get_bulk_export_run_api_v1_bulk_exports__bulk_export_id__runs__run_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "bulk_export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Bulk Export Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkExportRun"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "List Tenants",
        "description": "Get all tenants visible to this auth",
        "operationId": "list_tenants_api_v1_tenants_get",
        "security": [
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "skip_create",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Skip Create"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantForUser"
                  },
                  "title": "Response List Tenants Api V1 Tenants Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tenant"
        ],
        "summary": "Create Tenant",
        "description": "Create a new organization and corresponding workspace.",
        "operationId": "create_tenant_api_v1_tenants_post",
        "security": [
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__Tenant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/info": {
      "get": {
        "tags": [
          "info"
        ],
        "summary": "Get Server Info",
        "description": "Get information about the current deployment of LangSmith.",
        "operationId": "get_server_info_api_v1_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoGetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/info/health": {
      "get": {
        "tags": [
          "info"
        ],
        "summary": "Get Health Info",
        "description": "Get health information about the current deployment of LangSmith.",
        "operationId": "get_health_info_api_v1_info_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthInfoGetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback-configs": {
      "get": {
        "tags": [
          "feedback-configs"
        ],
        "summary": "List Feedback Configs Endpoint",
        "operationId": "list_feedback_configs_endpoint_api_v1_feedback_configs_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 50
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key"
            }
          },
          {
            "name": "read_after_write",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Read After Write"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackConfigSchema"
                  },
                  "title": "Response List Feedback Configs Endpoint Api V1 Feedback Configs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "feedback-configs"
        ],
        "summary": "Create Feedback Config Endpoint",
        "operationId": "create_feedback_config_endpoint_api_v1_feedback_configs_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedbackConfigSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackConfigSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "feedback-configs"
        ],
        "summary": "Update Feedback Config Endpoint",
        "operationId": "update_feedback_config_endpoint_api_v1_feedback_configs_patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeedbackConfigSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackConfigSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/model-price-map": {
      "get": {
        "tags": [
          "model-price-map"
        ],
        "summary": "Read Model Price Map",
        "operationId": "read_model_price_map_api_v1_model_price_map_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "model-price-map"
        ],
        "summary": "Create New Model Price",
        "operationId": "create_new_model_price_api_v1_model_price_map_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelPriceMapCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/model-price-map/{id}": {
      "put": {
        "tags": [
          "model-price-map"
        ],
        "summary": "Update Model Price",
        "operationId": "update_model_price_api_v1_model_price_map__id__put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelPriceMapUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model-price-map"
        ],
        "summary": "Delete Model Price",
        "operationId": "delete_model_price_api_v1_model_price_map__id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usage-limits": {
      "get": {
        "tags": [
          "usage-limits"
        ],
        "summary": "List Usage Limits",
        "description": "List out the configured usage limits for a given tenant.",
        "operationId": "list_usage_limits_api_v1_usage_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UsageLimit"
                  },
                  "type": "array",
                  "title": "Response List Usage Limits Api V1 Usage Limits Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "usage-limits"
        ],
        "summary": "Upsert Usage Limit",
        "description": "Create a new usage limit.",
        "operationId": "upsert_usage_limit_api_v1_usage_limits_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertUsageLimit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageLimit"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/usage-limits/org": {
      "get": {
        "tags": [
          "usage-limits"
        ],
        "summary": "List Org Usage Limits",
        "description": "List out the configured usage limits for a given organization.",
        "operationId": "list_org_usage_limits_api_v1_usage_limits_org_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UsageLimit"
                  },
                  "type": "array",
                  "title": "Response List Org Usage Limits Api V1 Usage Limits Org Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/usage-limits/{usage_limit_id}": {
      "delete": {
        "tags": [
          "usage-limits"
        ],
        "summary": "Delete Usage Limit",
        "description": "Delete a specific usage limit.",
        "operationId": "delete_usage_limit_api_v1_usage_limits__usage_limit_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "usage_limit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Usage Limit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ttl-settings": {
      "get": {
        "tags": [
          "ttl-settings"
        ],
        "summary": "List Ttl Settings",
        "description": "List out the configured TTL settings for a given tenant.",
        "operationId": "list_ttl_settings_api_v1_ttl_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TTLSettings"
                  },
                  "type": "array",
                  "title": "Response List Ttl Settings Api V1 Ttl Settings Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "ttl-settings"
        ],
        "summary": "Upsert Ttl Settings",
        "operationId": "upsert_ttl_settings_api_v1_ttl_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertTTLSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TTLSettings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/prompts/invoke_prompt": {
      "post": {
        "tags": [
          "prompts"
        ],
        "summary": "Invoke Prompt",
        "operationId": "invoke_prompt_api_v1_prompts_invoke_prompt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvokePromptPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/prompts/canvas": {
      "post": {
        "tags": [
          "prompts"
        ],
        "summary": "Prompt Canvas",
        "operationId": "prompt_canvas_api_v1_prompts_canvas_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaygroundPromptCanvasPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/workspaces": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List Workspaces",
        "description": "Get all workspaces visible to this auth in the current org. Does not create a new workspace/org.",
        "operationId": "list_workspaces_api_v1_workspaces_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantForUser"
                  },
                  "title": "Response List Workspaces Api V1 Workspaces Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Create Workspace",
        "description": "Create a new workspace.",
        "operationId": "create_workspace_api_v1_workspaces_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__Tenant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}": {
      "patch": {
        "tags": [
          "workspaces"
        ],
        "summary": "Patch Workspace",
        "operationId": "patch_workspace_api_v1_workspaces__workspace_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspacePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__Tenant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Delete Workspace",
        "operationId": "delete_workspace_api_v1_workspaces__workspace_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/pending": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List Pending Workspace Invites",
        "description": "Get all workspaces visible to this auth",
        "operationId": "list_pending_workspace_invites_api_v1_workspaces_pending_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__Tenant"
                  },
                  "type": "array",
                  "title": "Response List Pending Workspace Invites Api V1 Workspaces Pending Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/workspaces/pending/{id}": {
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Delete Pending Workspace Invite",
        "operationId": "delete_pending_workspace_invite_api_v1_workspaces_pending__id__delete",
        "security": [
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/pending/{workspace_id}/claim": {
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Claim Pending Workspace Invite",
        "operationId": "claim_pending_workspace_invite_api_v1_workspaces_pending__workspace_id__claim_post",
        "deprecated": true,
        "security": [
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/stats": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get Current Workspace Stats",
        "operationId": "get_current_workspace_stats_api_v1_workspaces_current_stats_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_value_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag Value Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/members": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get Current Workspace Members",
        "operationId": "get_current_workspace_members_api_v1_workspaces_current_members_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantMembers"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Add Member To Current Workspace",
        "description": "Add an existing organization member to the current workspace.",
        "operationId": "add_member_to_current_workspace_api_v1_workspaces_current_members_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/workspaces/current/members/active": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get Current Active Workspace Members",
        "operationId": "get_current_active_workspace_members_api_v1_workspaces_current_members_active_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "emails",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [],
              "title": "Emails"
            }
          },
          {
            "name": "ls_user_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "default": [],
              "title": "Ls User Ids"
            }
          },
          {
            "name": "user_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "default": [],
              "title": "User Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberIdentity"
                  },
                  "title": "Response Get Current Active Workspace Members Api V1 Workspaces Current Members Active Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/members/pending": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get Current Pending Workspace Members",
        "operationId": "get_current_pending_workspace_members_api_v1_workspaces_current_members_pending_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "emails",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [],
              "title": "Emails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PendingIdentity"
                  },
                  "title": "Response Get Current Pending Workspace Members Api V1 Workspaces Current Members Pending Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/members/batch": {
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Add Members To Current Workspace Batch",
        "description": "Batch invite up to 500 users to the current workspace and organization.",
        "operationId": "add_members_to_current_workspace_batch_api_v1_workspaces_current_members_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/PendingIdentityCreate"
                },
                "type": "array",
                "title": "Payloads"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PendingIdentity"
                  },
                  "type": "array",
                  "title": "Response Add Members To Current Workspace Batch Api V1 Workspaces Current Members Batch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          },
          {
            "Organization ID": []
          }
        ]
      }
    },
    "/api/v1/workspaces/current/shared": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get Shared Tokens",
        "description": "List all shared entities and their tokens by the workspace.",
        "operationId": "get_shared_tokens_api_v1_workspaces_current_shared_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantShareTokensResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Bulk Unshare Entities",
        "description": "Bulk unshare entities by share tokens for the workspace.",
        "operationId": "bulk_unshare_entities_api_v1_workspaces_current_shared_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantBulkUnshareRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/members/{identity_id}": {
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Delete Current Workspace Member",
        "operationId": "delete_current_workspace_member_api_v1_workspaces_current_members__identity_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "workspaces"
        ],
        "summary": "Patch Current Workspace Member",
        "operationId": "patch_current_workspace_member_api_v1_workspaces_current_members__identity_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/members/{identity_id}/pending": {
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Delete Current Workspace Pending Member",
        "operationId": "delete_current_workspace_pending_member_api_v1_workspaces_current_members__identity_id__pending_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/usage_limits": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get Current Workspace Usage Limits Info",
        "operationId": "get_current_workspace_usage_limits_info_api_v1_workspaces_current_usage_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantUsageLimitInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/workspaces/current/secrets": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List Current Workspace Secrets",
        "operationId": "list_current_workspace_secrets_api_v1_workspaces_current_secrets_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SecretKey"
                  },
                  "type": "array",
                  "title": "Response List Current Workspace Secrets Api V1 Workspaces Current Secrets Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Upsert Current Workspace Secrets",
        "operationId": "upsert_current_workspace_secrets_api_v1_workspaces_current_secrets_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/SecretUpsert"
                },
                "type": "array",
                "title": "Secrets"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/workspaces/current/tag-keys": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List Tag Keys",
        "operationId": "list_tag_keys_api_v1_workspaces_current_tag_keys_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TagKey"
                  },
                  "type": "array",
                  "title": "Response List Tag Keys Api V1 Workspaces Current Tag Keys Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Create Tag Key",
        "operationId": "create_tag_key_api_v1_workspaces_current_tag_keys_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagKeyCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagKey"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/workspaces/current/tag-keys/{tag_key_id}": {
      "patch": {
        "tags": [
          "workspaces"
        ],
        "summary": "Update Tag Key",
        "operationId": "update_tag_key_api_v1_workspaces_current_tag_keys__tag_key_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Key Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagKeyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagKey"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get Tag Key",
        "operationId": "get_tag_key_api_v1_workspaces_current_tag_keys__tag_key_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagKey"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Delete Tag Key",
        "operationId": "delete_tag_key_api_v1_workspaces_current_tag_keys__tag_key_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/tag-keys/{tag_key_id}/tag-values": {
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Create Tag Value",
        "operationId": "create_tag_value_api_v1_workspaces_current_tag_keys__tag_key_id__tag_values_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Key Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagValueCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagValue"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List Tag Values",
        "operationId": "list_tag_values_api_v1_workspaces_current_tag_keys__tag_key_id__tag_values_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagValue"
                  },
                  "title": "Response List Tag Values Api V1 Workspaces Current Tag Keys  Tag Key Id  Tag Values Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/tag-keys/{tag_key_id}/tag-values/{tag_value_id}": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get Tag Value",
        "operationId": "get_tag_value_api_v1_workspaces_current_tag_keys__tag_key_id__tag_values__tag_value_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Key Id"
            }
          },
          {
            "name": "tag_value_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Value Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagValue"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "workspaces"
        ],
        "summary": "Update Tag Value",
        "operationId": "update_tag_value_api_v1_workspaces_current_tag_keys__tag_key_id__tag_values__tag_value_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Key Id"
            }
          },
          {
            "name": "tag_value_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Value Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagValueUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagValue"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Delete Tag Value",
        "operationId": "delete_tag_value_api_v1_workspaces_current_tag_keys__tag_key_id__tag_values__tag_value_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Key Id"
            }
          },
          {
            "name": "tag_value_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Value Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/taggings": {
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Create Tagging",
        "operationId": "create_tagging_api_v1_workspaces_current_taggings_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaggingCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tagging"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List Taggings",
        "operationId": "list_taggings_api_v1_workspaces_current_taggings_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_value_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag Value Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaggingsResponse"
                  },
                  "title": "Response List Taggings Api V1 Workspaces Current Taggings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/taggings/{tagging_id}": {
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Delete Tagging",
        "operationId": "delete_tagging_api_v1_workspaces_current_taggings__tagging_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tagging_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tagging Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/tags": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List Tags",
        "operationId": "list_tags_api_v1_workspaces_current_tags_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TagKeyWithValues"
                  },
                  "type": "array",
                  "title": "Response List Tags Api V1 Workspaces Current Tags Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/workspaces/current/tags/resource": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List Tags For Resource",
        "operationId": "list_tags_for_resource_api_v1_workspaces_current_tags_resource_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "resource_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ResourceType"
            }
          },
          {
            "name": "resource_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagKeyWithValuesAndTaggings"
                  },
                  "title": "Response List Tags For Resource Api V1 Workspaces Current Tags Resource Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/current/tags/resources": {
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "List Tags For Resources",
        "operationId": "list_tags_for_resources_api_v1_workspaces_current_tags_resources_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ListTagsForResourceRequest"
                },
                "type": "array",
                "title": "Resources"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "$ref": "#/components/schemas/TagKeyWithValuesAndTaggings"
                    },
                    "type": "array"
                  },
                  "propertyNames": {
                    "format": "uuid"
                  },
                  "type": "object",
                  "title": "Response List Tags For Resources Api V1 Workspaces Current Tags Resources Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/playground-settings": {
      "get": {
        "tags": [
          "playground-settings"
        ],
        "summary": "List Playground Settings",
        "description": "Get all playground settings for this tenant id.",
        "operationId": "list_playground_settings_api_v1_playground_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlaygroundSettingsResponse"
                  },
                  "type": "array",
                  "title": "Response List Playground Settings Api V1 Playground Settings Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "playground-settings"
        ],
        "summary": "Create Playground Settings",
        "description": "Create playground settings.",
        "operationId": "create_playground_settings_api_v1_playground_settings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaygroundSettingsCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaygroundSettingsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/playground-settings/{playground_settings_id}": {
      "patch": {
        "tags": [
          "playground-settings"
        ],
        "summary": "Update Playground Settings",
        "description": "Update playground settings.",
        "operationId": "update_playground_settings_api_v1_playground_settings__playground_settings_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "playground_settings_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Playground Settings Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaygroundSettingsUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaygroundSettingsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "playground-settings"
        ],
        "summary": "Delete Playground Settings",
        "description": "Delete playground settings.",
        "operationId": "delete_playground_settings_api_v1_playground_settings__playground_settings_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "playground_settings_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Playground Settings Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service-accounts": {
      "get": {
        "tags": [
          "service-accounts"
        ],
        "summary": "Get Service Accounts",
        "description": "Get the current organization's service accounts.",
        "operationId": "get_service_accounts_api_v1_service_accounts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ServiceAccount"
                  },
                  "type": "array",
                  "title": "Response Get Service Accounts Api V1 Service Accounts Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "service-accounts"
        ],
        "summary": "Create Service Account",
        "description": "Create a service account",
        "operationId": "create_service_account_api_v1_service_accounts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAccountCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAccountCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/service-accounts/{service_account_id}": {
      "delete": {
        "tags": [
          "service-accounts"
        ],
        "summary": "Delete Service Account",
        "description": "Delete a service account",
        "operationId": "delete_service_account_api_v1_service_accounts__service_account_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "service_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Account Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAccountDeleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/charts/section": {
      "get": {
        "tags": [
          "charts"
        ],
        "summary": "Read Sections",
        "description": "Get all sections for the tenant.",
        "operationId": "read_sections_api_v1_charts_section_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "title_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title Contains"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ids"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": true,
              "title": "Sort By Desc"
            }
          },
          {
            "name": "tag_value_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag Value Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomChartsSectionResponse"
                  },
                  "title": "Response Read Sections Api V1 Charts Section Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Create Section",
        "description": "Create a new section.",
        "operationId": "create_section_api_v1_charts_section_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsSectionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartsSectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/charts": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Read Charts",
        "description": "Get all charts for the tenant.",
        "operationId": "read_charts_api_v1_charts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/charts/preview": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Read Chart Preview",
        "description": "Get a preview for a chart without actually creating it.",
        "operationId": "read_chart_preview_api_v1_charts_preview_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartPreviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleCustomChartResponseBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/charts/create": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Create Chart",
        "description": "Create a new chart.",
        "operationId": "create_chart_api_v1_charts_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/charts/{chart_id}": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Read Single Chart",
        "description": "Get a single chart by ID.",
        "operationId": "read_single_chart_api_v1_charts__chart_id__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "chart_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chart Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleCustomChartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "charts"
        ],
        "summary": "Update Chart",
        "description": "Update a chart.",
        "operationId": "update_chart_api_v1_charts__chart_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "chart_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chart Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "charts"
        ],
        "summary": "Delete Chart",
        "description": "Delete a chart.",
        "operationId": "delete_chart_api_v1_charts__chart_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "chart_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chart Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/charts/section/{section_id}": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Read Single Section",
        "description": "Get a single section by ID.",
        "operationId": "read_single_section_api_v1_charts_section__section_id__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Section Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsSectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartsSection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "charts"
        ],
        "summary": "Update Section",
        "description": "Update a section.",
        "operationId": "update_section_api_v1_charts_section__section_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Section Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsSectionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartsSectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "charts"
        ],
        "summary": "Delete Section",
        "description": "Delete a section.",
        "operationId": "delete_section_api_v1_charts_section__section_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Section Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/org-charts/section": {
      "get": {
        "tags": [
          "charts"
        ],
        "summary": "Org Read Sections",
        "description": "Get all sections for the tenant.",
        "operationId": "org_read_sections_api_v1_org_charts_section_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "title_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title Contains"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ids"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": true,
              "title": "Sort By Desc"
            }
          },
          {
            "name": "tag_value_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag Value Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomChartsSectionResponse"
                  },
                  "title": "Response Org Read Sections Api V1 Org Charts Section Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Org Create Section",
        "description": "Create a new section.",
        "operationId": "org_create_section_api_v1_org_charts_section_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsSectionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartsSectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/org-charts": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Org Read Charts",
        "description": "Get all charts for the tenant.",
        "operationId": "org_read_charts_api_v1_org_charts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/org-charts/preview": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Org Read Chart Preview",
        "description": "Get a preview for a chart without actually creating it.",
        "operationId": "org_read_chart_preview_api_v1_org_charts_preview_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartPreviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleCustomChartResponseBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/org-charts/create": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Org Create Chart",
        "description": "Create a new chart.",
        "operationId": "org_create_chart_api_v1_org_charts_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/org-charts/{chart_id}": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Org Read Single Chart",
        "description": "Get a single chart by ID.",
        "operationId": "org_read_single_chart_api_v1_org_charts__chart_id__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "chart_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chart Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleCustomChartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "charts"
        ],
        "summary": "Org Update Chart",
        "description": "Update a chart.",
        "operationId": "org_update_chart_api_v1_org_charts__chart_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "chart_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chart Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "charts"
        ],
        "summary": "Org Delete Chart",
        "description": "Delete a chart.",
        "operationId": "org_delete_chart_api_v1_org_charts__chart_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "chart_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chart Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/org-charts/section/{section_id}": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Org Read Single Section",
        "description": "Get a single section by ID.",
        "operationId": "org_read_single_section_api_v1_org_charts_section__section_id__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Section Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsRequestBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartsSection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "charts"
        ],
        "summary": "Org Update Section",
        "description": "Update a section.",
        "operationId": "org_update_section_api_v1_org_charts_section__section_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Section Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomChartsSectionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomChartsSectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "charts"
        ],
        "summary": "Org Delete Section",
        "description": "Delete a section.",
        "operationId": "org_delete_section_api_v1_org_charts_section__section_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Organization ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Section Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ok": {
      "get": {
        "summary": "Ok",
        "operationId": "ok_api_v1_ok_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/repos": {
      "get": {
        "tags": [
          "repos"
        ],
        "summary": "List Repos",
        "description": "Get all repos.",
        "operationId": "list_repos_api_v1_repos_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "with_latest_manifest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "With Latest Manifest"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "tenant_handle",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenant Handle"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenant Id"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Query"
            }
          },
          {
            "name": "has_commits",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Commits"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            }
          },
          {
            "name": "is_archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "true",
                    "allow",
                    "false"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Archived"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Public"
            }
          },
          {
            "name": "upstream_repo_owner",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Upstream Repo Owner"
            }
          },
          {
            "name": "upstream_repo_handle",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Upstream Repo Handle"
            }
          },
          {
            "name": "tag_value_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag Value Id"
            }
          },
          {
            "name": "sort_field",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort Field"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "asc",
                  "type": "string"
                },
                {
                  "const": "desc",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListReposResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "repos"
        ],
        "summary": "Create Repo",
        "description": "Create a repo.",
        "operationId": "create_repo_api_v1_repos_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRepoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRepoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/{owner}/{repo}": {
      "get": {
        "tags": [
          "repos"
        ],
        "summary": "Get Repo",
        "description": "Get a repo.",
        "operationId": "get_repo_api_v1_repos__owner___repo__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRepoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "repos"
        ],
        "summary": "Update Repo",
        "description": "Update a repo.",
        "operationId": "update_repo_api_v1_repos__owner___repo__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRepoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRepoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "repos"
        ],
        "summary": "Delete Repo",
        "description": "Delete a repo.",
        "operationId": "delete_repo_api_v1_repos__owner___repo__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/{owner}/{repo}/fork": {
      "post": {
        "tags": [
          "repos"
        ],
        "summary": "Fork Repo",
        "description": "Fork a repo.",
        "operationId": "fork_repo_api_v1_repos__owner___repo__fork_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForkRepoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRepoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/tags": {
      "get": {
        "tags": [
          "repos"
        ],
        "summary": "List Repo Tags",
        "description": "Get all repo tags.",
        "operationId": "list_repo_tags_api_v1_repos_tags_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "tenant_handle",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenant Handle"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenant Id"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Query"
            }
          },
          {
            "name": "has_commits",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Commits"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            }
          },
          {
            "name": "is_archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "true",
                    "allow",
                    "false"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Archived"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Public"
            }
          },
          {
            "name": "upstream_repo_owner",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Upstream Repo Owner"
            }
          },
          {
            "name": "upstream_repo_handle",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Upstream Repo Handle"
            }
          },
          {
            "name": "tag_value_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag Value Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTagsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/optimize-job": {
      "post": {
        "tags": [
          "repos"
        ],
        "summary": "Optimize Prompt Job",
        "description": "Optimize prompt",
        "operationId": "optimize_prompt_job_api_v1_repos_optimize_job_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptimizePromptJobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizePromptResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/likes/{owner}/{repo}": {
      "post": {
        "tags": [
          "likes"
        ],
        "summary": "Like Repo",
        "description": "Like a repo.",
        "operationId": "like_repo_api_v1_likes__owner___repo__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LikeRepoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LikeRepoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commits/{owner}/{repo}": {
      "get": {
        "tags": [
          "commits"
        ],
        "summary": "List Commits",
        "description": "Get all commits.",
        "operationId": "list_commits_api_v1_commits__owner___repo__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCommitsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "commits"
        ],
        "summary": "Create Commit",
        "description": "Upload a repo.",
        "operationId": "create_commit_api_v1_commits__owner___repo__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRepoCommitRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRepoCommitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commits/{owner}/{repo}/{commit}": {
      "get": {
        "tags": [
          "commits"
        ],
        "summary": "Get Commit",
        "description": "Download a repo.",
        "operationId": "get_commit_api_v1_commits__owner___repo___commit__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "commit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Commit"
            }
          },
          {
            "name": "get_examples",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Get Examples"
            }
          },
          {
            "name": "is_view",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Is View"
            }
          },
          {
            "name": "include_model",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Include Model"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommitManifestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get Settings",
        "description": "Get settings.",
        "operationId": "get_settings_api_v1_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__hub__crud__tenants__Tenant"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/settings/handle": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Set Tenant Handle",
        "description": "Set tenant handle.",
        "operationId": "set_tenant_handle_api_v1_settings_handle_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTenantHandleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__hub__crud__tenants__Tenant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/events": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Create Event",
        "operationId": "create_event_api_v1_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/comments/{owner}/{repo}": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Create Comment",
        "operationId": "create_comment_api_v1_comments__owner___repo__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Get Comments",
        "operationId": "get_comments_api_v1_comments__owner___repo__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCommentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/comments/{owner}/{repo}/{parent_comment_id}": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Get Sub Comments",
        "operationId": "get_sub_comments_api_v1_comments__owner___repo___parent_comment_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "parent_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Parent Comment Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCommentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Create Sub Comment",
        "operationId": "create_sub_comment_api_v1_comments__owner___repo___parent_comment_id__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "parent_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Parent Comment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/comments/{owner}/{repo}/{parent_comment_id}/like": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Like Comment",
        "operationId": "like_comment_api_v1_comments__owner___repo___parent_comment_id__like_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "parent_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Parent Comment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Like Comment Api V1 Comments  Owner   Repo   Parent Comment Id  Like Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Unlike Comment",
        "operationId": "unlike_comment_api_v1_comments__owner___repo___parent_comment_id__like_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "parent_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Parent Comment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Unlike Comment Api V1 Comments  Owner   Repo   Parent Comment Id  Like Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/{owner}/{repo}/tags": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "Get Tags",
        "operationId": "get_tags_api_v1_repos__owner___repo__tags_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RepoTag"
                  },
                  "title": "Response Get Tags Api V1 Repos  Owner   Repo  Tags Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "Create Tag",
        "operationId": "create_tag_api_v1_repos__owner___repo__tags_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepoTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepoTag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/{owner}/{repo}/tags/{tag_name}": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "Get Tag",
        "operationId": "get_tag_api_v1_repos__owner___repo__tags__tag_name__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tag Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepoTag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tags"
        ],
        "summary": "Update Tag",
        "operationId": "update_tag_api_v1_repos__owner___repo__tags__tag_name__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tag Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepoUpdateTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepoTag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tags"
        ],
        "summary": "Delete Tag",
        "operationId": "delete_tag_api_v1_repos__owner___repo__tags__tag_name__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tag Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/{owner}/{repo}/optimization-jobs": {
      "get": {
        "tags": [
          "optimization-jobs"
        ],
        "summary": "List Jobs",
        "description": "List all prompt optimization jobs.",
        "operationId": "list_jobs_api_v1_repos__owner___repo__optimization_jobs_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromptOptimizationJob"
                  },
                  "title": "Response List Jobs Api V1 Repos  Owner   Repo  Optimization Jobs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "optimization-jobs"
        ],
        "summary": "Create Job",
        "description": "Create a new prompt optimization job.",
        "operationId": "create_job_api_v1_repos__owner___repo__optimization_jobs_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptOptimizationJobCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptOptimizationJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/{owner}/{repo}/optimization-jobs/{job_id}": {
      "get": {
        "tags": [
          "optimization-jobs"
        ],
        "summary": "Get Job",
        "description": "Get a specific optimization job.",
        "operationId": "get_job_api_v1_repos__owner___repo__optimization_jobs__job_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptOptimizationJobWithLogs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "optimization-jobs"
        ],
        "summary": "Update Job",
        "description": "Replace an existing prompt optimization job with a new, modified job.",
        "operationId": "update_job_api_v1_repos__owner___repo__optimization_jobs__job_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Job Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptOptimizationJobUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptOptimizationJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "optimization-jobs"
        ],
        "summary": "Delete Job",
        "description": "Delete a prompt optimization job.",
        "operationId": "delete_job_api_v1_repos__owner___repo__optimization_jobs__job_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/{owner}/{repo}/optimization-jobs/{job_id}/logs": {
      "get": {
        "tags": [
          "optimization-jobs"
        ],
        "summary": "List Job Logs",
        "description": "List all logs for a specific prompt optimization job.",
        "operationId": "list_job_logs_api_v1_repos__owner___repo__optimization_jobs__job_id__logs_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromptOptimizationJobLog"
                  },
                  "title": "Response List Job Logs Api V1 Repos  Owner   Repo  Optimization Jobs  Job Id  Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "optimization-jobs"
        ],
        "summary": "Create Log",
        "description": "Create a new log entry for a prompt optimization job.",
        "operationId": "create_log_api_v1_repos__owner___repo__optimization_jobs__job_id__logs_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Job Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptOptimizationJobLogCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptOptimizationJobLog"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/{owner}/{repo}/optimization-jobs/{job_id}/logs/{log_id}": {
      "get": {
        "tags": [
          "optimization-jobs"
        ],
        "summary": "Get Log",
        "description": "Get a specific prompt optimization job log.",
        "operationId": "get_log_api_v1_repos__owner___repo__optimization_jobs__job_id__logs__log_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "log_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Log Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptOptimizationJobLog"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "optimization-jobs"
        ],
        "summary": "Delete Log",
        "description": "Delete a prompt optimization job log.",
        "operationId": "delete_log_api_v1_repos__owner___repo__optimization_jobs__job_id__logs__log_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "log_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Log Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/datasets/{dataset_id}/examples": {
      "post": {
        "description": "This endpoint allows clients to upload examples to a specified dataset by sending a multipart/form-data POST request.\nEach form part contains either JSON-encoded data or binary attachment files associated with an example.",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "examples"
        ],
        "summary": "Upload Examples",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Dataset ID",
            "name": "dataset_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ExamplesCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "{example_id}": {
                    "type": "string",
                    "format": "binary",
                    "description": "The Example info as JSON. Can have fields 'metadata', 'split', 'use_source_run_io', 'source_run_id', 'created_at', 'modified_at'"
                  },
                  "{example_id}.inputs": {
                    "type": "string",
                    "format": "binary",
                    "description": "The Example inputs as JSON"
                  },
                  "{example_id}.outputs": {
                    "type": "string",
                    "format": "binary",
                    "description": "THe Example outputs as JSON"
                  },
                  "{example_id}.attachments.{name}": {
                    "type": "string",
                    "format": "binary",
                    "description": "File attachment named {name}"
                  }
                },
                "required": [
                  "{example_id}",
                  "{example_id}.inputs"
                ]
              }
            }
          }
        }
      },
      "patch": {
        "description": "This endpoint allows clients to update existing examples in a specified dataset by sending a multipart/form-data PATCH request.\nEach form part contains either JSON-encoded data or binary attachment files to update an example.",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "examples"
        ],
        "summary": "Update Examples",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Dataset ID",
            "name": "dataset_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ExamplesUpdatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/examples.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "{example_id}": {
                    "type": "string",
                    "format": "binary",
                    "description": "The Example update info as JSON. Can have fields 'metadata', 'split'"
                  },
                  "{example_id}.inputs": {
                    "type": "string",
                    "format": "binary",
                    "description": "The updated Example inputs as JSON"
                  },
                  "{example_id}.outputs": {
                    "type": "string",
                    "format": "binary",
                    "description": "The updated Example outputs as JSON"
                  },
                  "{example_id}.attachments_operations": {
                    "type": "string",
                    "format": "binary",
                    "description": "JSON describing attachment operations (retain, rename)"
                  },
                  "{example_id}.attachment.{name}": {
                    "type": "string",
                    "format": "binary",
                    "description": "New file attachment named {name}"
                  }
                },
                "required": [
                  "{example_id}"
                ]
              }
            }
          }
        }
      }
    },
    "/runs": {
      "post": {
        "description": "Queues a single run for ingestion. The request body must be a JSON-encoded run object that follows the Run schema.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "runs"
        ],
        "summary": "Create a Run",
        "parameters": [
          {
            "description": "Run object",
            "name": "run",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/runs.Run"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Run created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "allOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runs/batch": {
      "post": {
        "description": "Ingests a batch of runs in a single JSON payload. The payload must have `post` and/or `patch` arrays containing run objects. \\\nPrefer this endpoint over single‑run ingestion when submitting hundreds of runs, but `/runs/multipart` offers better handling for very large fields and attachments.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "runs"
        ],
        "summary": "Ingest Runs (Batch JSON)",
        "parameters": [
          {
            "description": "Batch payload with 'post' and 'patch' arrays",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Runs batch ingested",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "allOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runs/multipart": {
      "post": {
        "description": "Ingests multiple runs, feedback objects, and binary attachments in a single `multipart/form-data` request.  \\\n**Part‑name pattern**: `<event>.<run_id>[.<field>]` where `event` ∈ {`post`, `patch`, `feedback`, `attachment`}.  \\\n* `post|patch.<run_id>` – JSON run payload.  \\\n* `post|patch.<run_id>.<field>` – out‑of‑band run data (`inputs`, `outputs`, `events`, `error`, `extra`, `serialized`).  \\\n* `feedback.<run_id>` – JSON feedback payload (must include `trace_id`).  \\\n* `attachment.<run_id>.<filename>` – arbitrary binary attachment stored in S3.  \\\n**Headers**: every part must set `Content-Type` **and** either a `Content-Length` header or `length` parameter. Per‑part `Content-Encoding` is **not** allowed; the top‑level request may be `Content-Encoding: zstd`.  \\\n**Best performance** for high‑volume ingestion.",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "runs"
        ],
        "summary": "Ingest Runs (Multipart)",
        "parameters": [],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "post.{run_id}": {
                    "type": "string",
                    "format": "binary",
                    "description": "Run to create (JSON)"
                  },
                  "patch.{run_id}": {
                    "type": "string",
                    "format": "binary",
                    "description": "Run to update (JSON)"
                  },
                  "post.{run_id}.inputs": {
                    "type": "string",
                    "format": "binary",
                    "description": "Large inputs object (JSON) stored out‑of‑band"
                  },
                  "patch.{run_id}.outputs": {
                    "type": "string",
                    "format": "binary",
                    "description": "Large outputs object (JSON) stored out‑of‑band"
                  },
                  "feedback.{run_id}": {
                    "type": "string",
                    "format": "binary",
                    "description": "Feedback object (JSON) – must include trace_id"
                  },
                  "attachment.{run_id}.{filename}": {
                    "type": "file",
                    "format": "binary",
                    "description": "Binary attachment linked to run {run_id}"
                  }
                },
                "required": []
              }
            }
          }
        }
      }
    },
    "/runs/{run_id}": {
      "patch": {
        "description": "Updates a run identified by its ID. The body should contain only the fields to be changed; unknown fields are ignored.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "runs"
        ],
        "summary": "Update a Run",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Run ID",
            "name": "run_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Run update",
            "name": "run",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/runs.Run"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Run updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "allOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/runs.ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AIMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "ai",
            "title": "Type",
            "default": "ai"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "example": {
            "type": "boolean",
            "title": "Example",
            "default": false
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ToolCall"
            },
            "type": "array",
            "title": "Tool Calls",
            "default": []
          },
          "invalid_tool_calls": {
            "items": {
              "$ref": "#/components/schemas/InvalidToolCall"
            },
            "type": "array",
            "title": "Invalid Tool Calls",
            "default": []
          },
          "usage_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UsageMetadata"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "AIMessage",
        "description": "Message from an AI.\n\nAIMessage is returned from a chat model as a response to a prompt.\n\nThis message represents the output of the model and consists of both\nthe raw output as returned by the model together standardized fields\n(e.g., tool calls, usage metadata) added by the LangChain framework."
      },
      "AIMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "AIMessageChunk",
            "title": "Type",
            "default": "AIMessageChunk"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "example": {
            "type": "boolean",
            "title": "Example",
            "default": false
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ToolCall"
            },
            "type": "array",
            "title": "Tool Calls",
            "default": []
          },
          "invalid_tool_calls": {
            "items": {
              "$ref": "#/components/schemas/InvalidToolCall"
            },
            "type": "array",
            "title": "Invalid Tool Calls",
            "default": []
          },
          "usage_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UsageMetadata"
              },
              {
                "type": "null"
              }
            ]
          },
          "tool_call_chunks": {
            "items": {
              "$ref": "#/components/schemas/ToolCallChunk"
            },
            "type": "array",
            "title": "Tool Call Chunks",
            "default": []
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "AIMessageChunk",
        "description": "Message chunk from an AI."
      },
      "APIFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "api"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "APIFeedbackSource",
        "description": "API feedback source."
      },
      "APIKeyCreateRequest": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description",
            "default": "Default API key"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          }
        },
        "type": "object",
        "title": "APIKeyCreateRequest",
        "description": "API key POST schema."
      },
      "APIKeyCreateResponse": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "short_key": {
            "type": "string",
            "title": "Short Key"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "key": {
            "type": "string",
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "id",
          "short_key",
          "description",
          "key"
        ],
        "title": "APIKeyCreateResponse",
        "description": "API key POST schema."
      },
      "APIKeyGetResponse": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "short_key": {
            "type": "string",
            "title": "Short Key"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "short_key",
          "description"
        ],
        "title": "APIKeyGetResponse",
        "description": "API key GET schema."
      },
      "AccessScope": {
        "type": "string",
        "enum": [
          "organization",
          "workspace"
        ],
        "title": "AccessScope"
      },
      "AllowedLoginMethodsUpdate": {
        "properties": {
          "sso_only": {
            "type": "boolean",
            "title": "Sso Only"
          }
        },
        "type": "object",
        "required": [
          "sso_only"
        ],
        "title": "AllowedLoginMethodsUpdate"
      },
      "AnnotationQueueBulkDeleteRunsRequest": {
        "properties": {
          "delete_all": {
            "type": "boolean",
            "title": "Delete All",
            "default": false
          },
          "run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Ids"
          },
          "exclude_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exclude Run Ids"
          }
        },
        "type": "object",
        "title": "AnnotationQueueBulkDeleteRunsRequest"
      },
      "AnnotationQueueCreateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "num_reviewers_per_item": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Reviewers Per Item",
            "default": 1
          },
          "enable_reservations": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Reservations",
            "default": true
          },
          "reservation_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservation Minutes",
            "default": 1
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "rubric_items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnnotationQueueRubricItemSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Items"
          },
          "rubric_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Instructions"
          },
          "session_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Ids"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "AnnotationQueueCreateSchema",
        "description": "AnnotationQueue schema."
      },
      "AnnotationQueueRubricItemSchema": {
        "properties": {
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "value_descriptions": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value Descriptions"
          },
          "score_descriptions": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score Descriptions"
          }
        },
        "type": "object",
        "required": [
          "feedback_key"
        ],
        "title": "AnnotationQueueRubricItemSchema"
      },
      "AnnotationQueueRunSchema": {
        "properties": {
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "queue_id": {
            "type": "string",
            "format": "uuid",
            "title": "Queue Id"
          },
          "last_reviewed_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Reviewed Time"
          },
          "added_at": {
            "type": "string",
            "format": "date-time",
            "title": "Added At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "queue_id",
          "id"
        ],
        "title": "AnnotationQueueRunSchema"
      },
      "AnnotationQueueRunUpdateSchema": {
        "properties": {
          "last_reviewed_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Reviewed Time"
          },
          "added_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Added At"
          }
        },
        "type": "object",
        "title": "AnnotationQueueRunUpdateSchema"
      },
      "AnnotationQueueSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "num_reviewers_per_item": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Reviewers Per Item",
            "default": 1
          },
          "enable_reservations": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Reservations",
            "default": true
          },
          "reservation_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservation Minutes",
            "default": 1
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "source_rule_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Rule Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id"
        ],
        "title": "AnnotationQueueSchema",
        "description": "AnnotationQueue schema."
      },
      "AnnotationQueueSchemaWithRubric": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "num_reviewers_per_item": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Reviewers Per Item",
            "default": 1
          },
          "enable_reservations": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Reservations",
            "default": true
          },
          "reservation_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservation Minutes",
            "default": 1
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "source_rule_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Rule Id"
          },
          "rubric_items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnnotationQueueRubricItemSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Items"
          },
          "rubric_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Instructions"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id"
        ],
        "title": "AnnotationQueueSchemaWithRubric",
        "description": "AnnotationQueue schema with rubric."
      },
      "AnnotationQueueSchemaWithSize": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "num_reviewers_per_item": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Reviewers Per Item",
            "default": 1
          },
          "enable_reservations": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Reservations",
            "default": true
          },
          "reservation_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservation Minutes",
            "default": 1
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "source_rule_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Rule Id"
          },
          "total_runs": {
            "type": "integer",
            "title": "Total Runs"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id",
          "total_runs"
        ],
        "title": "AnnotationQueueSchemaWithSize",
        "description": "AnnotationQueue schema with size."
      },
      "AnnotationQueueSizeSchema": {
        "properties": {
          "size": {
            "type": "integer",
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "size"
        ],
        "title": "AnnotationQueueSizeSchema",
        "description": "Size of an Annotation Queue"
      },
      "AnnotationQueueUpdateSchema": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "num_reviewers_per_item": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Reviewers Per Item",
            "default": 1
          },
          "enable_reservations": {
            "type": "boolean",
            "title": "Enable Reservations",
            "default": true
          },
          "reservation_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservation Minutes"
          },
          "rubric_items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnnotationQueueRubricItemSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Items"
          },
          "rubric_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Instructions"
          }
        },
        "type": "object",
        "title": "AnnotationQueueUpdateSchema",
        "description": "AnnotationQueue update schema."
      },
      "AppFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "app"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "AppFeedbackSource",
        "description": "Feedback from the LangChainPlus App."
      },
      "Artifact": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "contents": {
            "items": {
              "$ref": "#/components/schemas/ArtifactContent"
            },
            "type": "array",
            "title": "Contents"
          },
          "current_content_index": {
            "type": "integer",
            "title": "Current Content Index"
          }
        },
        "type": "object",
        "required": [
          "id",
          "contents",
          "current_content_index"
        ],
        "title": "Artifact"
      },
      "ArtifactContent": {
        "properties": {
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "index",
          "content"
        ],
        "title": "ArtifactContent"
      },
      "AttachmentsOperations": {
        "properties": {
          "rename": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Rename",
            "description": "Mapping of old attachment names to new names"
          },
          "retain": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Retain",
            "description": "List of attachment names to keep"
          }
        },
        "type": "object",
        "title": "AttachmentsOperations"
      },
      "AuthProvider": {
        "type": "string",
        "enum": [
          "email",
          "supabase:non-sso",
          "supabase:sso",
          "oidc",
          "custom-oidc"
        ],
        "title": "AuthProvider"
      },
      "AutoEvalFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "auto_eval"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "AutoEvalFeedbackSource",
        "description": "Auto eval feedback source."
      },
      "BasicAuthMemberCreate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "ls_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ls User Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "workspace_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role Id"
          },
          "workspace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Ids"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "BasicAuthMemberCreate"
      },
      "BasicAuthResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "BasicAuthResponse"
      },
      "BasicAuthUserPatch": {
        "properties": {
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "title": "BasicAuthUserPatch"
      },
      "BatchIngestConfig": {
        "properties": {
          "use_multipart_endpoint": {
            "type": "boolean",
            "title": "Use Multipart Endpoint",
            "default": true
          },
          "scale_up_qsize_trigger": {
            "type": "integer",
            "title": "Scale Up Qsize Trigger",
            "default": 1000
          },
          "scale_up_nthreads_limit": {
            "type": "integer",
            "title": "Scale Up Nthreads Limit",
            "default": 16
          },
          "scale_down_nempty_trigger": {
            "type": "integer",
            "title": "Scale Down Nempty Trigger",
            "default": 4
          },
          "size_limit": {
            "type": "integer",
            "title": "Size Limit",
            "default": 100
          },
          "size_limit_bytes": {
            "type": "integer",
            "title": "Size Limit Bytes",
            "default": 20971520
          }
        },
        "type": "object",
        "title": "BatchIngestConfig",
        "description": "Batch ingest config."
      },
      "BodyParamsForRunSchema": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "trace": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace"
          },
          "parent_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run"
          },
          "run_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "session": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session"
          },
          "reference_example": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example"
          },
          "execution_order": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Order"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "is_root": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Root"
          },
          "data_source_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunsFilterDataSourceTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "skip_pagination": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Pagination"
          },
          "search_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Filter"
          },
          "use_experimental_search": {
            "type": "boolean",
            "title": "Use Experimental Search",
            "default": false
          },
          "cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 100
          },
          "select": {
            "items": {
              "$ref": "#/components/schemas/RunSelect"
            },
            "type": "array",
            "title": "Select",
            "default": [
              "id",
              "name",
              "run_type",
              "start_time",
              "end_time",
              "status",
              "error",
              "extra",
              "events",
              "inputs",
              "outputs",
              "parent_run_id",
              "manifest_id",
              "manifest_s3_id",
              "manifest",
              "session_id",
              "serialized",
              "reference_example_id",
              "reference_dataset_id",
              "total_tokens",
              "prompt_tokens",
              "completion_tokens",
              "total_cost",
              "prompt_cost",
              "completion_cost",
              "price_model_id",
              "first_token_time",
              "trace_id",
              "dotted_order",
              "last_queued_at",
              "feedback_stats",
              "parent_run_ids",
              "tags",
              "in_dataset",
              "app_path",
              "share_token",
              "trace_tier",
              "trace_first_received_at",
              "ttl_seconds",
              "trace_upgrade",
              "thread_id"
            ]
          },
          "order": {
            "$ref": "#/components/schemas/RunDateOrder",
            "default": "desc"
          },
          "skip_prev_cursor": {
            "type": "boolean",
            "title": "Skip Prev Cursor",
            "default": false
          }
        },
        "type": "object",
        "title": "BodyParamsForRunSchema",
        "description": "Query params for run endpoints."
      },
      "Body_clone_dataset_api_v1_datasets_clone_post": {
        "properties": {
          "target_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Target Dataset Id"
          },
          "source_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Dataset Id"
          },
          "as_of": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "date-time"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
              },
              {
                "type": "null"
              }
            ],
            "title": "As Of"
          },
          "examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "target_dataset_id",
          "source_dataset_id"
        ],
        "title": "Body_clone_dataset_api_v1_datasets_clone_post"
      },
      "Body_delete_runs_api_v1_runs_delete_post": {
        "properties": {
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "trace_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Trace Ids"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "trace_ids"
        ],
        "title": "Body_delete_runs_api_v1_runs_delete_post"
      },
      "Body_execute_api_v1_ace_execute_post": {
        "properties": {
          "args": {
            "items": {},
            "type": "array",
            "title": "Args"
          },
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "args",
          "code"
        ],
        "title": "Body_execute_api_v1_ace_execute_post"
      },
      "Body_legacy_upload_examples_api_v1_examples_upload__dataset_id__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "input_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Keys"
          },
          "output_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Keys"
          }
        },
        "type": "object",
        "required": [
          "file",
          "input_keys"
        ],
        "title": "Body_legacy_upload_examples_api_v1_examples_upload__dataset_id__post"
      },
      "Body_update_dataset_splits_api_v1_datasets__dataset_id__splits_put": {
        "properties": {
          "split_name": {
            "type": "string",
            "title": "Split Name"
          },
          "examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples"
          },
          "remove": {
            "type": "boolean",
            "title": "Remove",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "split_name",
          "examples"
        ],
        "title": "Body_update_dataset_splits_api_v1_datasets__dataset_id__splits_put"
      },
      "Body_upload_csv_dataset_api_v1_datasets_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "input_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Keys"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "data_type": {
            "$ref": "#/components/schemas/DataType",
            "default": "kv"
          },
          "output_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Keys",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "file",
          "input_keys"
        ],
        "title": "Body_upload_csv_dataset_api_v1_datasets_upload_post"
      },
      "BulkExport": {
        "properties": {
          "bulk_export_destination_id": {
            "type": "string",
            "format": "uuid",
            "title": "Bulk Export Destination Id"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "format": {
            "$ref": "#/components/schemas/BulkExportFormat",
            "default": "Parquet"
          },
          "compression": {
            "$ref": "#/components/schemas/BulkExportCompression",
            "default": "gzip"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "status": {
            "$ref": "#/components/schemas/BulkExportStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          }
        },
        "type": "object",
        "required": [
          "bulk_export_destination_id",
          "session_id",
          "start_time",
          "end_time",
          "id",
          "tenant_id",
          "status",
          "created_at",
          "updated_at",
          "finished_at"
        ],
        "title": "BulkExport"
      },
      "BulkExportCompression": {
        "type": "string",
        "enum": [
          "none",
          "gzip",
          "snappy"
        ],
        "title": "BulkExportCompression"
      },
      "BulkExportCreate": {
        "properties": {
          "bulk_export_destination_id": {
            "type": "string",
            "format": "uuid",
            "title": "Bulk Export Destination Id"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "format": {
            "$ref": "#/components/schemas/BulkExportFormat",
            "default": "Parquet"
          },
          "compression": {
            "$ref": "#/components/schemas/BulkExportCompression",
            "default": "gzip"
          }
        },
        "type": "object",
        "required": [
          "bulk_export_destination_id",
          "session_id",
          "start_time",
          "end_time"
        ],
        "title": "BulkExportCreate"
      },
      "BulkExportDestination": {
        "properties": {
          "destination_type": {
            "$ref": "#/components/schemas/BulkExportDestinationType",
            "default": "s3"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ']+$",
            "title": "Display Name"
          },
          "config": {
            "$ref": "#/components/schemas/BulkExportDestinationS3Config"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "credentials_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Credentials Keys"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "config",
          "id",
          "tenant_id",
          "created_at",
          "updated_at",
          "credentials_keys"
        ],
        "title": "BulkExportDestination"
      },
      "BulkExportDestinationCreate": {
        "properties": {
          "destination_type": {
            "$ref": "#/components/schemas/BulkExportDestinationType",
            "default": "s3"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ']+$",
            "title": "Display Name"
          },
          "config": {
            "$ref": "#/components/schemas/BulkExportDestinationS3Config"
          },
          "credentials": {
            "$ref": "#/components/schemas/BulkExportDestinationS3Credentials"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "config",
          "credentials"
        ],
        "title": "BulkExportDestinationCreate"
      },
      "BulkExportDestinationS3Config": {
        "properties": {
          "endpoint_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Url"
          },
          "prefix": {
            "type": "string",
            "maxLength": 2048,
            "title": "Prefix",
            "default": ""
          },
          "bucket_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 63,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Name"
          },
          "region": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          }
        },
        "type": "object",
        "title": "BulkExportDestinationS3Config"
      },
      "BulkExportDestinationS3Credentials": {
        "properties": {
          "access_key_id": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Access Key Id"
          },
          "secret_access_key": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 1,
            "title": "Secret Access Key"
          }
        },
        "type": "object",
        "required": [
          "access_key_id",
          "secret_access_key"
        ],
        "title": "BulkExportDestinationS3Credentials"
      },
      "BulkExportDestinationType": {
        "type": "string",
        "enum": [
          "s3"
        ],
        "title": "BulkExportDestinationType"
      },
      "BulkExportFormat": {
        "type": "string",
        "enum": [
          "Parquet"
        ],
        "title": "BulkExportFormat"
      },
      "BulkExportRun": {
        "properties": {
          "bulk_export_id": {
            "type": "string",
            "format": "uuid",
            "title": "Bulk Export Id"
          },
          "metadata": {
            "$ref": "#/components/schemas/BulkExportRunMetadata"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "$ref": "#/components/schemas/BulkExportRunStatus"
          },
          "retry_number": {
            "type": "integer",
            "title": "Retry Number",
            "default": 0
          },
          "errors": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          }
        },
        "type": "object",
        "required": [
          "bulk_export_id",
          "metadata",
          "id",
          "status",
          "created_at",
          "updated_at",
          "finished_at"
        ],
        "title": "BulkExportRun"
      },
      "BulkExportRunMetadata": {
        "properties": {
          "prefix": {
            "type": "string",
            "title": "Prefix"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BulkExportRunProgress"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "prefix",
          "start_time",
          "end_time"
        ],
        "title": "BulkExportRunMetadata"
      },
      "BulkExportRunProgress": {
        "properties": {
          "rows_written": {
            "type": "integer",
            "title": "Rows Written"
          },
          "exported_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Exported Files"
          },
          "export_path": {
            "type": "string",
            "title": "Export Path"
          },
          "latest_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Cursor"
          }
        },
        "type": "object",
        "required": [
          "rows_written",
          "exported_files",
          "export_path",
          "latest_cursor"
        ],
        "title": "BulkExportRunProgress"
      },
      "BulkExportRunStatus": {
        "type": "string",
        "enum": [
          "Cancelled",
          "Completed",
          "Created",
          "Failed",
          "TimedOut",
          "Running"
        ],
        "title": "BulkExportRunStatus"
      },
      "BulkExportStatus": {
        "type": "string",
        "enum": [
          "Cancelled",
          "Completed",
          "Created",
          "Failed",
          "TimedOut",
          "Running"
        ],
        "title": "BulkExportStatus"
      },
      "BulkExportUpdate": {
        "properties": {
          "status": {
            "type": "string",
            "const": "Cancelled",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "BulkExportUpdate"
      },
      "ChangePaymentPlanReq": {
        "type": "string",
        "enum": [
          "disabled",
          "developer",
          "plus",
          "startup",
          "partner",
          "premier",
          "free"
        ],
        "title": "ChangePaymentPlanReq",
        "description": "Enum for payment plans that the user can change to. Developer plans are permanent and enterprise plans will be changed manually."
      },
      "ChangePaymentPlanSchema": {
        "properties": {
          "tier": {
            "$ref": "#/components/schemas/ChangePaymentPlanReq"
          }
        },
        "type": "object",
        "required": [
          "tier"
        ],
        "title": "ChangePaymentPlanSchema",
        "description": "Change payment plan schema."
      },
      "ChatMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "chat",
            "title": "Type",
            "default": "chat"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatMessage",
        "description": "Message that can be assigned an arbitrary speaker (i.e. role)."
      },
      "ChatMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "ChatMessageChunk",
            "title": "Type",
            "default": "ChatMessageChunk"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatMessageChunk",
        "description": "Chat Message chunk."
      },
      "CodeEvaluatorTopLevel": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "CodeEvaluatorTopLevel"
      },
      "Comment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "comment_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment By"
          },
          "comment_on": {
            "type": "string",
            "format": "uuid",
            "title": "Comment On"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "comment_by_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment By Name"
          },
          "num_sub_comments": {
            "type": "integer",
            "title": "Num Sub Comments"
          },
          "num_likes": {
            "type": "integer",
            "title": "Num Likes"
          },
          "liked_by_auth_user": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Liked By Auth User"
          }
        },
        "type": "object",
        "required": [
          "id",
          "comment_on",
          "content",
          "created_at",
          "updated_at",
          "num_sub_comments",
          "num_likes"
        ],
        "title": "Comment"
      },
      "CommitManifestResponse": {
        "properties": {
          "commit_hash": {
            "type": "string",
            "title": "Commit Hash"
          },
          "manifest": {
            "type": "object",
            "title": "Manifest"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RepoExampleResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          }
        },
        "type": "object",
        "required": [
          "commit_hash",
          "manifest"
        ],
        "title": "CommitManifestResponse",
        "description": "Response model for get_commit_manifest."
      },
      "CommitWithLookups": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "manifest": {
            "type": "object",
            "title": "Manifest"
          },
          "repo_id": {
            "type": "string",
            "format": "uuid",
            "title": "Repo Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "commit_hash": {
            "type": "string",
            "title": "Commit Hash"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "example_run_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Example Run Ids"
          },
          "num_downloads": {
            "type": "integer",
            "title": "Num Downloads"
          },
          "num_views": {
            "type": "integer",
            "title": "Num Views"
          },
          "parent_commit_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Commit Hash"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "manifest",
          "repo_id",
          "commit_hash",
          "created_at",
          "updated_at",
          "example_run_ids",
          "num_downloads",
          "num_views"
        ],
        "title": "CommitWithLookups",
        "description": "All database fields for commits, plus helpful computed fields and user info\nfor private prompts."
      },
      "ComparativeExperiment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "reference_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Reference Dataset Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "experiments_info": {
            "items": {
              "$ref": "#/components/schemas/SimpleExperimentInfo"
            },
            "type": "array",
            "title": "Experiments Info"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "created_at",
          "modified_at",
          "reference_dataset_id",
          "experiments_info"
        ],
        "title": "ComparativeExperiment",
        "description": "ComparativeExperiment schema."
      },
      "ComparativeExperimentBase": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "reference_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Reference Dataset Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "created_at",
          "modified_at",
          "reference_dataset_id"
        ],
        "title": "ComparativeExperimentBase",
        "description": "ComparativeExperiment schema."
      },
      "ComparativeExperimentCreate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "experiment_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Experiment Ids"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "reference_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Reference Dataset Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "experiment_ids",
          "reference_dataset_id"
        ],
        "title": "ComparativeExperimentCreate",
        "description": "Create class for ComparativeExperiment."
      },
      "ConfiguredBy": {
        "type": "string",
        "enum": [
          "system",
          "user"
        ],
        "title": "ConfiguredBy"
      },
      "CreateCommentRequest": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "CreateCommentRequest"
      },
      "CreateEventRequest": {
        "properties": {
          "event_type": {
            "type": "string",
            "enum": [
              "playground-view",
              "playground-run"
            ],
            "title": "Event Type"
          },
          "owner": {
            "type": "string",
            "title": "Owner"
          },
          "repo": {
            "type": "string",
            "title": "Repo"
          },
          "commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "owner",
          "repo"
        ],
        "title": "CreateEventRequest"
      },
      "CreateFeedbackConfigSchema": {
        "properties": {
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "$ref": "#/components/schemas/FeedbackConfig"
          },
          "is_lower_score_better": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Lower Score Better",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "feedback_key",
          "feedback_config"
        ],
        "title": "CreateFeedbackConfigSchema"
      },
      "CreateRepoCommitRequest": {
        "properties": {
          "manifest": {
            "type": "object",
            "title": "Manifest"
          },
          "parent_commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Commit"
          },
          "example_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Run Ids"
          }
        },
        "type": "object",
        "required": [
          "manifest"
        ],
        "title": "CreateRepoCommitRequest"
      },
      "CreateRepoCommitResponse": {
        "properties": {
          "commit": {
            "$ref": "#/components/schemas/CommitWithLookups"
          }
        },
        "type": "object",
        "required": [
          "commit"
        ],
        "title": "CreateRepoCommitResponse"
      },
      "CreateRepoRequest": {
        "properties": {
          "repo_handle": {
            "type": "string",
            "title": "Repo Handle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "repo_handle",
          "is_public"
        ],
        "title": "CreateRepoRequest",
        "description": "Fields to create a repo"
      },
      "CreateRepoResponse": {
        "properties": {
          "repo": {
            "$ref": "#/components/schemas/RepoWithLookups"
          }
        },
        "type": "object",
        "required": [
          "repo"
        ],
        "title": "CreateRepoResponse"
      },
      "CreateRoleRequest": {
        "properties": {
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "description",
          "permissions"
        ],
        "title": "CreateRoleRequest"
      },
      "CustomChartCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Index"
          },
          "chart_type": {
            "$ref": "#/components/schemas/CustomChartType"
          },
          "series": {
            "items": {
              "$ref": "#/components/schemas/CustomChartSeriesCreate"
            },
            "type": "array",
            "title": "Series"
          },
          "section_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Section Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "common_filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "title",
          "chart_type",
          "series"
        ],
        "title": "CustomChartCreate"
      },
      "CustomChartCreatePreview": {
        "properties": {
          "series": {
            "items": {
              "$ref": "#/components/schemas/CustomChartSeries"
            },
            "type": "array",
            "title": "Series"
          },
          "common_filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "series"
        ],
        "title": "CustomChartCreatePreview"
      },
      "CustomChartMetric": {
        "type": "string",
        "enum": [
          "run_count",
          "latency_p50",
          "latency_p99",
          "latency_avg",
          "first_token_p50",
          "first_token_p99",
          "total_tokens",
          "prompt_tokens",
          "completion_tokens",
          "median_tokens",
          "completion_tokens_p50",
          "prompt_tokens_p50",
          "tokens_p99",
          "completion_tokens_p99",
          "prompt_tokens_p99",
          "feedback",
          "feedback_score_avg",
          "feedback_values",
          "total_cost",
          "prompt_cost",
          "completion_cost",
          "error_rate",
          "streaming_rate",
          "cost_p50",
          "cost_p99"
        ],
        "title": "CustomChartMetric",
        "description": "Metrics you can chart. Feedback metrics are not available for organization-scoped charts."
      },
      "CustomChartPreviewRequest": {
        "properties": {
          "bucket_info": {
            "$ref": "#/components/schemas/CustomChartsRequestBase"
          },
          "chart": {
            "$ref": "#/components/schemas/CustomChartCreatePreview"
          }
        },
        "type": "object",
        "required": [
          "bucket_info",
          "chart"
        ],
        "title": "CustomChartPreviewRequest"
      },
      "CustomChartResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "chart_type": {
            "$ref": "#/components/schemas/CustomChartType"
          },
          "section_id": {
            "type": "string",
            "format": "uuid",
            "title": "Section Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "series": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CustomChartSeries"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "index",
          "chart_type",
          "section_id",
          "series"
        ],
        "title": "CustomChartResponse"
      },
      "CustomChartSeries": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          },
          "metric": {
            "$ref": "#/components/schemas/CustomChartMetric"
          },
          "feedback_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Key"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "group_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunStatsGroupBySeriesResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "metric",
          "id"
        ],
        "title": "CustomChartSeries"
      },
      "CustomChartSeriesCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          },
          "metric": {
            "$ref": "#/components/schemas/CustomChartMetric"
          },
          "feedback_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Key"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "group_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunStatsGroupBy"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "metric"
        ],
        "title": "CustomChartSeriesCreate"
      },
      "CustomChartSeriesFilters": {
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "session": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session"
          }
        },
        "type": "object",
        "title": "CustomChartSeriesFilters"
      },
      "CustomChartSeriesUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          },
          "metric": {
            "$ref": "#/components/schemas/CustomChartMetric"
          },
          "feedback_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Key"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "group_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunStatsGroupBy"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "metric"
        ],
        "title": "CustomChartSeriesUpdate"
      },
      "CustomChartType": {
        "type": "string",
        "enum": [
          "line",
          "bar"
        ],
        "title": "CustomChartType",
        "description": "Enum for custom chart types."
      },
      "CustomChartUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Title",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Index",
            "default": {
              "__missing__": "__missing__"
            },
            "ge": 0,
            "le": 100
          },
          "chart_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartType"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Chart Type",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "series": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CustomChartSeriesUpdate"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Series",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "section_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Section Id",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "common_filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Common Filters",
            "default": {
              "__missing__": "__missing__"
            }
          }
        },
        "type": "object",
        "title": "CustomChartUpdate"
      },
      "CustomChartsDataPoint": {
        "properties": {
          "series_id": {
            "type": "string",
            "title": "Series Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group"
          }
        },
        "type": "object",
        "required": [
          "series_id",
          "timestamp",
          "value"
        ],
        "title": "CustomChartsDataPoint"
      },
      "CustomChartsRequest": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "UTC"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "stride": {
            "$ref": "#/components/schemas/TimedeltaInput",
            "default": {
              "days": 0,
              "minutes": 15,
              "hours": 0
            }
          },
          "omit_data": {
            "type": "boolean",
            "title": "Omit Data",
            "default": false
          },
          "after_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "After Index"
          },
          "tag_value_id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Value Id"
          }
        },
        "type": "object",
        "title": "CustomChartsRequest"
      },
      "CustomChartsRequestBase": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "UTC"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "stride": {
            "$ref": "#/components/schemas/TimedeltaInput",
            "default": {
              "days": 0,
              "minutes": 15,
              "hours": 0
            }
          },
          "omit_data": {
            "type": "boolean",
            "title": "Omit Data",
            "default": false
          }
        },
        "type": "object",
        "title": "CustomChartsRequestBase"
      },
      "CustomChartsResponse": {
        "properties": {
          "sections": {
            "items": {
              "$ref": "#/components/schemas/CustomChartsSection"
            },
            "type": "array",
            "title": "Sections"
          }
        },
        "type": "object",
        "required": [
          "sections"
        ],
        "title": "CustomChartsResponse"
      },
      "CustomChartsSection": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Index"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "charts": {
            "items": {
              "$ref": "#/components/schemas/SingleCustomChartResponse"
            },
            "type": "array",
            "title": "Charts"
          },
          "sub_sections": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SingleCustomChartSubSectionResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub Sections"
          }
        },
        "type": "object",
        "required": [
          "title",
          "id",
          "charts"
        ],
        "title": "CustomChartsSection"
      },
      "CustomChartsSectionCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Index"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "CustomChartsSectionCreate"
      },
      "CustomChartsSectionRequest": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "UTC"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "stride": {
            "$ref": "#/components/schemas/TimedeltaInput",
            "default": {
              "days": 0,
              "minutes": 15,
              "hours": 0
            }
          },
          "omit_data": {
            "type": "boolean",
            "title": "Omit Data",
            "default": false
          },
          "group_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunStatsGroupBy"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "CustomChartsSectionRequest"
      },
      "CustomChartsSectionResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Index"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "chart_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chart Count"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "id"
        ],
        "title": "CustomChartsSectionResponse"
      },
      "CustomChartsSectionUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Title",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Index",
            "default": {
              "__missing__": "__missing__"
            },
            "ge": 0,
            "le": 100
          }
        },
        "type": "object",
        "title": "CustomChartsSectionUpdate"
      },
      "CustomerVisiblePlanInfo": {
        "properties": {
          "tier": {
            "$ref": "#/components/schemas/PaymentPlanTier"
          },
          "started_on": {
            "type": "string",
            "format": "date-time",
            "title": "Started On"
          },
          "ends_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ends On"
          }
        },
        "type": "object",
        "required": [
          "tier",
          "started_on"
        ],
        "title": "CustomerVisiblePlanInfo",
        "description": "Customer visible plan information."
      },
      "DataType": {
        "type": "string",
        "enum": [
          "kv",
          "llm",
          "chat"
        ],
        "title": "DataType",
        "description": "Enum for dataset data types."
      },
      "Dataset": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "inputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Schema Definition"
          },
          "outputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Schema Definition"
          },
          "externally_managed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externally Managed",
            "default": false
          },
          "transformations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetTransformation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformations"
          },
          "data_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataType"
              },
              {
                "type": "null"
              }
            ],
            "default": "kv"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "example_count": {
            "type": "integer",
            "title": "Example Count"
          },
          "session_count": {
            "type": "integer",
            "title": "Session Count"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "last_session_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Session Start Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id",
          "example_count",
          "session_count",
          "modified_at"
        ],
        "title": "Dataset",
        "description": "Dataset schema."
      },
      "DatasetCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "inputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Schema Definition"
          },
          "outputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Schema Definition"
          },
          "externally_managed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externally Managed",
            "default": false
          },
          "transformations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetTransformation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformations"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "data_type": {
            "$ref": "#/components/schemas/DataType",
            "default": "kv"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DatasetCreate",
        "description": "Create class for Dataset."
      },
      "DatasetDiffInfo": {
        "properties": {
          "examples_modified": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples Modified"
          },
          "examples_added": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples Added"
          },
          "examples_removed": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples Removed"
          }
        },
        "type": "object",
        "required": [
          "examples_modified",
          "examples_added",
          "examples_removed"
        ],
        "title": "DatasetDiffInfo",
        "description": "Dataset diff schema."
      },
      "DatasetIndexInfo": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag",
            "default": "latest"
          },
          "last_updated_version": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated Version"
          }
        },
        "type": "object",
        "required": [
          "dataset_id"
        ],
        "title": "DatasetIndexInfo",
        "description": "Dataset schema for serving."
      },
      "DatasetIndexRequest": {
        "properties": {
          "tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag",
            "default": "latest"
          }
        },
        "type": "object",
        "title": "DatasetIndexRequest",
        "description": "Dataset schema for serving."
      },
      "DatasetPublicSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "inputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Schema Definition"
          },
          "outputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Schema Definition"
          },
          "externally_managed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externally Managed",
            "default": false
          },
          "transformations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetTransformation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformations"
          },
          "data_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataType"
              },
              {
                "type": "null"
              }
            ],
            "default": "kv"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "example_count": {
            "type": "integer",
            "title": "Example Count"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "example_count"
        ],
        "title": "DatasetPublicSchema",
        "description": "Public schema for datasets.\n\nDoesn't currently include session counts/stats\nsince public test project sharing is not yet shipped"
      },
      "DatasetSchemaForUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "inputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Schema Definition"
          },
          "outputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Schema Definition"
          },
          "externally_managed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externally Managed",
            "default": false
          },
          "transformations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetTransformation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformations"
          },
          "data_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataType"
              },
              {
                "type": "null"
              }
            ],
            "default": "kv"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id"
        ],
        "title": "DatasetSchemaForUpdate"
      },
      "DatasetShareSchema": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "share_token": {
            "type": "string",
            "format": "uuid",
            "title": "Share Token"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "share_token"
        ],
        "title": "DatasetShareSchema"
      },
      "DatasetTransformation": {
        "properties": {
          "path": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Path"
          },
          "transformation_type": {
            "$ref": "#/components/schemas/DatasetTransformationType"
          }
        },
        "type": "object",
        "required": [
          "path",
          "transformation_type"
        ],
        "title": "DatasetTransformation"
      },
      "DatasetTransformationType": {
        "type": "string",
        "enum": [
          "remove_system_messages",
          "convert_to_openai_message",
          "convert_to_openai_tool",
          "remove_extra_fields",
          "extract_tools_from_run"
        ],
        "title": "DatasetTransformationType",
        "description": "Enum for dataset data types."
      },
      "DatasetUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "inputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Schema Definition",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "outputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Schema Definition",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "patch_examples": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/ExampleUpdate"
                },
                "propertyNames": {
                  "format": "uuid"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patch Examples"
          },
          "transformations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetTransformation"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformations",
            "default": {
              "__missing__": "__missing__"
            }
          }
        },
        "type": "object",
        "title": "DatasetUpdate",
        "description": "Update class for Dataset."
      },
      "DatasetVersion": {
        "properties": {
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "as_of": {
            "type": "string",
            "format": "date-time",
            "title": "As Of"
          }
        },
        "type": "object",
        "required": [
          "as_of"
        ],
        "title": "DatasetVersion",
        "description": "Dataset version schema."
      },
      "DemoConfig": {
        "properties": {
          "message_index": {
            "type": "integer",
            "title": "Message Index"
          },
          "metaprompt": {
            "type": "object",
            "title": "Metaprompt"
          },
          "examples": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Examples"
          },
          "overall_feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overall Feedback"
          }
        },
        "type": "object",
        "required": [
          "message_index",
          "metaprompt",
          "examples",
          "overall_feedback"
        ],
        "title": "DemoConfig"
      },
      "EPromptOptimizationAlgorithm": {
        "type": "string",
        "enum": [
          "promptim",
          "demo"
        ],
        "title": "EPromptOptimizationAlgorithm"
      },
      "EPromptOptimizationJobLogType": {
        "type": "string",
        "enum": [
          "info",
          "result",
          "error",
          "link"
        ],
        "title": "EPromptOptimizationJobLogType"
      },
      "EPromptOptimizationJobStatus": {
        "type": "string",
        "enum": [
          "created",
          "running",
          "successful",
          "failed"
        ],
        "title": "EPromptOptimizationJobStatus"
      },
      "EvaluatorStructuredOutput": {
        "properties": {
          "hub_ref": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hub Ref"
          },
          "prompt": {
            "anyOf": [
              {
                "items": {
                  "prefixItems": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt"
          },
          "template_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Format"
          },
          "schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema"
          },
          "variable_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variable Mapping"
          },
          "model": {
            "type": "object",
            "title": "Model"
          }
        },
        "type": "object",
        "required": [
          "model"
        ],
        "title": "EvaluatorStructuredOutput",
        "description": "Evaluator structured output schema."
      },
      "EvaluatorTopLevel": {
        "properties": {
          "structured": {
            "$ref": "#/components/schemas/EvaluatorStructuredOutput"
          }
        },
        "type": "object",
        "required": [
          "structured"
        ],
        "title": "EvaluatorTopLevel"
      },
      "Example": {
        "properties": {
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "attachment_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Urls"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "inputs",
          "id",
          "name"
        ],
        "title": "Example",
        "description": "Example schema."
      },
      "ExampleListOrder": {
        "type": "string",
        "enum": [
          "recent",
          "random",
          "recently_created"
        ],
        "title": "ExampleListOrder"
      },
      "ExampleSelect": {
        "type": "string",
        "enum": [
          "id",
          "created_at",
          "modified_at",
          "name",
          "dataset_id",
          "source_run_id",
          "metadata",
          "inputs",
          "outputs",
          "attachment_urls"
        ],
        "title": "ExampleSelect"
      },
      "ExampleUpdate": {
        "properties": {
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "attachments_operations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttachmentsOperations"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "split": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Split"
          },
          "overwrite": {
            "type": "boolean",
            "title": "Overwrite",
            "default": false
          }
        },
        "type": "object",
        "title": "ExampleUpdate",
        "description": "Update class for Example."
      },
      "ExampleUpdateWithID": {
        "properties": {
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "attachments_operations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttachmentsOperations"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "split": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Split"
          },
          "overwrite": {
            "type": "boolean",
            "title": "Overwrite",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ExampleUpdateWithID",
        "description": "Bulk update class for Example (includes example id)."
      },
      "ExampleValidationResult": {
        "properties": {
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "split": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Split",
            "default": "base"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "use_source_run_io": {
            "type": "boolean",
            "title": "Use Source Run Io",
            "default": false
          },
          "overwrite": {
            "type": "boolean",
            "title": "Overwrite",
            "default": false
          }
        },
        "type": "object",
        "title": "ExampleValidationResult",
        "description": "Validation result for Example, combining fields from Create/Base/Update schemas."
      },
      "ExampleWithRuns": {
        "properties": {
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "attachment_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Urls"
          },
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunSchema"
            },
            "type": "array",
            "title": "Runs"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "inputs",
          "id",
          "name",
          "runs"
        ],
        "title": "ExampleWithRuns",
        "description": "Example schema with list of runs."
      },
      "ExampleWithRunsCH": {
        "properties": {
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "attachment_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Urls"
          },
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunSchemaComparisonView"
            },
            "type": "array",
            "title": "Runs"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "inputs",
          "id",
          "name",
          "runs"
        ],
        "title": "ExampleWithRunsCH",
        "description": "Example schema with list of runs."
      },
      "ExampleWithRunsGroup": {
        "properties": {
          "filter": {
            "type": "string",
            "title": "Filter"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "min_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Start Time"
          },
          "max_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Start Time"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "group_key": {
            "title": "Group Key"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExampleWithRuns"
                },
                "type": "array"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ExampleWithRunsCH"
                },
                "type": "array"
              }
            ],
            "title": "Examples"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          }
        },
        "type": "object",
        "required": [
          "filter",
          "group_key",
          "examples"
        ],
        "title": "ExampleWithRunsGroup",
        "description": "Group of examples with runs."
      },
      "ExperimentResultRow": {
        "properties": {
          "row_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Row Id"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "expected_outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Outputs"
          },
          "actual_outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Outputs"
          },
          "evaluation_scores": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeedbackCreateCoreSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Scores"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Name"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "run_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Metadata"
          }
        },
        "type": "object",
        "required": [
          "inputs",
          "start_time",
          "end_time"
        ],
        "title": "ExperimentResultRow",
        "description": "Class for a single row in the uploaded experiment results."
      },
      "ExperimentResultsUpload": {
        "properties": {
          "experiment_name": {
            "type": "string",
            "title": "Experiment Name"
          },
          "experiment_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experiment Description"
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Name"
          },
          "dataset_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Description"
          },
          "summary_experiment_scores": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeedbackCreateCoreSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary Experiment Scores"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/ExperimentResultRow"
            },
            "type": "array",
            "title": "Results"
          },
          "experiment_start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Experiment Start Time"
          },
          "experiment_end_time": {
            "type": "string",
            "format": "date-time",
            "title": "Experiment End Time"
          },
          "experiment_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experiment Metadata"
          }
        },
        "type": "object",
        "required": [
          "experiment_name",
          "results",
          "experiment_start_time",
          "experiment_end_time"
        ],
        "title": "ExperimentResultsUpload",
        "description": "Class for uploading the results of an already-run experiment."
      },
      "ExperimentResultsUploadResult": {
        "properties": {
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "experiment": {
            "$ref": "#/components/schemas/TracerSession"
          }
        },
        "type": "object",
        "required": [
          "dataset",
          "experiment"
        ],
        "title": "ExperimentResultsUploadResult",
        "description": "Class for uploading the results of an already-run experiment."
      },
      "ExportAnnotationQueueRunsRequest": {
        "properties": {
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          }
        },
        "type": "object",
        "title": "ExportAnnotationQueueRunsRequest",
        "description": "Export annotation queue runs request schema."
      },
      "FeedbackCategory": {
        "properties": {
          "value": {
            "type": "number",
            "title": "Value"
          },
          "label": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "FeedbackCategory",
        "description": "Specific value and label pair for feedback"
      },
      "FeedbackConfig": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FeedbackType"
          },
          "min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min"
          },
          "max": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeedbackCategory"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "FeedbackConfig"
      },
      "FeedbackConfigSchema": {
        "properties": {
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "$ref": "#/components/schemas/FeedbackConfig"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "is_lower_score_better": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Lower Score Better"
          }
        },
        "type": "object",
        "required": [
          "feedback_key",
          "feedback_config",
          "tenant_id",
          "modified_at"
        ],
        "title": "FeedbackConfigSchema"
      },
      "FeedbackCreateCoreSchema": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "key": {
            "type": "string",
            "maxLength": 180,
            "title": "Key"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_group_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Group Id"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "feedback_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/APIFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/ModelFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/AutoEvalFeedbackSource"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Source"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "FeedbackCreateCoreSchema",
        "description": "Schema used for creating feedback without run id or session id."
      },
      "FeedbackCreateSchema": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "key": {
            "type": "string",
            "maxLength": 180,
            "title": "Key"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_group_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Group Id"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "trace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "feedback_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/APIFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/ModelFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/AutoEvalFeedbackSource"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Source"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "FeedbackCreateSchema",
        "description": "Schema used for creating feedback."
      },
      "FeedbackCreateWithTokenExtendedSchema": {
        "properties": {
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "FeedbackCreateWithTokenExtendedSchema",
        "description": "Feedback create schema with token."
      },
      "FeedbackDelta": {
        "properties": {
          "improved_examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Improved Examples"
          },
          "regressed_examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Regressed Examples"
          }
        },
        "type": "object",
        "required": [
          "improved_examples",
          "regressed_examples"
        ],
        "title": "FeedbackDelta",
        "description": "Feedback key with number of improvements and regressions."
      },
      "FeedbackIngestTokenCreateSchema": {
        "properties": {
          "expires_in": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TimedeltaInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "feedback_key"
        ],
        "title": "FeedbackIngestTokenCreateSchema",
        "description": "Feedback ingest token create schema."
      },
      "FeedbackIngestTokenSchema": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          }
        },
        "type": "object",
        "required": [
          "id",
          "url",
          "expires_at",
          "feedback_key"
        ],
        "title": "FeedbackIngestTokenSchema",
        "description": "Feedback ingest token schema."
      },
      "FeedbackLevel": {
        "type": "string",
        "enum": [
          "run",
          "session"
        ],
        "title": "FeedbackLevel",
        "description": "Enum for feedback levels."
      },
      "FeedbackSchema": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_group_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Group Id"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "feedback_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id"
        ],
        "title": "FeedbackSchema",
        "description": "Schema for getting feedback."
      },
      "FeedbackSource": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name"
          }
        },
        "type": "object",
        "title": "FeedbackSource",
        "description": "The feedback source loaded from the database."
      },
      "FeedbackType": {
        "type": "string",
        "enum": [
          "continuous",
          "categorical",
          "freeform"
        ],
        "title": "FeedbackType",
        "description": "Enum for feedback types."
      },
      "FeedbackUpdateSchema": {
        "properties": {
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FeedbackUpdateSchema",
        "description": "Schema used for updating feedback"
      },
      "FilterView": {
        "properties": {
          "filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter String"
          },
          "trace_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter String"
          },
          "tree_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter String"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/FilterViewType",
            "default": "runs"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "FilterView"
      },
      "FilterViewCreate": {
        "properties": {
          "filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter String"
          },
          "trace_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter String"
          },
          "tree_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter String"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/FilterViewType",
            "default": "runs"
          }
        },
        "type": "object",
        "required": [
          "display_name"
        ],
        "title": "FilterViewCreate"
      },
      "FilterViewType": {
        "type": "string",
        "enum": [
          "runs",
          "threads"
        ],
        "title": "FilterViewType"
      },
      "FilterViewUpdate": {
        "properties": {
          "filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter String"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "trace_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter String"
          },
          "tree_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter String"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FilterViewType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FilterViewUpdate"
      },
      "ForkRepoRequest": {
        "properties": {
          "repo_handle": {
            "type": "string",
            "title": "Repo Handle"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          }
        },
        "type": "object",
        "required": [
          "repo_handle"
        ],
        "title": "ForkRepoRequest",
        "description": "Fields to fork a repo"
      },
      "FunctionMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "function",
            "title": "Type",
            "default": "function"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "name"
        ],
        "title": "FunctionMessage",
        "description": "Message for passing the result of executing a tool back to a model.\n\nFunctionMessage are an older version of the ToolMessage schema, and\ndo not contain the tool_call_id field.\n\nThe tool_call_id field is used to associate the tool call request with the\ntool call response. This is useful in situations where a chat model is able\nto request multiple tool calls in parallel."
      },
      "FunctionMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "FunctionMessageChunk",
            "title": "Type",
            "default": "FunctionMessageChunk"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "name"
        ],
        "title": "FunctionMessageChunk",
        "description": "Function Message chunk."
      },
      "GenerateSyntheticExamplesBody": {
        "properties": {
          "example_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Ids"
          },
          "num_examples": {
            "type": "integer",
            "title": "Num Examples"
          }
        },
        "type": "object",
        "required": [
          "num_examples"
        ],
        "title": "GenerateSyntheticExamplesBody"
      },
      "GetRepoResponse": {
        "properties": {
          "repo": {
            "$ref": "#/components/schemas/RepoWithLookups"
          }
        },
        "type": "object",
        "required": [
          "repo"
        ],
        "title": "GetRepoResponse"
      },
      "GroupExampleRunsByField": {
        "type": "string",
        "enum": [
          "run_metadata",
          "example_metadata"
        ],
        "title": "GroupExampleRunsByField"
      },
      "GroupedExamplesWithRunsResponse": {
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/ExampleWithRunsGroup"
            },
            "type": "array",
            "title": "Groups"
          }
        },
        "type": "object",
        "required": [
          "groups"
        ],
        "title": "GroupedExamplesWithRunsResponse",
        "description": "Grouped examples with runs."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthInfoGetResponse": {
        "properties": {
          "clickhouse_disk_free_pct": {
            "type": "number",
            "title": "Clickhouse Disk Free Pct"
          }
        },
        "type": "object",
        "required": [
          "clickhouse_disk_free_pct"
        ],
        "title": "HealthInfoGetResponse",
        "description": "The LangSmith server info."
      },
      "Highlight": {
        "properties": {
          "prompt_chunk_start_index": {
            "type": "integer",
            "title": "Prompt Chunk Start Index"
          },
          "prompt_chunk_end_index": {
            "type": "integer",
            "title": "Prompt Chunk End Index"
          },
          "prompt_chunk": {
            "type": "string",
            "title": "Prompt Chunk"
          },
          "highlight_text": {
            "type": "string",
            "title": "Highlight Text"
          }
        },
        "type": "object",
        "required": [
          "prompt_chunk_start_index",
          "prompt_chunk_end_index",
          "prompt_chunk",
          "highlight_text"
        ],
        "title": "Highlight"
      },
      "HumanMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "human",
            "title": "Type",
            "default": "human"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "example": {
            "type": "boolean",
            "title": "Example",
            "default": false
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "HumanMessage",
        "description": "Message from a human.\n\nHumanMessages are messages that are passed in from a human to the model.\n\nExample:\n\n    .. code-block:: python\n\n        from langchain_core.messages import HumanMessage, SystemMessage\n\n        messages = [\n            SystemMessage(\n                content=\"You are a helpful assistant! Your name is Bob.\"\n            ),\n            HumanMessage(\n                content=\"What is your name?\"\n            )\n        ]\n\n        # Instantiate a chat model and invoke it with the messages\n        model = ...\n        print(model.invoke(messages))"
      },
      "HumanMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "HumanMessageChunk",
            "title": "Type",
            "default": "HumanMessageChunk"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "example": {
            "type": "boolean",
            "title": "Example",
            "default": false
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "HumanMessageChunk",
        "description": "Human Message chunk."
      },
      "Identity": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "ls_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ls User Id"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope",
            "default": "workspace"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "created_at",
          "user_id",
          "ls_user_id",
          "read_only"
        ],
        "title": "Identity"
      },
      "IdentityAnnotationQueueRunStatusCreateSchema": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "override_added_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Added At"
          }
        },
        "type": "object",
        "title": "IdentityAnnotationQueueRunStatusCreateSchema",
        "description": "Identity annotation queue run status create schema."
      },
      "IdentityCreate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "org_identity_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Identity Id"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          }
        },
        "type": "object",
        "title": "IdentityCreate"
      },
      "IdentityPatch": {
        "properties": {
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only"
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "role_id"
        ],
        "title": "IdentityPatch"
      },
      "InfoGetResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "license_expiration_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Expiration Time"
          },
          "batch_ingest_config": {
            "$ref": "#/components/schemas/BatchIngestConfig"
          },
          "instance_flags": {
            "type": "object",
            "title": "Instance Flags"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "InfoGetResponse",
        "description": "The LangSmith server info."
      },
      "InputTokenDetails": {
        "properties": {
          "audio": {
            "type": "integer",
            "title": "Audio"
          },
          "cache_creation": {
            "type": "integer",
            "title": "Cache Creation"
          },
          "cache_read": {
            "type": "integer",
            "title": "Cache Read"
          }
        },
        "type": "object",
        "title": "InputTokenDetails",
        "description": "Breakdown of input token counts.\n\nDoes *not* need to sum to full input token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"cache_creation\": 200,\n            \"cache_read\": 100,\n        }\n\n.. versionadded:: 0.3.9"
      },
      "InvalidToolCall": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "args": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "type": {
            "type": "string",
            "const": "invalid_tool_call",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "name",
          "args",
          "id",
          "error"
        ],
        "title": "InvalidToolCall",
        "description": "Allowance for errors made by LLM.\n\nHere we add an `error` key to surface errors made during generation\n(e.g., invalid JSON arguments.)"
      },
      "InvokePromptPayload": {
        "properties": {
          "messages": {
            "items": {
              "prefixItems": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Messages"
          },
          "template_format": {
            "type": "string",
            "title": "Template Format"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          }
        },
        "type": "object",
        "required": [
          "messages",
          "template_format",
          "inputs"
        ],
        "title": "InvokePromptPayload"
      },
      "LikeRepoRequest": {
        "properties": {
          "like": {
            "type": "boolean",
            "title": "Like"
          }
        },
        "type": "object",
        "required": [
          "like"
        ],
        "title": "LikeRepoRequest"
      },
      "LikeRepoResponse": {
        "properties": {
          "likes": {
            "type": "integer",
            "title": "Likes"
          }
        },
        "type": "object",
        "required": [
          "likes"
        ],
        "title": "LikeRepoResponse"
      },
      "ListCommentsResponse": {
        "properties": {
          "comments": {
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "type": "array",
            "title": "Comments"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "comments",
          "total"
        ],
        "title": "ListCommentsResponse"
      },
      "ListCommitsResponse": {
        "properties": {
          "commits": {
            "items": {
              "$ref": "#/components/schemas/CommitWithLookups"
            },
            "type": "array",
            "title": "Commits"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "commits",
          "total"
        ],
        "title": "ListCommitsResponse"
      },
      "ListPublicDatasetRunsResponse": {
        "properties": {
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunPublicDatasetSchema"
            },
            "type": "array",
            "title": "Runs"
          },
          "cursors": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Cursors"
          },
          "parsed_query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parsed Query"
          }
        },
        "type": "object",
        "required": [
          "runs",
          "cursors"
        ],
        "title": "ListPublicDatasetRunsResponse"
      },
      "ListPublicRunsResponse": {
        "properties": {
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunPublicSchema"
            },
            "type": "array",
            "title": "Runs"
          },
          "cursors": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Cursors"
          },
          "parsed_query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parsed Query"
          }
        },
        "type": "object",
        "required": [
          "runs",
          "cursors"
        ],
        "title": "ListPublicRunsResponse"
      },
      "ListReposResponse": {
        "properties": {
          "repos": {
            "items": {
              "$ref": "#/components/schemas/RepoWithLookups"
            },
            "type": "array",
            "title": "Repos"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "repos",
          "total"
        ],
        "title": "ListReposResponse"
      },
      "ListRunsResponse": {
        "properties": {
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunSchema"
            },
            "type": "array",
            "title": "Runs"
          },
          "cursors": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Cursors"
          },
          "search_cursors": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Cursors"
          },
          "parsed_query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parsed Query"
          }
        },
        "type": "object",
        "required": [
          "runs",
          "cursors"
        ],
        "title": "ListRunsResponse"
      },
      "ListTagsForResourceRequest": {
        "properties": {
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          }
        },
        "type": "object",
        "required": [
          "resource_id",
          "resource_type"
        ],
        "title": "ListTagsForResourceRequest"
      },
      "ListTagsResponse": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagCount"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "tags"
        ],
        "title": "ListTagsResponse"
      },
      "MemberIdentity": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "ls_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ls User Id"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope",
            "default": "workspace"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "linked_login_methods": {
            "items": {
              "$ref": "#/components/schemas/ProviderUserSlim"
            },
            "type": "array",
            "title": "Linked Login Methods",
            "default": []
          },
          "org_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Id"
          },
          "org_role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "created_at",
          "user_id",
          "ls_user_id",
          "read_only"
        ],
        "title": "MemberIdentity"
      },
      "MetadataKeyValue": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "MetadataKeyValue"
      },
      "Missing": {
        "properties": {
          "__missing__": {
            "type": "string",
            "const": "__missing__",
            "title": "Missing"
          }
        },
        "type": "object",
        "required": [
          "__missing__"
        ],
        "title": "Missing"
      },
      "ModelFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "model"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "ModelFeedbackSource",
        "description": "Model feedback source."
      },
      "ModelPriceMapCreateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "match_path": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Match Path",
            "default": [
              "model",
              "model_name",
              "model_id",
              "model_path",
              "endpoint_name"
            ]
          },
          "match_pattern": {
            "type": "string",
            "title": "Match Pattern"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Completion Cost"
          },
          "provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider"
          }
        },
        "type": "object",
        "required": [
          "name",
          "match_pattern",
          "prompt_cost",
          "completion_cost"
        ],
        "title": "ModelPriceMapCreateSchema",
        "description": "Model price map create schema."
      },
      "ModelPriceMapUpdateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "match_path": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Match Path",
            "default": [
              "model",
              "model_name",
              "model_id",
              "model_path",
              "endpoint_name"
            ]
          },
          "match_pattern": {
            "type": "string",
            "title": "Match Pattern"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Completion Cost"
          },
          "provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider"
          }
        },
        "type": "object",
        "required": [
          "name",
          "match_pattern",
          "prompt_cost",
          "completion_cost"
        ],
        "title": "ModelPriceMapUpdateSchema",
        "description": "Model price map update schema."
      },
      "MonitorBlock": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "section": {
            "type": "string",
            "title": "Section"
          },
          "columns": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Columns"
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "rows": {
            "items": {
              "items": {},
              "type": "array"
            },
            "type": "array",
            "title": "Rows"
          },
          "chart_spec": {
            "type": "object",
            "title": "Chart Spec"
          },
          "click_target": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Click Target"
          },
          "toggleable_marks": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Toggleable Marks"
          }
        },
        "type": "object",
        "required": [
          "title",
          "section",
          "columns",
          "rows",
          "chart_spec"
        ],
        "title": "MonitorBlock"
      },
      "MonitorGroupSpec": {
        "properties": {
          "session": {
            "type": "string",
            "format": "uuid",
            "title": "Session"
          },
          "tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag"
          },
          "metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MetadataKeyValue"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "session"
        ],
        "title": "MonitorGroupSpec"
      },
      "MonitorRequest": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "UTC"
          },
          "groups": {
            "items": {
              "$ref": "#/components/schemas/MonitorGroupSpec"
            },
            "type": "array",
            "maxItems": 5,
            "minItems": 1,
            "title": "Groups"
          },
          "interval": {
            "$ref": "#/components/schemas/TimedeltaInput",
            "default": {
              "days": 7,
              "minutes": 0,
              "hours": 0
            }
          },
          "stride": {
            "$ref": "#/components/schemas/TimedeltaInput",
            "default": {
              "days": 0,
              "minutes": 15,
              "hours": 0
            }
          }
        },
        "type": "object",
        "required": [
          "groups"
        ],
        "title": "MonitorRequest"
      },
      "MonitorResponse": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/MonitorBlock"
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "blocks"
        ],
        "title": "MonitorResponse"
      },
      "OAuthProvider": {
        "type": "string",
        "enum": [
          "custom-oidc"
        ],
        "title": "OAuthProvider"
      },
      "OptimizePromptJobRequest": {
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/EPromptOptimizationAlgorithm"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptimConfig"
              },
              {
                "$ref": "#/components/schemas/DemoConfig"
              }
            ],
            "title": "Config"
          },
          "prompt_name": {
            "type": "string",
            "title": "Prompt Name"
          }
        },
        "type": "object",
        "required": [
          "algorithm",
          "config",
          "prompt_name"
        ],
        "title": "OptimizePromptJobRequest",
        "description": "Request to optimize a prompt."
      },
      "OptimizePromptResponse": {
        "properties": {
          "optimization_job_id": {
            "type": "string",
            "format": "uuid",
            "title": "Optimization Job Id"
          }
        },
        "type": "object",
        "required": [
          "optimization_job_id"
        ],
        "title": "OptimizePromptResponse",
        "description": "Response from optimizing a prompt."
      },
      "OrgIdentityPatch": {
        "properties": {
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          }
        },
        "type": "object",
        "title": "OrgIdentityPatch"
      },
      "OrgMemberIdentity": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "ls_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ls User Id"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope",
            "default": "workspace"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "linked_login_methods": {
            "items": {
              "$ref": "#/components/schemas/ProviderUserSlim"
            },
            "type": "array",
            "title": "Linked Login Methods",
            "default": []
          },
          "org_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Id"
          },
          "org_role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Name"
          },
          "tenant_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Tenant Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "created_at",
          "user_id",
          "ls_user_id",
          "read_only"
        ],
        "title": "OrgMemberIdentity"
      },
      "OrgPendingIdentity": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "workspace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Ids"
          },
          "workspace_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role Id"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope",
            "default": "workspace"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "org_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Id"
          },
          "org_role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Name"
          },
          "tenant_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Tenant Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "created_at"
        ],
        "title": "OrgPendingIdentity"
      },
      "OrgUsage": {
        "properties": {
          "customer_id": {
            "type": "string",
            "title": "Customer Id"
          },
          "billable_metric_id": {
            "type": "string",
            "title": "Billable Metric Id"
          },
          "billable_metric_name": {
            "type": "string",
            "title": "Billable Metric Name"
          },
          "start_timestamp": {
            "type": "string",
            "title": "Start Timestamp"
          },
          "end_timestamp": {
            "type": "string",
            "title": "End Timestamp"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "groups": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Groups"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "billable_metric_id",
          "billable_metric_name",
          "start_timestamp",
          "end_timestamp",
          "value",
          "groups"
        ],
        "title": "OrgUsage"
      },
      "Organization": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "config": {
            "$ref": "#/components/schemas/OrganizationConfig"
          },
          "connected_to_stripe": {
            "type": "boolean",
            "title": "Connected To Stripe"
          },
          "connected_to_metronome": {
            "type": "boolean",
            "title": "Connected To Metronome"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentPlanTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "payment_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripePaymentMethodInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_cancelled": {
            "type": "boolean",
            "title": "Has Cancelled"
          },
          "end_of_billing_period": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Of Billing Period"
          },
          "current_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerVisiblePlanInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "upcoming_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerVisiblePlanInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "reached_max_workspaces": {
            "type": "boolean",
            "title": "Reached Max Workspaces",
            "default": false
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions",
            "default": []
          },
          "marketplace_payouts_enabled": {
            "type": "boolean",
            "title": "Marketplace Payouts Enabled",
            "default": false
          },
          "wallet": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Wallet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "config",
          "connected_to_stripe",
          "connected_to_metronome",
          "is_personal",
          "has_cancelled"
        ],
        "title": "Organization",
        "description": "Information about an organization."
      },
      "OrganizationBillingInfo": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "config": {
            "$ref": "#/components/schemas/OrganizationConfig"
          },
          "connected_to_stripe": {
            "type": "boolean",
            "title": "Connected To Stripe"
          },
          "connected_to_metronome": {
            "type": "boolean",
            "title": "Connected To Metronome"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentPlanTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "payment_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripePaymentMethodInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "end_of_billing_period": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Of Billing Period"
          },
          "current_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerVisiblePlanInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "upcoming_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerVisiblePlanInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "reached_max_workspaces": {
            "type": "boolean",
            "title": "Reached Max Workspaces",
            "default": false
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "config",
          "connected_to_stripe",
          "connected_to_metronome",
          "is_personal"
        ],
        "title": "OrganizationBillingInfo",
        "description": "Information about an organization's billing configuration."
      },
      "OrganizationConfig": {
        "properties": {
          "max_identities": {
            "type": "integer",
            "title": "Max Identities",
            "default": 5
          },
          "max_workspaces": {
            "type": "integer",
            "title": "Max Workspaces",
            "default": 1
          },
          "can_use_rbac": {
            "type": "boolean",
            "title": "Can Use Rbac",
            "default": false
          },
          "can_add_seats": {
            "type": "boolean",
            "title": "Can Add Seats",
            "default": true
          },
          "startup_plan_approval_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Startup Plan Approval Date"
          },
          "partner_plan_approval_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Plan Approval Date"
          },
          "premier_plan_approval_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Premier Plan Approval Date"
          },
          "can_disable_public_sharing": {
            "type": "boolean",
            "title": "Can Disable Public Sharing",
            "default": false
          },
          "can_serve_datasets": {
            "type": "boolean",
            "title": "Can Serve Datasets",
            "default": false
          },
          "can_use_langgraph_cloud": {
            "type": "boolean",
            "title": "Can Use Langgraph Cloud",
            "default": false
          },
          "max_langgraph_cloud_deployments": {
            "type": "integer",
            "title": "Max Langgraph Cloud Deployments",
            "default": 3
          },
          "max_free_langgraph_cloud_deployments": {
            "type": "integer",
            "title": "Max Free Langgraph Cloud Deployments",
            "default": 0
          },
          "can_use_saml_sso": {
            "type": "boolean",
            "title": "Can Use Saml Sso",
            "default": false
          },
          "can_use_bulk_export": {
            "type": "boolean",
            "title": "Can Use Bulk Export",
            "default": false
          },
          "use_python_playground_service": {
            "type": "boolean",
            "title": "Use Python Playground Service",
            "default": false
          },
          "show_updated_sidenav": {
            "type": "boolean",
            "title": "Show Updated Sidenav",
            "default": false
          },
          "show_updated_resource_tags": {
            "type": "boolean",
            "title": "Show Updated Resource Tags",
            "default": false
          },
          "kv_dataset_message_support": {
            "type": "boolean",
            "title": "Kv Dataset Message Support",
            "default": true
          },
          "show_playground_prompt_canvas": {
            "type": "boolean",
            "title": "Show Playground Prompt Canvas",
            "default": false
          },
          "allow_custom_iframes": {
            "type": "boolean",
            "title": "Allow Custom Iframes",
            "default": false
          },
          "enable_langgraph_pricing": {
            "type": "boolean",
            "title": "Enable Langgraph Pricing",
            "default": false
          },
          "enable_thread_view_playground": {
            "type": "boolean",
            "title": "Enable Thread View Playground",
            "default": false
          },
          "enable_org_usage_charts": {
            "type": "boolean",
            "title": "Enable Org Usage Charts",
            "default": false
          },
          "enable_select_all_traces": {
            "type": "boolean",
            "title": "Enable Select All Traces",
            "default": false
          },
          "use_exact_search_for_prompts": {
            "type": "boolean",
            "title": "Use Exact Search For Prompts",
            "default": false
          },
          "langgraph_deploy_own_cloud_enabled": {
            "type": "boolean",
            "title": "Langgraph Deploy Own Cloud Enabled",
            "default": false
          },
          "prompt_optimization_jobs_enabled": {
            "type": "boolean",
            "title": "Prompt Optimization Jobs Enabled",
            "default": false
          },
          "enable_k8s_vanilla_platform": {
            "type": "boolean",
            "title": "Enable K8S Vanilla Platform",
            "default": false
          },
          "demo_lgp_new_graph_enabled": {
            "type": "boolean",
            "title": "Demo Lgp New Graph Enabled",
            "default": false
          },
          "datadog_rum_session_sample_rate": {
            "type": "integer",
            "title": "Datadog Rum Session Sample Rate",
            "default": 20
          },
          "langgraph_remote_reconciler_enabled": {
            "type": "boolean",
            "title": "Langgraph Remote Reconciler Enabled",
            "default": false
          },
          "langsmith_alerts_poc_enabled": {
            "type": "boolean",
            "title": "Langsmith Alerts Poc Enabled",
            "default": true
          },
          "tenant_skip_topk_facets": {
            "type": "boolean",
            "title": "Tenant Skip Topk Facets",
            "default": false
          },
          "lgp_templates_enabled": {
            "type": "boolean",
            "title": "Lgp Templates Enabled",
            "default": false
          },
          "langsmith_alerts_legacy_poc_enabled": {
            "type": "boolean",
            "title": "Langsmith Alerts Legacy Poc Enabled",
            "default": false
          },
          "enable_prebuilt_dashboards": {
            "type": "boolean",
            "title": "Enable Prebuilt Dashboards",
            "default": false
          },
          "langsmith_experimental_search_enabled": {
            "type": "boolean",
            "title": "Langsmith Experimental Search Enabled",
            "default": false
          },
          "langgraph_platform_ga_enabled": {
            "type": "boolean",
            "title": "Langgraph Platform Ga Enabled",
            "default": false
          }
        },
        "type": "object",
        "title": "OrganizationConfig",
        "description": "Organization level configuration. May include any field that exists in tenant config and additional fields."
      },
      "OrganizationCreate": {
        "properties": {
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ]+$",
            "title": "Display Name"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "is_personal"
        ],
        "title": "OrganizationCreate",
        "description": "Create organization schema."
      },
      "OrganizationDashboardColorScheme": {
        "type": "string",
        "enum": [
          "light",
          "dark"
        ],
        "title": "OrganizationDashboardColorScheme",
        "description": "Enum for acceptable color schemes of dashboards."
      },
      "OrganizationDashboardSchema": {
        "properties": {
          "embeddable_url": {
            "type": "string",
            "title": "Embeddable Url"
          }
        },
        "type": "object",
        "required": [
          "embeddable_url"
        ],
        "title": "OrganizationDashboardSchema",
        "description": "Organization dashboard for usage or invoices."
      },
      "OrganizationDashboardType": {
        "type": "string",
        "enum": [
          "invoices",
          "usage",
          "credits"
        ],
        "title": "OrganizationDashboardType",
        "description": "Enum for acceptable types of dashboards."
      },
      "OrganizationInfo": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "config": {
            "$ref": "#/components/schemas/OrganizationConfig"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentPlanTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "reached_max_workspaces": {
            "type": "boolean",
            "title": "Reached Max Workspaces",
            "default": false
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions",
            "default": []
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": false
          },
          "sso_only": {
            "type": "boolean",
            "title": "Sso Only",
            "default": false
          },
          "sso_login_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sso Login Slug"
          },
          "public_sharing_disabled": {
            "type": "boolean",
            "title": "Public Sharing Disabled",
            "default": false
          },
          "marketplace_payouts_enabled": {
            "type": "boolean",
            "title": "Marketplace Payouts Enabled",
            "default": false
          },
          "wallet": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Wallet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "config",
          "is_personal"
        ],
        "title": "OrganizationInfo",
        "description": "Information about an organization."
      },
      "OrganizationMembers": {
        "properties": {
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/OrgMemberIdentity"
            },
            "type": "array",
            "title": "Members"
          },
          "pending": {
            "items": {
              "$ref": "#/components/schemas/OrgPendingIdentity"
            },
            "type": "array",
            "title": "Pending"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "members",
          "pending"
        ],
        "title": "OrganizationMembers",
        "description": "Organization members schema."
      },
      "OrganizationPGSchemaSlim": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "created_by_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By User Id"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled"
          },
          "sso_login_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sso Login Slug"
          },
          "sso_only": {
            "type": "boolean",
            "title": "Sso Only",
            "default": false
          },
          "public_sharing_disabled": {
            "type": "boolean",
            "title": "Public Sharing Disabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "display_name",
          "is_personal",
          "disabled"
        ],
        "title": "OrganizationPGSchemaSlim",
        "description": "Schema for an organization in postgres for list views."
      },
      "OrganizationUpdate": {
        "properties": {
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ]+$",
            "title": "Display Name"
          },
          "public_sharing_disabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public Sharing Disabled"
          },
          "unshare_all": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unshare All"
          }
        },
        "type": "object",
        "title": "OrganizationUpdate",
        "description": "Update organization schema."
      },
      "OutputTokenDetails": {
        "properties": {
          "audio": {
            "type": "integer",
            "title": "Audio"
          },
          "reasoning": {
            "type": "integer",
            "title": "Reasoning"
          }
        },
        "type": "object",
        "title": "OutputTokenDetails",
        "description": "Breakdown of output token counts.\n\nDoes *not* need to sum to full output token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"reasoning\": 200,\n        }\n\n.. versionadded:: 0.3.9"
      },
      "PagerdutySeverity": {
        "type": "string",
        "enum": [
          "critical",
          "warning",
          "error",
          "info"
        ],
        "title": "PagerdutySeverity",
        "description": "Enum for severity."
      },
      "PaymentPlanTier": {
        "type": "string",
        "enum": [
          "no_plan",
          "developer",
          "plus",
          "enterprise",
          "developer_legacy",
          "plus_legacy",
          "free",
          "enterprise_legacy",
          "startup",
          "partner",
          "premier"
        ],
        "title": "PaymentPlanTier"
      },
      "PendingIdentity": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "workspace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Ids"
          },
          "workspace_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role Id"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope",
            "default": "workspace"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "org_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Id"
          },
          "org_role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "created_at"
        ],
        "title": "PendingIdentity"
      },
      "PendingIdentityCreate": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "workspace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Ids"
          },
          "workspace_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role Id"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "PendingIdentityCreate"
      },
      "PermissionResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "access_scope"
        ],
        "title": "PermissionResponse"
      },
      "PlaygroundPromptCanvasPayload": {
        "properties": {
          "messages": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AIMessage"
                },
                {
                  "$ref": "#/components/schemas/HumanMessage"
                },
                {
                  "$ref": "#/components/schemas/ChatMessage"
                },
                {
                  "$ref": "#/components/schemas/SystemMessage"
                },
                {
                  "$ref": "#/components/schemas/FunctionMessage"
                },
                {
                  "$ref": "#/components/schemas/ToolMessage"
                },
                {
                  "$ref": "#/components/schemas/AIMessageChunk"
                },
                {
                  "$ref": "#/components/schemas/HumanMessageChunk"
                },
                {
                  "$ref": "#/components/schemas/ChatMessageChunk"
                },
                {
                  "$ref": "#/components/schemas/SystemMessageChunk"
                },
                {
                  "$ref": "#/components/schemas/FunctionMessageChunk"
                },
                {
                  "$ref": "#/components/schemas/ToolMessageChunk"
                }
              ]
            },
            "type": "array",
            "title": "Messages"
          },
          "highlighted": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Highlight"
              },
              {
                "type": "null"
              }
            ]
          },
          "artifact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Artifact"
              },
              {
                "type": "null"
              }
            ]
          },
          "artifact_length": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "shortest",
                  "short",
                  "long",
                  "longest"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Artifact Length"
          },
          "reading_level": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "child",
                  "teenager",
                  "college",
                  "phd"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Reading Level"
          },
          "custom_action": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Action"
          },
          "template_format": {
            "type": "string",
            "enum": [
              "f-string",
              "mustache"
            ],
            "title": "Template Format"
          },
          "secrets": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Secrets"
          }
        },
        "type": "object",
        "required": [
          "messages",
          "template_format",
          "secrets"
        ],
        "title": "PlaygroundPromptCanvasPayload"
      },
      "PlaygroundRunOverDatasetRequestSchema": {
        "properties": {
          "manifest": {
            "title": "Manifest"
          },
          "secrets": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Secrets"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "repo_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repo Id"
          },
          "tools": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools"
          },
          "tool_choice": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Choice"
          },
          "parallel_tool_calls": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parallel Tool Calls"
          },
          "options": {
            "$ref": "#/components/schemas/RunnableConfig"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "repo_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repo Handle"
          },
          "owner": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner"
          },
          "commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit"
          },
          "evaluator_rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluator Rules"
          },
          "requests_per_second": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requests Per Second"
          },
          "use_or_fallback_to_workspace_secrets": {
            "type": "boolean",
            "title": "Use Or Fallback To Workspace Secrets",
            "default": false
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "dataset_splits": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Splits"
          },
          "repetitions": {
            "type": "integer",
            "maximum": 30.0,
            "minimum": 1.0,
            "title": "Repetitions",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "manifest",
          "secrets",
          "options",
          "project_name",
          "dataset_id"
        ],
        "title": "PlaygroundRunOverDatasetRequestSchema"
      },
      "PlaygroundSavedOptions": {
        "properties": {
          "requests_per_second": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requests Per Second"
          }
        },
        "type": "object",
        "title": "PlaygroundSavedOptions"
      },
      "PlaygroundSettingsCreateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "settings": {
            "type": "object",
            "title": "Settings"
          },
          "options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PlaygroundSavedOptions"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "settings"
        ],
        "title": "PlaygroundSettingsCreateRequest"
      },
      "PlaygroundSettingsResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "settings": {
            "type": "object",
            "title": "Settings"
          },
          "options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PlaygroundSavedOptions"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "settings",
          "created_at",
          "updated_at"
        ],
        "title": "PlaygroundSettingsResponse"
      },
      "PlaygroundSettingsUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "settings": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings"
          },
          "options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PlaygroundSavedOptions"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "PlaygroundSettingsUpdateRequest"
      },
      "PopulateAnnotationQueueSchema": {
        "properties": {
          "queue_id": {
            "type": "string",
            "format": "uuid",
            "title": "Queue Id"
          },
          "session_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Session Ids"
          }
        },
        "type": "object",
        "required": [
          "queue_id",
          "session_ids"
        ],
        "title": "PopulateAnnotationQueueSchema"
      },
      "PromptOptimizationJob": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "repo_id": {
            "type": "string",
            "format": "uuid",
            "title": "Repo Id"
          },
          "status": {
            "$ref": "#/components/schemas/EPromptOptimizationJobStatus"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "algorithm": {
            "$ref": "#/components/schemas/EPromptOptimizationAlgorithm"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptimConfig"
              },
              {
                "$ref": "#/components/schemas/DemoConfig"
              }
            ],
            "title": "Config"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/PromptOptimizationResult"
            },
            "type": "array",
            "title": "Results"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "repo_id",
          "status",
          "tenant_id",
          "algorithm",
          "config",
          "created_at",
          "updated_at"
        ],
        "title": "PromptOptimizationJob"
      },
      "PromptOptimizationJobCreate": {
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/EPromptOptimizationAlgorithm"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptimConfig"
              },
              {
                "$ref": "#/components/schemas/DemoConfig"
              }
            ],
            "title": "Config"
          }
        },
        "type": "object",
        "required": [
          "algorithm",
          "config"
        ],
        "title": "PromptOptimizationJobCreate"
      },
      "PromptOptimizationJobLog": {
        "properties": {
          "log_type": {
            "$ref": "#/components/schemas/EPromptOptimizationJobLogType"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "job_id": {
            "type": "string",
            "format": "uuid",
            "title": "Job Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "log_type",
          "message",
          "id",
          "job_id",
          "created_at"
        ],
        "title": "PromptOptimizationJobLog"
      },
      "PromptOptimizationJobLogCreate": {
        "properties": {
          "log_type": {
            "$ref": "#/components/schemas/EPromptOptimizationJobLogType"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "log_type",
          "message"
        ],
        "title": "PromptOptimizationJobLogCreate"
      },
      "PromptOptimizationJobUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EPromptOptimizationJobStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptOptimizationResult"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "PromptOptimizationJobUpdate"
      },
      "PromptOptimizationJobWithLogs": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "repo_id": {
            "type": "string",
            "format": "uuid",
            "title": "Repo Id"
          },
          "status": {
            "$ref": "#/components/schemas/EPromptOptimizationJobStatus"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "algorithm": {
            "$ref": "#/components/schemas/EPromptOptimizationAlgorithm"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptimConfig"
              },
              {
                "$ref": "#/components/schemas/DemoConfig"
              }
            ],
            "title": "Config"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/PromptOptimizationResult"
            },
            "type": "array",
            "title": "Results"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "logs": {
            "items": {
              "$ref": "#/components/schemas/PromptOptimizationJobLog"
            },
            "type": "array",
            "title": "Logs"
          }
        },
        "type": "object",
        "required": [
          "id",
          "repo_id",
          "status",
          "tenant_id",
          "algorithm",
          "config",
          "created_at",
          "updated_at",
          "logs"
        ],
        "title": "PromptOptimizationJobWithLogs"
      },
      "PromptOptimizationResult": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "x": {
            "type": "number",
            "title": "X"
          },
          "y": {
            "type": "number",
            "title": "Y"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "x",
          "y"
        ],
        "title": "PromptOptimizationResult"
      },
      "PromptimConfig": {
        "properties": {
          "message_index": {
            "type": "integer",
            "title": "Message Index"
          },
          "task_description": {
            "type": "string",
            "title": "Task Description"
          },
          "dataset_name": {
            "type": "string",
            "title": "Dataset Name"
          },
          "train_split": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Train Split"
          },
          "dev_split": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dev Split"
          },
          "test_split": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Split"
          },
          "evaluators": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Evaluators"
          },
          "num_epochs": {
            "type": "integer",
            "title": "Num Epochs"
          },
          "auto_commit": {
            "type": "boolean",
            "title": "Auto Commit"
          }
        },
        "type": "object",
        "required": [
          "message_index",
          "task_description",
          "dataset_name",
          "train_split",
          "dev_split",
          "test_split",
          "evaluators",
          "num_epochs",
          "auto_commit"
        ],
        "title": "PromptimConfig"
      },
      "ProviderUserSlim": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthProvider"
              },
              {
                "type": "null"
              }
            ]
          },
          "ls_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ls User Id"
          },
          "saml_provider_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Saml Provider Id"
          },
          "provider_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email_confirmed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Confirmed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "ls_user_id",
          "created_at",
          "updated_at"
        ],
        "title": "ProviderUserSlim"
      },
      "PublicComparativeExperiment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "experiments_info": {
            "items": {
              "$ref": "#/components/schemas/SimpleExperimentInfo"
            },
            "type": "array",
            "title": "Experiments Info"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "modified_at",
          "experiments_info"
        ],
        "title": "PublicComparativeExperiment",
        "description": "Publicly-shared ComparativeExperiment schema."
      },
      "PublicExampleWithRuns": {
        "properties": {
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "attachment_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Urls"
          },
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunPublicDatasetSchema"
            },
            "type": "array",
            "title": "Runs"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "inputs",
          "id",
          "name",
          "runs"
        ],
        "title": "PublicExampleWithRuns",
        "description": "Schema for an example in a publicly-shared dataset with list of runs."
      },
      "PutDatasetVersionsSchema": {
        "properties": {
          "as_of": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "As Of",
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          },
          "tag": {
            "type": "string",
            "title": "Tag"
          }
        },
        "type": "object",
        "required": [
          "as_of",
          "tag"
        ],
        "title": "PutDatasetVersionsSchema"
      },
      "QueryExampleSchemaWithRuns": {
        "properties": {
          "session_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Session Ids"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Limit",
            "default": 10
          },
          "preview": {
            "type": "boolean",
            "title": "Preview",
            "default": false
          },
          "format": {
            "anyOf": [
              {
                "type": "string",
                "const": "csv"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "sort_params": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SortParamsForRunsComparisonView"
              },
              {
                "type": "null"
              }
            ]
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "propertyNames": {
                  "format": "uuid"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          }
        },
        "type": "object",
        "required": [
          "session_ids"
        ],
        "title": "QueryExampleSchemaWithRuns"
      },
      "QueryFeedbackDelta": {
        "properties": {
          "baseline_session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Baseline Session Id"
          },
          "comparison_session_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Comparison Session Ids"
          },
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "propertyNames": {
                  "format": "uuid"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 100
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          }
        },
        "type": "object",
        "required": [
          "baseline_session_id",
          "comparison_session_ids",
          "feedback_key"
        ],
        "title": "QueryFeedbackDelta"
      },
      "QueryGroupedExamplesWithRuns": {
        "properties": {
          "session_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Session Ids"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Limit",
            "default": 10
          },
          "preview": {
            "type": "boolean",
            "title": "Preview",
            "default": false
          },
          "group_by": {
            "$ref": "#/components/schemas/GroupExampleRunsByField"
          },
          "metadata_key": {
            "type": "string",
            "title": "Metadata Key"
          },
          "per_group_limit": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Per Group Limit",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "session_ids",
          "group_by",
          "metadata_key"
        ],
        "title": "QueryGroupedExamplesWithRuns"
      },
      "QueryParamsForPublicRunSchema": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "title": "QueryParamsForPublicRunSchema",
        "description": "Query params for public run endpoints."
      },
      "RepoExampleResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "session_id"
        ],
        "title": "RepoExampleResponse",
        "description": "Response model for example runs"
      },
      "RepoTag": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "repo_id": {
            "type": "string",
            "format": "uuid",
            "title": "Repo Id"
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "Commit Id"
          },
          "commit_hash": {
            "type": "string",
            "title": "Commit Hash"
          },
          "tag_name": {
            "type": "string",
            "title": "Tag Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "repo_id",
          "commit_id",
          "commit_hash",
          "tag_name",
          "created_at",
          "updated_at"
        ],
        "title": "RepoTag",
        "description": "Fields for a prompt tag"
      },
      "RepoTagRequest": {
        "properties": {
          "tag_name": {
            "type": "string",
            "title": "Tag Name"
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "Commit Id"
          }
        },
        "type": "object",
        "required": [
          "tag_name",
          "commit_id"
        ],
        "title": "RepoTagRequest",
        "description": "Fields to create a prompt tag"
      },
      "RepoUpdateTagRequest": {
        "properties": {
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "Commit Id"
          }
        },
        "type": "object",
        "required": [
          "commit_id"
        ],
        "title": "RepoUpdateTagRequest",
        "description": "Fields to update a prompt tag"
      },
      "RepoWithLookups": {
        "properties": {
          "repo_handle": {
            "type": "string",
            "title": "Repo Handle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "original_repo_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Repo Id"
          },
          "upstream_repo_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upstream Repo Id"
          },
          "owner": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "num_likes": {
            "type": "integer",
            "title": "Num Likes"
          },
          "num_downloads": {
            "type": "integer",
            "title": "Num Downloads"
          },
          "num_views": {
            "type": "integer",
            "title": "Num Views"
          },
          "liked_by_auth_user": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Liked By Auth User"
          },
          "last_commit_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Commit Hash"
          },
          "num_commits": {
            "type": "integer",
            "title": "Num Commits"
          },
          "original_repo_full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Repo Full Name"
          },
          "upstream_repo_full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upstream Repo Full Name"
          },
          "latest_commit_manifest": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CommitManifestResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "repo_handle",
          "id",
          "tenant_id",
          "created_at",
          "updated_at",
          "is_public",
          "is_archived",
          "tags",
          "owner",
          "full_name",
          "num_likes",
          "num_downloads",
          "num_views",
          "num_commits"
        ],
        "title": "RepoWithLookups",
        "description": "All database fields for repos, plus helpful computed fields."
      },
      "RequestBodyForRunsGenerateQuery": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "feedback_keys": {
            "items": {
              "$ref": "#/components/schemas/RunsGenerateQueryFeedbackKeys"
            },
            "type": "array",
            "title": "Feedback Keys"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "RequestBodyForRunsGenerateQuery"
      },
      "Resource": {
        "properties": {
          "tagging_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tagging Id"
          },
          "resource_name": {
            "type": "string",
            "title": "Resource Name"
          },
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "tagging_id",
          "resource_name",
          "resource_id"
        ],
        "title": "Resource"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "prompt",
          "project",
          "queue",
          "deployment",
          "experiment",
          "dataset",
          "dashboard"
        ],
        "title": "ResourceType"
      },
      "ResponseBodyForRunsGenerateQuery": {
        "properties": {
          "filter": {
            "type": "string",
            "title": "Filter"
          },
          "feedback_urls": {
            "additionalProperties": {
              "type": "string"
            },
            "propertyNames": {
              "$ref": "#/components/schemas/RunsGenerateQueryFeedbackKeys"
            },
            "type": "object",
            "title": "Feedback Urls"
          }
        },
        "type": "object",
        "required": [
          "filter",
          "feedback_urls"
        ],
        "title": "ResponseBodyForRunsGenerateQuery"
      },
      "Role": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          },
          "access_scope": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccessScope"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "display_name",
          "description",
          "permissions"
        ],
        "title": "Role"
      },
      "RootModel_Dict_str__list_str___": {
        "additionalProperties": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": "object",
        "title": "RootModel[Dict[str, list[str]]]"
      },
      "RuleLogActionOutcome": {
        "type": "string",
        "enum": [
          "success",
          "skipped",
          "error"
        ],
        "title": "RuleLogActionOutcome"
      },
      "RuleLogActionResponse": {
        "properties": {
          "outcome": {
            "$ref": "#/components/schemas/RuleLogActionOutcome"
          },
          "payload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payload"
          }
        },
        "type": "object",
        "required": [
          "outcome"
        ],
        "title": "RuleLogActionResponse"
      },
      "RuleLogSchema": {
        "properties": {
          "rule_id": {
            "type": "string",
            "format": "uuid",
            "title": "Rule Id"
          },
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Name"
          },
          "run_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Type"
          },
          "run_session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Session Id"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "application_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Time"
          },
          "add_to_annotation_queue": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "add_to_dataset": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "evaluators": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "alerts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "rule_id",
          "run_id",
          "start_time",
          "end_time"
        ],
        "title": "RuleLogSchema",
        "description": "Run rules log schema."
      },
      "RunDateOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "title": "RunDateOrder",
        "description": "Enum for run start date order."
      },
      "RunGroupBy": {
        "type": "string",
        "enum": [
          "conversation"
        ],
        "title": "RunGroupBy"
      },
      "RunGroupRequest": {
        "properties": {
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "group_by": {
            "$ref": "#/components/schemas/RunGroupBy"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "group_by"
        ],
        "title": "RunGroupRequest"
      },
      "RunGroupStats": {
        "properties": {
          "run_count": {
            "type": "integer",
            "title": "Run Count"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "first_token_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P50"
          },
          "first_token_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P99"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "median_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Median Tokens"
          },
          "completion_tokens_p50": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens P50"
          },
          "prompt_tokens_p50": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens P50"
          },
          "tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens P99"
          },
          "completion_tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens P99"
          },
          "prompt_tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens P99"
          },
          "last_run_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "run_facets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Facets"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "streaming_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streaming Rate"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "cost_p50": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost P50"
          },
          "cost_p99": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost P99"
          },
          "group_count": {
            "type": "integer",
            "title": "Group Count"
          }
        },
        "type": "object",
        "required": [
          "run_count",
          "group_count"
        ],
        "title": "RunGroupStats"
      },
      "RunPublicDatasetSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status",
          "session_id"
        ],
        "title": "RunPublicDatasetSchema",
        "description": "Schema for a run in a publicly-shared dataset."
      },
      "RunPublicSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status"
        ],
        "title": "RunPublicSchema"
      },
      "RunRulesAlertType": {
        "type": "string",
        "enum": [
          "pagerduty"
        ],
        "title": "RunRulesAlertType",
        "description": "Enum for alert types."
      },
      "RunRulesCreateSchema": {
        "properties": {
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "default": true
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "sampling_rate": {
            "type": "number",
            "title": "Sampling Rate"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "backfill_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backfill From"
          },
          "use_corrections_dataset": {
            "type": "boolean",
            "title": "Use Corrections Dataset",
            "default": false
          },
          "num_few_shot_examples": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Few Shot Examples"
          },
          "extend_only": {
            "type": "boolean",
            "title": "Extend Only",
            "default": false
          },
          "transient": {
            "type": "boolean",
            "title": "Transient",
            "default": false
          },
          "add_to_annotation_queue_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Annotation Queue Id"
          },
          "add_to_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Dataset Id"
          },
          "add_to_dataset_prefer_correction": {
            "type": "boolean",
            "title": "Add To Dataset Prefer Correction",
            "default": false
          },
          "evaluators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EvaluatorTopLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluators"
          },
          "code_evaluators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CodeEvaluatorTopLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Evaluators"
          },
          "alerts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunRulesPagerdutyAlertSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alerts"
          },
          "webhooks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunRulesWebhookSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhooks"
          },
          "evaluator_version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluator Version"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "sampling_rate"
        ],
        "title": "RunRulesCreateSchema"
      },
      "RunRulesPagerdutyAlertSchema": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunRulesAlertType"
              },
              {
                "type": "null"
              }
            ],
            "default": "pagerduty"
          },
          "routing_key": {
            "type": "string",
            "title": "Routing Key"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "severity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagerdutySeverity"
              },
              {
                "type": "null"
              }
            ],
            "default": "warning"
          }
        },
        "type": "object",
        "required": [
          "routing_key"
        ],
        "title": "RunRulesPagerdutyAlertSchema"
      },
      "RunRulesSchema": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "default": true
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "session_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Name"
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "sampling_rate": {
            "type": "number",
            "title": "Sampling Rate"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "add_to_annotation_queue_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Annotation Queue Id"
          },
          "add_to_annotation_queue_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Annotation Queue Name"
          },
          "add_to_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Dataset Id"
          },
          "add_to_dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Dataset Name"
          },
          "add_to_dataset_prefer_correction": {
            "type": "boolean",
            "title": "Add To Dataset Prefer Correction",
            "default": false
          },
          "corrections_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Corrections Dataset Id"
          },
          "use_corrections_dataset": {
            "type": "boolean",
            "title": "Use Corrections Dataset",
            "default": false
          },
          "num_few_shot_examples": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Few Shot Examples"
          },
          "evaluators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EvaluatorTopLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluators"
          },
          "code_evaluators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CodeEvaluatorTopLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Evaluators"
          },
          "alerts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunRulesPagerdutyAlertSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alerts"
          },
          "webhooks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunRulesWebhookSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhooks"
          },
          "extend_only": {
            "type": "boolean",
            "title": "Extend Only",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "backfill_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backfill From"
          },
          "transient": {
            "type": "boolean",
            "title": "Transient",
            "default": false
          },
          "evaluator_version": {
            "type": "integer",
            "title": "Evaluator Version"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "display_name",
          "sampling_rate",
          "webhooks",
          "created_at",
          "updated_at",
          "evaluator_version"
        ],
        "title": "RunRulesSchema",
        "description": "Run rules schema."
      },
      "RunRulesWebhookSchema": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "RunRulesWebhookSchema"
      },
      "RunSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "app_path": {
            "type": "string",
            "title": "App Path"
          },
          "last_queued_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Queued At"
          },
          "in_dataset": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Dataset"
          },
          "share_token": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Token"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "trace_first_received_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace First Received At"
          },
          "ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Seconds"
          },
          "trace_upgrade": {
            "type": "boolean",
            "title": "Trace Upgrade",
            "default": false
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status",
          "session_id",
          "app_path"
        ],
        "title": "RunSchema",
        "description": "Run schema."
      },
      "RunSchemaComparisonView": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "app_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Path"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "id",
          "session_id",
          "status"
        ],
        "title": "RunSchemaComparisonView",
        "description": "Run schema for comparison view."
      },
      "RunSchemaWithAnnotationQueueInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "app_path": {
            "type": "string",
            "title": "App Path"
          },
          "last_queued_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Queued At"
          },
          "in_dataset": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Dataset"
          },
          "share_token": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Token"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "trace_first_received_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace First Received At"
          },
          "ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Seconds"
          },
          "trace_upgrade": {
            "type": "boolean",
            "title": "Trace Upgrade",
            "default": false
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          },
          "queue_run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Queue Run Id"
          },
          "last_reviewed_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Reviewed Time"
          },
          "added_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Added At"
          },
          "effective_added_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effective Added At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status",
          "session_id",
          "app_path",
          "queue_run_id"
        ],
        "title": "RunSchemaWithAnnotationQueueInfo",
        "description": "Run schema with annotation queue info."
      },
      "RunSelect": {
        "type": "string",
        "enum": [
          "id",
          "name",
          "run_type",
          "start_time",
          "end_time",
          "status",
          "error",
          "extra",
          "events",
          "inputs",
          "inputs_preview",
          "inputs_s3_urls",
          "inputs_or_signed_url",
          "outputs",
          "outputs_preview",
          "outputs_s3_urls",
          "outputs_or_signed_url",
          "s3_urls",
          "error_or_signed_url",
          "events_or_signed_url",
          "extra_or_signed_url",
          "serialized_or_signed_url",
          "parent_run_id",
          "manifest_id",
          "manifest_s3_id",
          "manifest",
          "session_id",
          "serialized",
          "reference_example_id",
          "reference_dataset_id",
          "total_tokens",
          "prompt_tokens",
          "completion_tokens",
          "total_cost",
          "prompt_cost",
          "completion_cost",
          "price_model_id",
          "first_token_time",
          "trace_id",
          "dotted_order",
          "last_queued_at",
          "feedback_stats",
          "child_run_ids",
          "parent_run_ids",
          "tags",
          "in_dataset",
          "app_path",
          "share_token",
          "trace_tier",
          "trace_first_received_at",
          "ttl_seconds",
          "trace_upgrade",
          "thread_id"
        ],
        "title": "RunSelect",
        "description": "Enum for available run columns."
      },
      "RunShareSchema": {
        "properties": {
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "share_token": {
            "type": "string",
            "format": "uuid",
            "title": "Share Token"
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "share_token"
        ],
        "title": "RunShareSchema"
      },
      "RunStats": {
        "properties": {
          "run_count": {
            "type": "integer",
            "title": "Run Count"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "first_token_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P50"
          },
          "first_token_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P99"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "median_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Median Tokens"
          },
          "completion_tokens_p50": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens P50"
          },
          "prompt_tokens_p50": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens P50"
          },
          "tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens P99"
          },
          "completion_tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens P99"
          },
          "prompt_tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens P99"
          },
          "last_run_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "run_facets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Facets"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "streaming_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streaming Rate"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "cost_p50": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost P50"
          },
          "cost_p99": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost P99"
          }
        },
        "type": "object",
        "required": [
          "run_count"
        ],
        "title": "RunStats"
      },
      "RunStatsGroupBy": {
        "properties": {
          "attribute": {
            "type": "string",
            "enum": [
              "name",
              "run_type",
              "tag",
              "metadata"
            ],
            "title": "Attribute"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "attribute"
        ],
        "title": "RunStatsGroupBy",
        "description": "Group by param for run stats."
      },
      "RunStatsGroupBySeriesResponse": {
        "properties": {
          "attribute": {
            "type": "string",
            "enum": [
              "name",
              "run_type",
              "tag",
              "metadata"
            ],
            "title": "Attribute"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "set_by": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "section",
                  "series"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Set By"
          }
        },
        "type": "object",
        "required": [
          "attribute"
        ],
        "title": "RunStatsGroupBySeriesResponse",
        "description": "Include additional information about where the group_by param was set."
      },
      "RunStatsQueryParams": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "trace": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace"
          },
          "parent_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run"
          },
          "run_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "session": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session"
          },
          "reference_example": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example"
          },
          "execution_order": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Order"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "is_root": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Root"
          },
          "data_source_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunsFilterDataSourceTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "skip_pagination": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Pagination"
          },
          "search_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Filter"
          },
          "use_experimental_search": {
            "type": "boolean",
            "title": "Use Experimental Search",
            "default": false
          },
          "group_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunStatsGroupBy"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "RunStatsQueryParams",
        "description": "Query params for run stats."
      },
      "RunTypeEnum": {
        "type": "string",
        "enum": [
          "tool",
          "chain",
          "llm",
          "retriever",
          "embedding",
          "prompt",
          "parser"
        ],
        "title": "RunTypeEnum",
        "description": "Enum for run types."
      },
      "RunnableConfig": {
        "properties": {
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "callbacks": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {},
              {
                "type": "null"
              }
            ],
            "title": "Callbacks"
          },
          "run_name": {
            "type": "string",
            "title": "Run Name"
          },
          "max_concurrency": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Concurrency"
          },
          "recursion_limit": {
            "type": "integer",
            "title": "Recursion Limit"
          },
          "configurable": {
            "type": "object",
            "title": "Configurable"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          }
        },
        "type": "object",
        "title": "RunnableConfig",
        "description": "Configuration for a Runnable."
      },
      "RunsFilterDataSourceTypeEnum": {
        "type": "string",
        "enum": [
          "current",
          "historical"
        ],
        "title": "RunsFilterDataSourceTypeEnum",
        "description": "Enum for run data source types."
      },
      "RunsGenerateQueryFeedbackKeys": {
        "type": "string",
        "enum": [
          "user_score",
          "user_edited",
          "user_removed",
          "user_opened_run",
          "user_selected_run",
          "results_size",
          "valid_filter"
        ],
        "title": "RunsGenerateQueryFeedbackKeys"
      },
      "SSOConfirmEmailRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "SSOConfirmEmailRequest"
      },
      "SSOEmailVerificationSendRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "saml_provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Saml Provider Id"
          }
        },
        "type": "object",
        "required": [
          "email",
          "saml_provider_id"
        ],
        "title": "SSOEmailVerificationSendRequest"
      },
      "SSOEmailVerificationStatusRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "saml_provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Saml Provider Id"
          }
        },
        "type": "object",
        "required": [
          "email",
          "saml_provider_id"
        ],
        "title": "SSOEmailVerificationStatusRequest"
      },
      "SSOEmailVerificationStatusResponse": {
        "properties": {
          "email_confirmed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Confirmed At"
          }
        },
        "type": "object",
        "title": "SSOEmailVerificationStatusResponse"
      },
      "SSOProvider": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Provider Id"
          },
          "default_workspace_role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Default Workspace Role Id"
          },
          "default_workspace_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Default Workspace Ids"
          },
          "metadata_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Url"
          },
          "metadata_xml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Xml"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "provider_id",
          "default_workspace_role_id",
          "default_workspace_ids"
        ],
        "title": "SSOProvider"
      },
      "SSOProviderSlim": {
        "properties": {
          "provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Provider Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "organization_display_name": {
            "type": "string",
            "title": "Organization Display Name"
          }
        },
        "type": "object",
        "required": [
          "provider_id",
          "organization_id",
          "organization_display_name"
        ],
        "title": "SSOProviderSlim"
      },
      "SSOSettingsCreate": {
        "properties": {
          "default_workspace_role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Default Workspace Role Id"
          },
          "default_workspace_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Default Workspace Ids"
          },
          "metadata_xml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Xml"
          },
          "metadata_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Url"
          },
          "attribute_mapping": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Attribute Mapping"
          }
        },
        "type": "object",
        "required": [
          "default_workspace_role_id",
          "default_workspace_ids"
        ],
        "title": "SSOSettingsCreate"
      },
      "SSOSettingsUpdate": {
        "properties": {
          "default_workspace_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace Role Id"
          },
          "default_workspace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace Ids"
          },
          "metadata_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Url"
          },
          "metadata_xml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Xml"
          }
        },
        "type": "object",
        "title": "SSOSettingsUpdate"
      },
      "SearchDatasetRequest": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 5
          },
          "debug": {
            "type": "boolean",
            "title": "Debug",
            "default": false
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          }
        },
        "type": "object",
        "required": [
          "inputs"
        ],
        "title": "SearchDatasetRequest",
        "description": "Dataset schema for serving."
      },
      "SearchDatasetResponse": {
        "properties": {
          "examples": {
            "items": {
              "$ref": "#/components/schemas/SearchedFewShotExample"
            },
            "type": "array",
            "title": "Examples"
          }
        },
        "type": "object",
        "required": [
          "examples"
        ],
        "title": "SearchDatasetResponse",
        "description": "Dataset schema for serving."
      },
      "SearchedFewShotExample": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "outputs": {
            "type": "object",
            "title": "Outputs"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "debug_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Debug Info"
          }
        },
        "type": "object",
        "required": [
          "inputs",
          "outputs",
          "id"
        ],
        "title": "SearchedFewShotExample",
        "description": "Dataset schema for serving."
      },
      "SecretKey": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "SecretKey"
      },
      "SecretUpsert": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "SecretUpsert"
      },
      "ServiceAccount": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "default_workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "organization_id",
          "default_workspace_id"
        ],
        "title": "ServiceAccount"
      },
      "ServiceAccountCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ServiceAccountCreateRequest"
      },
      "ServiceAccountCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "default_workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace Id"
          },
          "organization_identity_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Identity Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "organization_id",
          "default_workspace_id",
          "organization_identity_id"
        ],
        "title": "ServiceAccountCreateResponse"
      },
      "ServiceAccountDeleteResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "default_workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "organization_id",
          "default_workspace_id"
        ],
        "title": "ServiceAccountDeleteResponse"
      },
      "SessionFeedbackDelta": {
        "properties": {
          "feedback_deltas": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FeedbackDelta"
            },
            "propertyNames": {
              "format": "uuid"
            },
            "type": "object",
            "title": "Feedback Deltas"
          }
        },
        "type": "object",
        "required": [
          "feedback_deltas"
        ],
        "title": "SessionFeedbackDelta",
        "description": "List of feedback keys with number of improvements and regressions for each."
      },
      "SessionSortableColumns": {
        "type": "string",
        "enum": [
          "name",
          "start_time",
          "last_run_start_time",
          "latency_p50",
          "latency_p99",
          "error_rate",
          "feedback"
        ],
        "title": "SessionSortableColumns"
      },
      "SetTenantHandleRequest": {
        "properties": {
          "tenant_handle": {
            "type": "string",
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "tenant_handle"
        ],
        "title": "SetTenantHandleRequest"
      },
      "SimpleExperimentInfo": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "SimpleExperimentInfo",
        "description": "Simple experiment info schema for use with comparative experiments"
      },
      "SingleCustomChartResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/CustomChartsDataPoint"
            },
            "type": "array",
            "title": "Data"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "chart_type": {
            "$ref": "#/components/schemas/CustomChartType"
          },
          "series": {
            "items": {
              "$ref": "#/components/schemas/CustomChartSeries"
            },
            "type": "array",
            "title": "Series"
          },
          "common_filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "data",
          "id",
          "title",
          "index",
          "chart_type",
          "series"
        ],
        "title": "SingleCustomChartResponse"
      },
      "SingleCustomChartResponseBase": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/CustomChartsDataPoint"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "SingleCustomChartResponseBase"
      },
      "SingleCustomChartSubSectionResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "charts": {
            "items": {
              "$ref": "#/components/schemas/SingleCustomChartResponse"
            },
            "type": "array",
            "title": "Charts"
          }
        },
        "type": "object",
        "required": [
          "title",
          "index",
          "id",
          "charts"
        ],
        "title": "SingleCustomChartSubSectionResponse"
      },
      "SortByComparativeExperimentColumn": {
        "type": "string",
        "enum": [
          "name",
          "created_at"
        ],
        "title": "SortByComparativeExperimentColumn",
        "description": "Enum for available comparative experiment columns to sort by."
      },
      "SortByDatasetColumn": {
        "type": "string",
        "enum": [
          "name",
          "created_at",
          "last_session_start_time",
          "example_count",
          "session_count"
        ],
        "title": "SortByDatasetColumn",
        "description": "Enum for available dataset columns to sort by."
      },
      "SortParamsForRunsComparisonView": {
        "properties": {
          "sort_by": {
            "type": "string",
            "title": "Sort By"
          },
          "sort_order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "title": "Sort Order",
            "default": "DESC"
          }
        },
        "type": "object",
        "required": [
          "sort_by"
        ],
        "title": "SortParamsForRunsComparisonView"
      },
      "SourceType": {
        "type": "string",
        "enum": [
          "api",
          "model",
          "app",
          "auto_eval"
        ],
        "title": "SourceType",
        "description": "Enum for feedback source types."
      },
      "StripeAccountLinksCreate": {
        "properties": {
          "success_path": {
            "type": "string",
            "title": "Success Path"
          }
        },
        "type": "object",
        "required": [
          "success_path"
        ],
        "title": "StripeAccountLinksCreate"
      },
      "StripeBusinessBillingInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripeCustomerAddress"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "StripeBusinessBillingInfo",
        "description": "Stripe customer billing information."
      },
      "StripeBusinessInfo-Input": {
        "properties": {
          "company_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripeBusinessBillingInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "tax_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripeTaxId"
              },
              {
                "type": "null"
              }
            ]
          },
          "invoice_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Email"
          },
          "is_business": {
            "type": "boolean",
            "title": "Is Business",
            "default": false
          }
        },
        "type": "object",
        "title": "StripeBusinessInfo"
      },
      "StripeBusinessInfo-Output": {
        "properties": {
          "company_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripeBusinessBillingInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "tax_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripeTaxId"
              },
              {
                "type": "null"
              }
            ]
          },
          "invoice_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Email"
          },
          "is_business": {
            "type": "boolean",
            "title": "Is Business",
            "default": false
          }
        },
        "type": "object",
        "title": "StripeBusinessInfo"
      },
      "StripeCheckoutSessionsConfirm": {
        "properties": {
          "stripe_session_id": {
            "type": "string",
            "title": "Stripe Session Id"
          }
        },
        "type": "object",
        "required": [
          "stripe_session_id"
        ],
        "title": "StripeCheckoutSessionsConfirm"
      },
      "StripeCheckoutSessionsCreate": {
        "properties": {
          "amount_cents": {
            "type": "integer",
            "title": "Amount Cents"
          },
          "success_path": {
            "type": "string",
            "title": "Success Path"
          }
        },
        "type": "object",
        "required": [
          "amount_cents",
          "success_path"
        ],
        "title": "StripeCheckoutSessionsCreate"
      },
      "StripeCustomerAddress": {
        "properties": {
          "line1": {
            "type": "string",
            "title": "Line1"
          },
          "line2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line2"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "postal_code": {
            "type": "string",
            "title": "Postal Code"
          },
          "country": {
            "type": "string",
            "title": "Country"
          }
        },
        "type": "object",
        "required": [
          "line1",
          "city",
          "postal_code",
          "country"
        ],
        "title": "StripeCustomerAddress",
        "description": "Stripe customer address."
      },
      "StripeCustomerBillingInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "$ref": "#/components/schemas/StripeCustomerAddress"
          }
        },
        "type": "object",
        "required": [
          "name",
          "address"
        ],
        "title": "StripeCustomerBillingInfo",
        "description": "Stripe customer billing information."
      },
      "StripePaymentInformation": {
        "properties": {
          "billing_info": {
            "$ref": "#/components/schemas/StripeCustomerBillingInfo"
          },
          "setup_intent": {
            "type": "string",
            "title": "Setup Intent"
          }
        },
        "type": "object",
        "required": [
          "billing_info",
          "setup_intent"
        ],
        "title": "StripePaymentInformation",
        "description": "Stripe payment information."
      },
      "StripePaymentMethodInfo": {
        "properties": {
          "brand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand"
          },
          "last4": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last4"
          },
          "exp_month": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exp Month"
          },
          "exp_year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exp Year"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "title": "StripePaymentMethodInfo",
        "description": "Stripe customer billing info."
      },
      "StripeSetupIntentResponse": {
        "properties": {
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "client_secret"
        ],
        "title": "StripeSetupIntentResponse",
        "description": "Stripe setup intent response."
      },
      "StripeTaxId": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "value",
          "type"
        ],
        "title": "StripeTaxId",
        "description": "Stripe tax ID."
      },
      "SystemMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "system",
            "title": "Type",
            "default": "system"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "SystemMessage",
        "description": "Message for priming AI behavior.\n\nThe system message is usually passed in as the first of a sequence\nof input messages.\n\nExample:\n\n    .. code-block:: python\n\n        from langchain_core.messages import HumanMessage, SystemMessage\n\n        messages = [\n            SystemMessage(\n                content=\"You are a helpful assistant! Your name is Bob.\"\n            ),\n            HumanMessage(\n                content=\"What is your name?\"\n            )\n        ]\n\n        # Define a chat model and invoke it with the messages\n        print(model.invoke(messages))"
      },
      "SystemMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "SystemMessageChunk",
            "title": "Type",
            "default": "SystemMessageChunk"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "SystemMessageChunk",
        "description": "System Message chunk."
      },
      "TTLSettings": {
        "properties": {
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "default_trace_tier": {
            "$ref": "#/components/schemas/TraceTier"
          },
          "apply_to_all_projects": {
            "type": "boolean",
            "title": "Apply To All Projects",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "configured_by": {
            "$ref": "#/components/schemas/ConfiguredBy"
          }
        },
        "type": "object",
        "required": [
          "default_trace_tier",
          "id",
          "organization_id",
          "created_at",
          "updated_at",
          "configured_by"
        ],
        "title": "TTLSettings",
        "description": "TTL settings model."
      },
      "TagCount": {
        "properties": {
          "tag": {
            "type": "string",
            "title": "Tag"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "tag",
          "count"
        ],
        "title": "TagCount"
      },
      "TagKey": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "TagKey"
      },
      "TagKeyCreate": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "TagKeyCreate"
      },
      "TagKeyUpdate": {
        "properties": {
          "key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "TagKeyUpdate"
      },
      "TagKeyWithValues": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/TagValue"
            },
            "type": "array",
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "TagKeyWithValues"
      },
      "TagKeyWithValuesAndTaggings": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/TagValueWithTaggings"
            },
            "type": "array",
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "TagKeyWithValuesAndTaggings"
      },
      "TagValue": {
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tag_key_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Key Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "value",
          "id",
          "tag_key_id",
          "created_at",
          "updated_at"
        ],
        "title": "TagValue"
      },
      "TagValueCreate": {
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "TagValueCreate"
      },
      "TagValueUpdate": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "TagValueUpdate"
      },
      "TagValueWithTaggings": {
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tag_key_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Key Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "taggings": {
            "items": {
              "$ref": "#/components/schemas/Tagging"
            },
            "type": "array",
            "title": "Taggings"
          }
        },
        "type": "object",
        "required": [
          "value",
          "id",
          "tag_key_id",
          "created_at",
          "updated_at"
        ],
        "title": "TagValueWithTaggings"
      },
      "Tagging": {
        "properties": {
          "tag_value_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Value Id"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "tag_value_id",
          "resource_type",
          "resource_id",
          "id",
          "created_at"
        ],
        "title": "Tagging"
      },
      "TaggingCreate": {
        "properties": {
          "tag_value_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Value Id"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "tag_value_id",
          "resource_type",
          "resource_id"
        ],
        "title": "TaggingCreate"
      },
      "TaggingsByResourceType": {
        "properties": {
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Prompts",
            "default": []
          },
          "projects": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Projects",
            "default": []
          },
          "queues": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Queues",
            "default": []
          },
          "deployments": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Deployments",
            "default": []
          },
          "experiments": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Experiments",
            "default": []
          },
          "datasets": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Datasets",
            "default": []
          },
          "dashboards": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Dashboards",
            "default": []
          }
        },
        "type": "object",
        "title": "TaggingsByResourceType"
      },
      "TaggingsResponse": {
        "properties": {
          "tag_key": {
            "type": "string",
            "title": "Tag Key"
          },
          "tag_key_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Key Id"
          },
          "tag_value": {
            "type": "string",
            "title": "Tag Value"
          },
          "tag_value_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Value Id"
          },
          "resources": {
            "$ref": "#/components/schemas/TaggingsByResourceType"
          }
        },
        "type": "object",
        "required": [
          "tag_key",
          "tag_key_id",
          "tag_value",
          "tag_value_id",
          "resources"
        ],
        "title": "TaggingsResponse"
      },
      "TenantBulkUnshareRequest": {
        "properties": {
          "share_tokens": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "minItems": 1,
            "title": "Share Tokens"
          }
        },
        "type": "object",
        "title": "TenantBulkUnshareRequest"
      },
      "TenantCreate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ']+$",
            "title": "Display Name"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "display_name"
        ],
        "title": "TenantCreate",
        "description": "Creation model for the tenant."
      },
      "TenantForUser": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "display_name",
          "is_personal",
          "is_deleted"
        ],
        "title": "TenantForUser"
      },
      "TenantMembers": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/MemberIdentity"
            },
            "type": "array",
            "title": "Members"
          },
          "pending": {
            "items": {
              "$ref": "#/components/schemas/PendingIdentity"
            },
            "type": "array",
            "title": "Pending"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "members",
          "pending"
        ],
        "title": "TenantMembers",
        "description": "Tenant members schema."
      },
      "TenantShareDatasetToken": {
        "properties": {
          "type": {
            "type": "string",
            "const": "dataset",
            "title": "Type"
          },
          "share_token": {
            "type": "string",
            "title": "Share Token"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "share_token",
          "created_at",
          "dataset_id"
        ],
        "title": "TenantShareDatasetToken"
      },
      "TenantShareRunToken": {
        "properties": {
          "type": {
            "type": "string",
            "const": "run",
            "title": "Type"
          },
          "share_token": {
            "type": "string",
            "title": "Share Token"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Name"
          },
          "run_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Type"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "session_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "share_token",
          "created_at",
          "run_id"
        ],
        "title": "TenantShareRunToken"
      },
      "TenantShareTokensResponse": {
        "properties": {
          "entities": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TenantShareRunToken"
                },
                {
                  "$ref": "#/components/schemas/TenantShareDatasetToken"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "dataset": "#/components/schemas/TenantShareDatasetToken",
                  "run": "#/components/schemas/TenantShareRunToken"
                }
              }
            },
            "type": "array",
            "title": "Entities"
          }
        },
        "type": "object",
        "required": [
          "entities"
        ],
        "title": "TenantShareTokensResponse"
      },
      "TenantStats": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "dataset_count": {
            "type": "integer",
            "title": "Dataset Count"
          },
          "tracer_session_count": {
            "type": "integer",
            "title": "Tracer Session Count"
          },
          "repo_count": {
            "type": "integer",
            "title": "Repo Count"
          },
          "annotation_queue_count": {
            "type": "integer",
            "title": "Annotation Queue Count"
          },
          "deployment_count": {
            "type": "integer",
            "title": "Deployment Count"
          },
          "dashboards_count": {
            "type": "integer",
            "title": "Dashboards Count"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "dataset_count",
          "tracer_session_count",
          "repo_count",
          "annotation_queue_count",
          "deployment_count",
          "dashboards_count"
        ],
        "title": "TenantStats",
        "description": "Stats for a tenant."
      },
      "TenantUsageLimitInfo": {
        "properties": {
          "in_reject_set": {
            "type": "boolean",
            "title": "In Reject Set"
          },
          "usage_limit_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TenantUsageLimitType"
              },
              {
                "type": "null"
              }
            ]
          },
          "tenant_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Limit"
          }
        },
        "type": "object",
        "required": [
          "in_reject_set"
        ],
        "title": "TenantUsageLimitInfo"
      },
      "TenantUsageLimitType": {
        "type": "string",
        "enum": [
          "payload_size",
          "events_ingested_per_hour",
          "total_unique_traces",
          "events_ingested_per_minute",
          "user_defined_monthly_traces",
          "user_defined_monthly_longlived_traces",
          "user_defined_unknown"
        ],
        "title": "TenantUsageLimitType"
      },
      "TimedeltaInput": {
        "properties": {
          "days": {
            "type": "integer",
            "title": "Days",
            "default": 0
          },
          "minutes": {
            "type": "integer",
            "title": "Minutes",
            "default": 0
          },
          "hours": {
            "type": "integer",
            "title": "Hours",
            "default": 0
          }
        },
        "type": "object",
        "title": "TimedeltaInput",
        "description": "Timedelta input."
      },
      "ToolCall": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "args": {
            "type": "object",
            "title": "Args"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "type": {
            "type": "string",
            "const": "tool_call",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "name",
          "args",
          "id"
        ],
        "title": "ToolCall",
        "description": "Represents a request to call a tool.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"name\": \"foo\",\n            \"args\": {\"a\": 1},\n            \"id\": \"123\"\n        }\n\n    This represents a request to call the tool named \"foo\" with arguments {\"a\": 1}\n    and an identifier of \"123\"."
      },
      "ToolCallChunk": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "args": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Index"
          },
          "type": {
            "type": "string",
            "const": "tool_call_chunk",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "name",
          "args",
          "id",
          "index"
        ],
        "title": "ToolCallChunk",
        "description": "A chunk of a tool call (e.g., as part of a stream).\n\nWhen merging ToolCallChunks (e.g., via AIMessageChunk.__add__),\nall string attributes are concatenated. Chunks are only merged if their\nvalues of `index` are equal and not None.\n\nExample:\n\n.. code-block:: python\n\n    left_chunks = [ToolCallChunk(name=\"foo\", args='{\"a\":', index=0)]\n    right_chunks = [ToolCallChunk(name=None, args='1}', index=0)]\n\n    (\n        AIMessageChunk(content=\"\", tool_call_chunks=left_chunks)\n        + AIMessageChunk(content=\"\", tool_call_chunks=right_chunks)\n    ).tool_call_chunks == [ToolCallChunk(name='foo', args='{\"a\":1}', index=0)]"
      },
      "ToolMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "tool",
            "title": "Type",
            "default": "tool"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          },
          "artifact": {
            "title": "Artifact"
          },
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "title": "Status",
            "default": "success"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "tool_call_id"
        ],
        "title": "ToolMessage",
        "description": "Message for passing the result of executing a tool back to a model.\n\nToolMessages contain the result of a tool invocation. Typically, the result\nis encoded inside the `content` field.\n\nExample: A ToolMessage representing a result of 42 from a tool call with id\n\n    .. code-block:: python\n\n        from langchain_core.messages import ToolMessage\n\n        ToolMessage(content='42', tool_call_id='call_Jja7J89XsjrOLA5r!MEOW!SL')\n\n\nExample: A ToolMessage where only part of the tool output is sent to the model\n    and the full output is passed in to artifact.\n\n    .. versionadded:: 0.2.17\n\n    .. code-block:: python\n\n        from langchain_core.messages import ToolMessage\n\n        tool_output = {\n            \"stdout\": \"From the graph we can see that the correlation between x and y is ...\",\n            \"stderr\": None,\n            \"artifacts\": {\"type\": \"image\", \"base64_data\": \"/9j/4gIcSU...\"},\n        }\n\n        ToolMessage(\n            content=tool_output[\"stdout\"],\n            artifact=tool_output,\n            tool_call_id='call_Jja7J89XsjrOLA5r!MEOW!SL',\n        )\n\nThe tool_call_id field is used to associate the tool call request with the\ntool call response. This is useful in situations where a chat model is able\nto request multiple tool calls in parallel."
      },
      "ToolMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "ToolMessageChunk",
            "title": "Type",
            "default": "ToolMessageChunk"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          },
          "artifact": {
            "title": "Artifact"
          },
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "title": "Status",
            "default": "success"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "tool_call_id"
        ],
        "title": "ToolMessageChunk",
        "description": "Tool Message chunk."
      },
      "TraceTier": {
        "type": "string",
        "enum": [
          "longlived",
          "shortlived"
        ],
        "title": "TraceTier"
      },
      "TracerSession": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "run_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Count"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "first_token_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P50"
          },
          "first_token_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P99"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "last_run_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time"
          },
          "last_run_start_time_live": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time Live"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "session_feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Feedback Stats"
          },
          "run_facets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Facets"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "streaming_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streaming Rate"
          },
          "test_run_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Run Number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id"
        ],
        "title": "TracerSession",
        "description": "TracerSession schema."
      },
      "TracerSessionCreate": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "title": "TracerSessionCreate",
        "description": "Create class for TracerSession."
      },
      "TracerSessionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "TracerSessionUpdate",
        "description": "Update class for TracerSession."
      },
      "TracerSessionWithoutVirtualFields": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "last_run_start_time_live": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time Live"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id"
        ],
        "title": "TracerSessionWithoutVirtualFields",
        "description": "TracerSession schema."
      },
      "TriggerRulesRequest": {
        "properties": {
          "rule_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Ids"
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          }
        },
        "type": "object",
        "title": "TriggerRulesRequest"
      },
      "UpdateFeedbackConfigSchema": {
        "properties": {
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_lower_score_better": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Lower Score Better"
          }
        },
        "type": "object",
        "required": [
          "feedback_key"
        ],
        "title": "UpdateFeedbackConfigSchema"
      },
      "UpdateRepoRequest": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "is_archived": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Archived"
          }
        },
        "type": "object",
        "title": "UpdateRepoRequest",
        "description": "Fields to update a repo"
      },
      "UpdateRoleRequest": {
        "properties": {
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "description",
          "permissions"
        ],
        "title": "UpdateRoleRequest"
      },
      "UpsertTTLSettingsRequest": {
        "properties": {
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "default_trace_tier": {
            "$ref": "#/components/schemas/TraceTier"
          },
          "apply_to_all_projects": {
            "type": "boolean",
            "title": "Apply To All Projects",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "default_trace_tier"
        ],
        "title": "UpsertTTLSettingsRequest",
        "description": "Base TTL settings model."
      },
      "UpsertUsageLimit": {
        "properties": {
          "limit_type": {
            "$ref": "#/components/schemas/UsageLimitType"
          },
          "limit_value": {
            "type": "integer",
            "title": "Limit Value"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "limit_type",
          "limit_value"
        ],
        "title": "UpsertUsageLimit",
        "description": "Request body for creating or updating a usage limit."
      },
      "UsageLimit": {
        "properties": {
          "limit_type": {
            "$ref": "#/components/schemas/UsageLimitType"
          },
          "limit_value": {
            "type": "integer",
            "title": "Limit Value"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "limit_type",
          "limit_value",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "UsageLimit",
        "description": "Usage limit model."
      },
      "UsageLimitType": {
        "type": "string",
        "enum": [
          "monthly_traces",
          "monthly_longlived_traces"
        ],
        "title": "UsageLimitType",
        "description": "Type of usage limit."
      },
      "UsageMetadata": {
        "properties": {
          "input_tokens": {
            "type": "integer",
            "title": "Input Tokens"
          },
          "output_tokens": {
            "type": "integer",
            "title": "Output Tokens"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens"
          },
          "input_token_details": {
            "$ref": "#/components/schemas/InputTokenDetails"
          },
          "output_token_details": {
            "$ref": "#/components/schemas/OutputTokenDetails"
          }
        },
        "type": "object",
        "required": [
          "input_tokens",
          "output_tokens",
          "total_tokens"
        ],
        "title": "UsageMetadata",
        "description": "Usage metadata for a message, such as token counts.\n\nThis is a standard representation of token usage that is consistent across models.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"input_tokens\": 350,\n            \"output_tokens\": 240,\n            \"total_tokens\": 590,\n            \"input_token_details\": {\n                \"audio\": 10,\n                \"cache_creation\": 200,\n                \"cache_read\": 100,\n            },\n            \"output_token_details\": {\n                \"audio\": 10,\n                \"reasoning\": 200,\n            }\n        }\n\n.. versionchanged:: 0.3.9\n\n    Added ``input_token_details`` and ``output_token_details``."
      },
      "UserWithPassword": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "ls_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ls User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "id",
          "ls_user_id",
          "created_at",
          "updated_at",
          "email"
        ],
        "title": "UserWithPassword"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "Wallet": {
        "properties": {
          "credit_balance_micros": {
            "type": "integer",
            "title": "Credit Balance Micros"
          },
          "inflight_balance_micros": {
            "type": "integer",
            "title": "Inflight Balance Micros"
          }
        },
        "type": "object",
        "required": [
          "credit_balance_micros",
          "inflight_balance_micros"
        ],
        "title": "Wallet"
      },
      "WorkspaceCreate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ '@()]+$",
            "title": "Display Name"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "display_name"
        ],
        "title": "WorkspaceCreate",
        "description": "Creation model for the workspace."
      },
      "WorkspacePatch": {
        "properties": {
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ '@()]+$",
            "title": "Display Name"
          }
        },
        "type": "object",
        "required": [
          "display_name"
        ],
        "title": "WorkspacePatch",
        "description": "Patch model for the workspace."
      },
      "app__hub__crud__tenants__Tenant": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "id",
          "display_name",
          "created_at"
        ],
        "title": "Tenant"
      },
      "app__schemas__Tenant": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "display_name",
          "is_personal",
          "is_deleted"
        ],
        "title": "Tenant",
        "description": "Tenant schema."
      },
      "CreateRunRequest": {
        "required": [
          "name",
          "run_type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "inputs": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "run_type": {
            "type": "string",
            "enum": [
              "tool",
              "chain",
              "llm",
              "retriever",
              "embedding",
              "prompt",
              "parser"
            ]
          },
          "start_time": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "end_time": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "extra": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "error": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "serialized": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "outputs": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent_run_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "events": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "trace_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "dotted_order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "session_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "session_name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "reference_example_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "input_attachments": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "output_attachments": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "BatchIngestRunsRequest": {
        "type": "object",
        "properties": {
          "post": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "trace_id",
                "dotted_order",
                "start_time",
                "name",
                "run_type"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                },
                "run_type": {
                  "type": "string",
                  "enum": [
                    "tool",
                    "chain",
                    "llm",
                    "retriever",
                    "embedding",
                    "prompt",
                    "parser"
                  ]
                },
                "start_time": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "end_time": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "extra": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "error": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "serialized": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "outputs": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "parent_run_id": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uuid"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "events": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "tags": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "trace_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "dotted_order": {
                  "type": "string"
                },
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "session_id": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uuid"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "session_name": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "reference_example_id": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uuid"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "input_attachments": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "output_attachments": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "patch": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "trace_id",
                "dotted_order",
                "end_time"
              ],
              "type": "object",
              "properties": {
                "trace_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "dotted_order": {
                  "type": "string"
                },
                "parent_run_id": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uuid"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "end_time": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "error": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "inputs": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "outputs": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "events": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "tags": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "extra": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "input_attachments": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "output_attachments": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "description": "Schema for a batch of runs to be ingested."
      },
      "UpdateRunRequest": {
        "type": "object",
        "properties": {
          "trace_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "dotted_order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent_run_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "end_time": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "error": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "inputs": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "outputs": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "events": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "extra": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "input_attachments": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "output_attachments": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "session_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "session_name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "API Key": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "Tenant ID": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Tenant-Id"
      },
      "Bearer Auth": {
        "type": "http",
        "description": "Bearer tokens are used to authenticate from the UI. Must also specify x-tenant-id or x-organization-id (for org scoped apis).",
        "scheme": "bearer"
      },
      "Organization ID": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Organization-Id"
      }
    }
  },
  "definitions": {
    "examples.ErrorResponse": {
      "type": "object",
      "properties": {
        "details": {
          "description": "Optional error details as JSON string",
          "type": "string",
          "example": "{\"field\":\"dataset_id\",\"reason\":\"required\"}"
        },
        "error": {
          "description": "Error message",
          "type": "string",
          "example": "Invalid request: missing required fields"
        }
      }
    },
    "examples.ExamplesCreatedResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "example_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"123e4567-e89b-12d3-a456-426614174000\"]"
          ]
        }
      }
    },
    "examples.ExamplesUpdatedResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "example_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"123e4567-e89b-12d3-a456-426614174000\"]"
          ]
        }
      }
    },
    "runs.ErrorResponse": {
      "type": "object",
      "properties": {
        "details": {
          "description": "Optional error details as JSON string",
          "type": "string",
          "example": "{\"field\":\"dataset_id\",\"reason\":\"required\"}"
        },
        "error": {
          "description": "Error message",
          "type": "string",
          "example": "Invalid request: missing required fields"
        }
      }
    },
    "runs.Run": {
      "type": "object",
      "properties": {
        "dotted_order": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "extra": {
          "type": "object",
          "additionalProperties": true
        },
        "id": {
          "type": "string"
        },
        "input_attachments": {
          "type": "object",
          "additionalProperties": true
        },
        "inputs": {
          "type": "object",
          "additionalProperties": true
        },
        "name": {
          "type": "string"
        },
        "output_attachments": {
          "type": "object",
          "additionalProperties": true
        },
        "outputs": {
          "type": "object",
          "additionalProperties": true
        },
        "parent_run_id": {
          "type": "string"
        },
        "reference_example_id": {
          "type": "string"
        },
        "run_type": {
          "type": "string",
          "enum": [
            "tool",
            "chain",
            "llm",
            "retriever",
            "embedding",
            "prompt",
            "parser"
          ]
        },
        "serialized": {
          "type": "object",
          "additionalProperties": true
        },
        "session_id": {
          "type": "string"
        },
        "session_name": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "trace_id": {
          "type": "string"
        }
      }
    }
  }
}