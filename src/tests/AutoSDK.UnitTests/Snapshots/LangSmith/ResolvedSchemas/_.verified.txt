[
  AIMessage(class)[prompts],
    Content(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[],
          AIMessageContentVariant2Item(class)[],
    AIMessageAdditionalKwargs(class)[prompts],
    AIMessageResponseMetadata(class)[prompts],
    AIMessageType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
    Example(bool)[prompts],
    ToolCalls(array)[prompts],
      ToolCall(ref)[prompts],
    InvalidToolCalls(array)[prompts],
      InvalidToolCall(ref)[prompts],
    UsageMetadata(ref)[prompts],
  ToolCall(class)[prompts],
    Name(string)[prompts],
    ToolCallArgs(class)[prompts],
    Id(string)[prompts],
    ToolCallType(enum)[prompts],
  InvalidToolCall(class)[prompts],
    Name(string)[],
    Args(string)[],
    Id(string)[],
    Error(string)[],
    InvalidToolCallType(enum)[],
  UsageMetadata(class)[prompts],
    InputTokens(int)[prompts],
    OutputTokens(int)[prompts],
    TotalTokens(int)[prompts],
    InputTokenDetails(ref)[prompts],
    OutputTokenDetails(ref)[prompts],
  InputTokenDetails(class)[prompts],
    Audio(int)[prompts],
    CacheCreation(int)[prompts],
    CacheRead(int)[prompts],
  OutputTokenDetails(class)[prompts],
    Audio(int)[prompts],
    Reasoning(int)[prompts],
  AIMessageChunk(class)[prompts],
    Content2(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item2(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[],
          AIMessageChunkContentVariant2Item(class)[],
    AIMessageChunkAdditionalKwargs(class)[prompts],
    AIMessageChunkResponseMetadata(class)[prompts],
    AIMessageChunkType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
    Example(bool)[prompts],
    ToolCalls(array)[prompts],
      ToolCall(ref)[prompts],
    InvalidToolCalls(array)[prompts],
      InvalidToolCall(ref)[prompts],
    UsageMetadata(ref)[prompts],
    ToolCallChunks(array)[prompts],
      ToolCallChunk(ref)[prompts],
  ToolCallChunk(class)[prompts],
    Name(string)[prompts],
    Args(string)[prompts],
    Id(string)[prompts],
    Index(int)[prompts],
    ToolCallChunkType(enum)[prompts],
  APIFeedbackSource(class)[feedback, datasets],
    Type(string)[feedback, datasets],
    APIFeedbackSourceMetadata(class)[feedback, datasets],
  APIKeyCreateRequest(class)[api-key],
    Description(string)[api-key],
    ReadOnly(bool)[api-key],
  APIKeyCreateResponse(class)[api-key],
    CreatedAt(DateTime)[api-key],
    Id(string)[api-key],
    ShortKey(string)[api-key],
    Description(string)[api-key],
    ReadOnly(bool)[api-key],
    LastUsedAt(DateTime)[api-key],
    Key(string)[api-key],
  APIKeyGetResponse(class)[api-key],
    CreatedAt(DateTime)[api-key],
    Id(string)[api-key],
    ShortKey(string)[api-key],
    Description(string)[api-key],
    ReadOnly(bool)[api-key],
    LastUsedAt(DateTime)[api-key],
  AccessScope(enum)[orgs, workspaces],
  AllowedLoginMethodsUpdate(class)[orgs],
    SsoOnly(bool)[orgs],
  AnnotationQueueBulkDeleteRunsRequest(class)[annotation-queues],
    DeleteAll(bool)[annotation-queues],
    RunIds(array)[annotation-queues],
      RunIdsItem(string)[annotation-queues],
    ExcludeRunIds(array)[annotation-queues],
      ExcludeRunIdsItem(string)[annotation-queues],
  AnnotationQueueCreateSchema(class)[annotation-queues],
    Name(string)[annotation-queues],
    Description(string)[annotation-queues],
    CreatedAt(DateTime)[annotation-queues],
    UpdatedAt(DateTime)[annotation-queues],
    DefaultDataset(string)[annotation-queues],
    NumReviewersPerItem(int)[annotation-queues],
    EnableReservations(bool)[annotation-queues],
    ReservationMinutes(int)[annotation-queues],
    Id(string)[annotation-queues],
    RubricItems(array)[annotation-queues],
      AnnotationQueueRubricItemSchema(ref)[annotation-queues],
    RubricInstructions(string)[annotation-queues],
    SessionIds(array)[annotation-queues],
      SessionIdsItem(string)[annotation-queues],
  AnnotationQueueRubricItemSchema(class)[annotation-queues],
    FeedbackKey(string)[annotation-queues],
    Description(string)[annotation-queues],
    AnnotationQueueRubricItemSchemaValueDescriptions(class)[annotation-queues],
      ValueDescriptions(string)[annotation-queues],
    AnnotationQueueRubricItemSchemaScoreDescriptions(class)[annotation-queues],
      ScoreDescriptions(string)[annotation-queues],
  AnnotationQueueRunSchema(class)[annotation-queues],
    RunId(string)[annotation-queues],
    QueueId(string)[annotation-queues],
    LastReviewedTime(DateTime)[annotation-queues],
    AddedAt(DateTime)[annotation-queues],
    Id(string)[annotation-queues],
  AnnotationQueueRunUpdateSchema(class)[annotation-queues],
    LastReviewedTime(DateTime)[annotation-queues],
    AddedAt(DateTime)[annotation-queues],
  AnnotationQueueSchema(class)[annotation-queues],
    Name(string)[annotation-queues],
    Description(string)[annotation-queues],
    CreatedAt(DateTime)[annotation-queues],
    UpdatedAt(DateTime)[annotation-queues],
    DefaultDataset(string)[annotation-queues],
    NumReviewersPerItem(int)[annotation-queues],
    EnableReservations(bool)[annotation-queues],
    ReservationMinutes(int)[annotation-queues],
    Id(string)[annotation-queues],
    TenantId(string)[annotation-queues],
    SourceRuleId(string)[annotation-queues],
  AnnotationQueueSchemaWithRubric(class)[annotation-queues],
    Name(string)[annotation-queues],
    Description(string)[annotation-queues],
    CreatedAt(DateTime)[annotation-queues],
    UpdatedAt(DateTime)[annotation-queues],
    DefaultDataset(string)[annotation-queues],
    NumReviewersPerItem(int)[annotation-queues],
    EnableReservations(bool)[annotation-queues],
    ReservationMinutes(int)[annotation-queues],
    Id(string)[annotation-queues],
    TenantId(string)[annotation-queues],
    SourceRuleId(string)[annotation-queues],
    RubricItems(array)[annotation-queues],
      AnnotationQueueRubricItemSchema(ref)[annotation-queues],
    RubricInstructions(string)[annotation-queues],
  AnnotationQueueSchemaWithSize(class)[annotation-queues],
    Name(string)[annotation-queues],
    Description(string)[annotation-queues],
    CreatedAt(DateTime)[annotation-queues],
    UpdatedAt(DateTime)[annotation-queues],
    DefaultDataset(string)[annotation-queues],
    NumReviewersPerItem(int)[annotation-queues],
    EnableReservations(bool)[annotation-queues],
    ReservationMinutes(int)[annotation-queues],
    Id(string)[annotation-queues],
    TenantId(string)[annotation-queues],
    SourceRuleId(string)[annotation-queues],
    TotalRuns(int)[annotation-queues],
  AnnotationQueueSizeSchema(class)[annotation-queues],
    Size(int)[annotation-queues],
  AnnotationQueueUpdateSchema(class)[annotation-queues],
    Name(string)[annotation-queues],
    Description(string)[annotation-queues],
    DefaultDataset(string)[annotation-queues],
    NumReviewersPerItem(int)[annotation-queues],
    EnableReservations(bool)[annotation-queues],
    ReservationMinutes(int)[annotation-queues],
    RubricItems(array)[annotation-queues],
      AnnotationQueueRubricItemSchema(ref)[annotation-queues],
    RubricInstructions(string)[annotation-queues],
  AppFeedbackSource(class)[feedback, datasets],
    Type(string)[feedback, datasets],
    AppFeedbackSourceMetadata(class)[feedback, datasets],
  Artifact(class)[prompts],
    Id(string)[prompts],
    Contents(array)[prompts],
      ArtifactContent(ref)[prompts],
    CurrentContentIndex(int)[prompts],
  ArtifactContent(class)[prompts],
    Index(int)[prompts],
    Content(string)[prompts],
  AttachmentsOperations(class)[examples, datasets],
    AttachmentsOperationsRename(class)[examples, datasets],
      Rename(string)[examples, datasets],
    Retain(array)[examples, datasets],
      RetainItem(string)[examples, datasets],
  AuthProvider(enum)[orgs, workspaces],
  AutoEvalFeedbackSource(class)[feedback, datasets],
    Type(string)[feedback, datasets],
    AutoEvalFeedbackSourceMetadata(class)[feedback, datasets],
  BasicAuthMemberCreate(class)[orgs],
    UserId(string)[orgs],
    LsUserId(string)[orgs],
    Email(string)[orgs],
    ReadOnly(bool)[orgs],
    RoleId(string)[orgs],
    Password(string)[orgs],
    FullName(string)[orgs],
    WorkspaceRoleId(string)[orgs],
    WorkspaceIds(array)[orgs],
      WorkspaceIdsItem(string)[orgs],
  BasicAuthResponse(class)[auth],
    AccessToken(string)[auth],
  BasicAuthUserPatch(class)[orgs],
    Password(string)[orgs],
    FullName(string)[orgs],
  BatchIngestConfig(class)[info],
    UseMultipartEndpoint(bool)[info],
    ScaleUpQsizeTrigger(int)[info],
    ScaleUpNthreadsLimit(int)[info],
    ScaleDownNemptyTrigger(int)[info],
    SizeLimit(int)[info],
    SizeLimitBytes(int)[info],
  BodyParamsForRunSchema(class)[run, public],
    Id(array)[run, public],
      IdItem(string)[run, public],
    Trace(string)[run, public],
    ParentRun(string)[run, public],
    RunTypeEnum(ref)[run, public],
    Session(array)[run, public],
      SessionItem(string)[run, public],
    ReferenceExample(array)[run, public],
      ReferenceExampleItem(string)[run, public],
    ExecutionOrder(int)[run, public],
    StartTime(DateTime)[run, public],
    EndTime(DateTime)[run, public],
    Error(bool)[run, public],
    Query(string)[run, public],
    Filter(string)[run, public],
    TraceFilter(string)[run, public],
    TreeFilter(string)[run, public],
    IsRoot(bool)[run, public],
    RunsFilterDataSourceTypeEnum(ref)[run, public],
    SkipPagination(bool)[run, public],
    SearchFilter(string)[run, public],
    UseExperimentalSearch(bool)[run, public],
    Cursor(string)[run, public],
    Limit(int)[run, public],
    Select(array)[run, public],
      RunSelect(ref)[run, public],
    RunDateOrder(ref)[run, public],
    SkipPrevCursor(bool)[run, public],
  RunTypeEnum(enum)[run, public, annotation-queues, datasets],
  RunsFilterDataSourceTypeEnum(enum)[run, public],
  RunSelect(enum)[run, public],
  RunDateOrder(enum)[run, public],
  BodyCloneDatasetApiV1DatasetsClonePost(class)[datasets],
    TargetDatasetId(string)[datasets],
    SourceDatasetId(string)[datasets],
    AsOf(null)[datasets],
    Examples(array)[datasets],
      ExamplesItem(string)[datasets],
  BodyDeleteRunsApiV1RunsDeletePost(class)[run],
    SessionId(string)[run],
    TraceIds(array)[run],
      TraceIdsItem(string)[run],
  BodyExecuteApiV1AceExecutePost(class)[ace],
    Args(array)[ace],
      BodyExecuteApiV1AceExecutePostArg(class)[ace],
    Code(string)[ace],
  BodyLegacyUploadExamplesApiV1ExamplesUploadDatasetIdPost(class)[examples],
    File(byte[])[examples],
    InputKeys(array)[examples],
      InputKeysItem(string)[examples],
    OutputKeys(array)[examples],
      OutputKeysItem(string)[examples],
  BodyUpdateDatasetSplitsApiV1DatasetsDatasetIdSplitsPut(class)[datasets],
    SplitName(string)[datasets],
    Examples(array)[datasets],
      ExamplesItem(string)[datasets],
    Remove(bool)[datasets],
  BodyUploadCsvDatasetApiV1DatasetsUploadPost(class)[datasets],
    File(byte[])[datasets],
    InputKeys(array)[datasets],
      InputKeysItem(string)[datasets],
    Name(string)[datasets],
    DataType(ref)[datasets],
    OutputKeys(array)[datasets],
      OutputKeysItem(string)[datasets],
    Description(string)[datasets],
  DataType(enum)[datasets, public],
  BulkExport(class)[bulk-exports],
    BulkExportDestinationId(string)[bulk-exports],
    SessionId(string)[bulk-exports],
    StartTime(DateTime)[bulk-exports],
    EndTime(DateTime)[bulk-exports],
    BulkExportFormat(ref)[bulk-exports],
    BulkExportCompression(ref)[bulk-exports],
    Id(string)[bulk-exports],
    TenantId(string)[bulk-exports],
    BulkExportStatus(ref)[bulk-exports],
    CreatedAt(DateTime)[bulk-exports],
    UpdatedAt(DateTime)[bulk-exports],
    FinishedAt(DateTime)[bulk-exports],
  BulkExportFormat(enum)[bulk-exports],
  BulkExportCompression(enum)[bulk-exports],
  BulkExportStatus(enum)[bulk-exports],
  BulkExportCreate(class)[bulk-exports],
    BulkExportDestinationId(string)[bulk-exports],
    SessionId(string)[bulk-exports],
    StartTime(DateTime)[bulk-exports],
    EndTime(DateTime)[bulk-exports],
    BulkExportFormat(ref)[bulk-exports],
    BulkExportCompression(ref)[bulk-exports],
  BulkExportDestination(class)[bulk-exports],
    BulkExportDestinationType(ref)[bulk-exports],
    DisplayName(string)[bulk-exports],
    BulkExportDestinationS3Config(ref)[bulk-exports],
    Id(string)[bulk-exports],
    TenantId(string)[bulk-exports],
    CreatedAt(DateTime)[bulk-exports],
    UpdatedAt(DateTime)[bulk-exports],
    CredentialsKeys(array)[bulk-exports],
      CredentialsKeysItem(string)[bulk-exports],
  BulkExportDestinationType(enum)[bulk-exports],
  BulkExportDestinationS3Config(class)[bulk-exports],
    EndpointUrl(string)[bulk-exports],
    Prefix(string)[bulk-exports],
    BucketName(string)[bulk-exports],
    Region(string)[bulk-exports],
  BulkExportDestinationCreate(class)[bulk-exports],
    BulkExportDestinationType(ref)[bulk-exports],
    DisplayName(string)[bulk-exports],
    BulkExportDestinationS3Config(ref)[bulk-exports],
    BulkExportDestinationS3Credentials(ref)[bulk-exports],
  BulkExportDestinationS3Credentials(class)[bulk-exports],
    AccessKeyId(string)[bulk-exports],
    SecretAccessKey(string)[bulk-exports],
  BulkExportRun(class)[bulk-exports],
    BulkExportId(string)[bulk-exports],
    BulkExportRunMetadata(ref)[bulk-exports],
    Id(string)[bulk-exports],
    BulkExportRunStatus(ref)[bulk-exports],
    RetryNumber(int)[bulk-exports],
    BulkExportRunErrors(class)[bulk-exports],
    CreatedAt(DateTime)[bulk-exports],
    UpdatedAt(DateTime)[bulk-exports],
    FinishedAt(DateTime)[bulk-exports],
  BulkExportRunMetadata(class)[bulk-exports],
    Prefix(string)[bulk-exports],
    StartTime(DateTime)[bulk-exports],
    EndTime(DateTime)[bulk-exports],
    BulkExportRunProgress(ref)[bulk-exports],
  BulkExportRunProgress(class)[bulk-exports],
    RowsWritten(int)[bulk-exports],
    ExportedFiles(array)[bulk-exports],
      ExportedFilesItem(string)[bulk-exports],
    ExportPath(string)[bulk-exports],
    LatestCursor(string)[bulk-exports],
  BulkExportRunStatus(enum)[bulk-exports],
  BulkExportUpdate(class)[bulk-exports],
    BulkExportUpdateStatus(enum)[bulk-exports],
  ChangePaymentPlanReq(enum)[orgs],
  ChangePaymentPlanSchema(class)[orgs],
    ChangePaymentPlanReq(ref)[orgs],
  ChatMessage(class)[prompts],
    Content3(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item3(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[],
          ChatMessageContentVariant2Item(class)[],
    ChatMessageAdditionalKwargs(class)[prompts],
    ChatMessageResponseMetadata(class)[prompts],
    ChatMessageType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
    Role(string)[prompts],
  ChatMessageChunk(class)[prompts],
    Content4(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item4(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[],
          ChatMessageChunkContentVariant2Item(class)[],
    ChatMessageChunkAdditionalKwargs(class)[prompts],
    ChatMessageChunkResponseMetadata(class)[prompts],
    ChatMessageChunkType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
    Role(string)[prompts],
  CodeEvaluatorTopLevel(class)[run],
    Code(string)[run],
  Comment(class)[comments],
    Id(string)[comments],
    CommentBy(string)[comments],
    CommentOn(string)[comments],
    ParentId(string)[comments],
    Content(string)[comments],
    CreatedAt(DateTime)[comments],
    UpdatedAt(DateTime)[comments],
    CommentByName(string)[comments],
    NumSubComments(int)[comments],
    NumLikes(int)[comments],
    LikedByAuthUser(bool)[comments],
  CommitManifestResponse(class)[commits, repos],
    CommitHash(string)[commits, repos],
    CommitManifestResponseManifest(class)[commits, repos],
    Examples(array)[commits, repos],
      RepoExampleResponse(ref)[commits, repos],
  RepoExampleResponse(class)[commits, repos],
    Id(string)[commits],
    StartTime(DateTime)[commits],
    RepoExampleResponseInputs(class)[commits],
    RepoExampleResponseOutputs(class)[commits],
    SessionId(string)[commits],
  CommitWithLookups(class)[commits],
    Id(string)[commits],
    CommitWithLookupsManifest(class)[commits],
    RepoId(string)[commits],
    ParentId(string)[commits],
    CommitHash(string)[commits],
    CreatedAt(DateTime)[commits],
    UpdatedAt(DateTime)[commits],
    ExampleRunIds(array)[commits],
      ExampleRunIdsItem(string)[commits],
    NumDownloads(int)[commits],
    NumViews(int)[commits],
    ParentCommitHash(string)[commits],
    FullName(string)[commits],
  ComparativeExperiment(class)[datasets],
    Id(string)[datasets],
    Name(string)[datasets],
    Description(string)[datasets],
    TenantId(string)[datasets],
    CreatedAt(DateTime)[datasets],
    ModifiedAt(DateTime)[datasets],
    ReferenceDatasetId(string)[datasets],
    ComparativeExperimentExtra(class)[datasets],
    ExperimentsInfo(array)[datasets],
      SimpleExperimentInfo(ref)[datasets],
    ComparativeExperimentFeedbackStats(class)[datasets],
  SimpleExperimentInfo(class)[datasets, public],
    Id(string)[datasets, public],
    Name(string)[datasets, public],
  ComparativeExperimentBase(class)[datasets],
    Id(string)[datasets],
    Name(string)[datasets],
    Description(string)[datasets],
    TenantId(string)[datasets],
    CreatedAt(DateTime)[datasets],
    ModifiedAt(DateTime)[datasets],
    ReferenceDatasetId(string)[datasets],
    ComparativeExperimentBaseExtra(class)[datasets],
  ComparativeExperimentCreate(class)[datasets],
    Id(string)[datasets],
    ExperimentIds(array)[datasets],
      ExperimentIdsItem(string)[datasets],
    Name(string)[datasets],
    Description(string)[datasets],
    CreatedAt(DateTime)[datasets],
    ModifiedAt(DateTime)[datasets],
    ReferenceDatasetId(string)[datasets],
    ComparativeExperimentCreateExtra(class)[datasets],
  ConfiguredBy(enum)[orgs, ttl-settings],
  CreateCommentRequest(class)[comments],
    Content(string)[comments],
  CreateEventRequest(class)[events],
    CreateEventRequestEventType(enum)[events],
    Owner(string)[events],
    Repo(string)[events],
    Commit(string)[events],
  CreateFeedbackConfigSchema(class)[feedback-configs],
    FeedbackKey(string)[feedback-configs],
    FeedbackConfig(ref)[feedback-configs],
    IsLowerScoreBetter(bool)[feedback-configs],
  FeedbackConfig(class)[feedback, feedback-configs, datasets],
    FeedbackType(ref)[feedback, feedback-configs, datasets],
    Min(double)[feedback, feedback-configs, datasets],
    Max(double)[feedback, feedback-configs, datasets],
    Categories(array)[feedback, feedback-configs, datasets],
      FeedbackCategory(ref)[feedback, feedback-configs, datasets],
  FeedbackType(enum)[feedback, feedback-configs, datasets],
  FeedbackCategory(class)[feedback, feedback-configs, datasets],
    Value(double)[feedback, feedback-configs, datasets],
    Label(string)[feedback, feedback-configs, datasets],
  CreateRepoCommitRequest(class)[commits],
    CreateRepoCommitRequestManifest(class)[commits],
    ParentCommit(string)[commits],
    ExampleRunIds(array)[commits],
      ExampleRunIdsItem(string)[commits],
  CreateRepoCommitResponse(class)[commits],
    CommitWithLookups(ref)[commits],
  CreateRepoRequest(class)[repos],
    RepoHandle(string)[repos],
    Description(string)[repos],
    Readme(string)[repos],
    IsPublic(bool)[repos],
    Tags(array)[repos],
      TagsItem(string)[repos],
  CreateRepoResponse(class)[repos],
    RepoWithLookups(ref)[repos],
  RepoWithLookups(class)[repos],
    RepoHandle(string)[repos],
    Description(string)[repos],
    Readme(string)[repos],
    Id(string)[repos],
    TenantId(string)[repos],
    CreatedAt(DateTime)[repos],
    UpdatedAt(DateTime)[repos],
    IsPublic(bool)[repos],
    IsArchived(bool)[repos],
    Tags(array)[repos],
      TagsItem(string)[repos],
    OriginalRepoId(string)[repos],
    UpstreamRepoId(string)[repos],
    Owner(string)[repos],
    FullName(string)[repos],
    NumLikes(int)[repos],
    NumDownloads(int)[repos],
    NumViews(int)[repos],
    LikedByAuthUser(bool)[repos],
    LastCommitHash(string)[repos],
    NumCommits(int)[repos],
    OriginalRepoFullName(string)[repos],
    UpstreamRepoFullName(string)[repos],
    CommitManifestResponse(ref)[repos],
  CreateRoleRequest(class)[orgs],
    DisplayName(string)[orgs],
    Description(string)[orgs],
    Permissions(array)[orgs],
      PermissionsItem(string)[orgs],
  CustomChartCreate(class)[charts],
    Title(string)[charts],
    Description(string)[charts],
    Index(int)[charts],
    CustomChartType(ref)[charts],
    Series(array)[charts],
      CustomChartSeriesCreate(ref)[charts],
    SectionId(string)[charts],
    CustomChartCreateMetadata(class)[charts],
    CustomChartSeriesFilters(ref)[charts],
  CustomChartType(enum)[charts, tracer-sessions],
  CustomChartSeriesCreate(class)[charts],
    Name(string)[charts],
    CustomChartSeriesFilters(ref)[charts],
    CustomChartMetric(ref)[charts],
    FeedbackKey(string)[charts],
    WorkspaceId(string)[charts],
    RunStatsGroupBy(ref)[charts],
  CustomChartSeriesFilters(class)[charts, tracer-sessions],
    Filter(string)[charts, tracer-sessions],
    TraceFilter(string)[charts, tracer-sessions],
    TreeFilter(string)[charts, tracer-sessions],
    Session(array)[charts, tracer-sessions],
      SessionItem(string)[charts, tracer-sessions],
  CustomChartMetric(enum)[charts, tracer-sessions],
  RunStatsGroupBy(class)[tracer-sessions, run, public, charts],
    RunStatsGroupByAttribute(enum)[tracer-sessions, run, public, charts],
    Path(string)[tracer-sessions, run, public, charts],
  CustomChartCreatePreview(class)[charts],
    Series(array)[charts],
      CustomChartSeries(ref)[charts],
    CustomChartSeriesFilters(ref)[charts],
  CustomChartSeries(class)[charts, tracer-sessions],
    Name(string)[charts, tracer-sessions],
    CustomChartSeriesFilters(ref)[charts, tracer-sessions],
    CustomChartMetric(ref)[charts, tracer-sessions],
    FeedbackKey(string)[charts, tracer-sessions],
    WorkspaceId(string)[charts, tracer-sessions],
    Id(anyOf)[charts, tracer-sessions],
      IdVariant1(string)[charts, tracer-sessions],
      IdVariant2(string)[charts, tracer-sessions],
    RunStatsGroupBySeriesResponse(ref)[charts, tracer-sessions],
  RunStatsGroupBySeriesResponse(class)[charts, tracer-sessions],
    RunStatsGroupBySeriesResponseAttribute(enum)[charts, tracer-sessions],
    Path(string)[charts, tracer-sessions],
    RunStatsGroupBySeriesResponseSetBy(enum)[charts, tracer-sessions],
  CustomChartPreviewRequest(class)[charts],
    CustomChartsRequestBase(ref)[charts],
    CustomChartCreatePreview(ref)[charts],
  CustomChartsRequestBase(class)[charts],
    Timezone(string)[charts],
    StartTime(DateTime)[charts],
    EndTime(DateTime)[charts],
    TimedeltaInput(ref)[charts],
    OmitData(bool)[charts],
  TimedeltaInput(class)[tracer-sessions, run, feedback, charts],
    Days(int)[tracer-sessions, run, feedback, charts],
    Minutes(int)[tracer-sessions, run, feedback, charts],
    Hours(int)[tracer-sessions, run, feedback, charts],
  CustomChartResponse(class)[charts],
    Id(string)[charts],
    Title(string)[charts],
    Description(string)[charts],
    Index(int)[charts],
    CustomChartType(ref)[charts],
    SectionId(string)[charts],
    CustomChartResponseMetadata(class)[charts],
    Series(array)[charts],
      CustomChartSeries(ref)[charts],
  CustomChartSeriesUpdate(class)[charts],
    Name(string)[charts],
    CustomChartSeriesFilters(ref)[charts],
    CustomChartMetric(ref)[charts],
    FeedbackKey(string)[charts],
    WorkspaceId(string)[charts],
    RunStatsGroupBy(ref)[charts],
    Id(string)[charts],
  CustomChartUpdate(class)[charts],
    Title(anyOf)[charts],
      TitleVariant1(string)[charts],
      Missing(ref)[charts],
    Description(anyOf)[charts],
      DescriptionVariant1(string)[charts],
      Missing(ref)[charts],
    Index(anyOf)[charts],
      IndexVariant1(int)[charts],
      Missing(ref)[charts],
    ChartType(anyOf)[charts],
      CustomChartType(ref)[charts],
      Missing(ref)[charts],
    Series(anyOf)[charts],
      SeriesVariant1(array)[charts],
        CustomChartSeriesUpdate(ref)[charts],
      Missing(ref)[charts],
    SectionId(anyOf)[charts],
      SectionIdVariant1(string)[charts],
      Missing(ref)[charts],
    Metadata(anyOf)[charts],
      CustomChartUpdateMetadata(class)[charts],
      Missing(ref)[charts],
    CommonFilters(anyOf)[charts],
      CustomChartSeriesFilters(ref)[charts],
      Missing(ref)[charts],
  Missing(class)[datasets, charts],
    MissingMissing1(enum)[datasets, charts],
  CustomChartsDataPoint(class)[charts, tracer-sessions],
    SeriesId(string)[charts, tracer-sessions],
    Timestamp(DateTime)[charts, tracer-sessions],
    Value(anyOf)[charts, tracer-sessions],
      ValueVariant1(int)[charts, tracer-sessions],
      ValueVariant2(double)[charts, tracer-sessions],
      CustomChartsDataPointValue(class)[charts, tracer-sessions],
    Group(string)[charts, tracer-sessions],
  CustomChartsRequest(class)[charts],
    Timezone(string)[charts],
    StartTime(DateTime)[charts],
    EndTime(DateTime)[charts],
    TimedeltaInput(ref)[charts],
    OmitData(bool)[charts],
    AfterIndex(int)[charts],
    TagValueId(array)[charts],
      TagValueIdItem(string)[charts],
  CustomChartsResponse(class)[charts],
    Sections(array)[charts],
      CustomChartsSection(ref)[charts],
  CustomChartsSection(class)[tracer-sessions, charts],
    Title(string)[tracer-sessions, charts],
    Description(string)[tracer-sessions, charts],
    Index(int)[tracer-sessions, charts],
    Id2(anyOf)[tracer-sessions, charts],
      IdVariant1(string)[tracer-sessions, charts],
      IdVariant2(string)[tracer-sessions, charts],
    SessionId(string)[tracer-sessions, charts],
    Charts(array)[tracer-sessions, charts],
      SingleCustomChartResponse(ref)[tracer-sessions, charts],
    SubSections(array)[tracer-sessions, charts],
      SingleCustomChartSubSectionResponse(ref)[tracer-sessions, charts],
  SingleCustomChartResponse(class)[tracer-sessions, charts],
    Data(array)[tracer-sessions, charts],
      CustomChartsDataPoint(ref)[tracer-sessions, charts],
    Id3(anyOf)[tracer-sessions, charts],
      IdVariant1(string)[tracer-sessions, charts],
      IdVariant2(string)[tracer-sessions, charts],
    Title(string)[tracer-sessions, charts],
    Description(string)[tracer-sessions, charts],
    SingleCustomChartResponseMetadata(class)[tracer-sessions, charts],
    Index(int)[tracer-sessions, charts],
    CustomChartType(ref)[tracer-sessions, charts],
    Series(array)[tracer-sessions, charts],
      CustomChartSeries(ref)[tracer-sessions, charts],
    CustomChartSeriesFilters(ref)[tracer-sessions, charts],
  SingleCustomChartSubSectionResponse(class)[tracer-sessions, charts],
    Title(string)[tracer-sessions, charts],
    Description(string)[tracer-sessions, charts],
    Index(int)[tracer-sessions, charts],
    Id4(anyOf)[tracer-sessions, charts],
      IdVariant1(string)[tracer-sessions, charts],
      IdVariant2(string)[tracer-sessions, charts],
    Charts(array)[tracer-sessions, charts],
      SingleCustomChartResponse(ref)[tracer-sessions, charts],
  CustomChartsSectionCreate(class)[charts],
    Title(string)[charts],
    Description(string)[charts],
    Index(int)[charts],
  CustomChartsSectionRequest(class)[tracer-sessions, charts],
    Timezone(string)[tracer-sessions, charts],
    StartTime(DateTime)[tracer-sessions, charts],
    EndTime(DateTime)[tracer-sessions, charts],
    TimedeltaInput(ref)[tracer-sessions, charts],
    OmitData(bool)[tracer-sessions, charts],
    RunStatsGroupBy(ref)[tracer-sessions, charts],
  CustomChartsSectionResponse(class)[charts],
    Title(string)[charts],
    Description(string)[charts],
    Index(int)[charts],
    Id(string)[charts],
    SessionId(string)[charts],
    ChartCount(int)[charts],
    CreatedAt(DateTime)[charts],
    ModifiedAt(DateTime)[charts],
  CustomChartsSectionUpdate(class)[charts],
    Title2(anyOf)[charts],
      TitleVariant1(string)[charts],
      Missing(ref)[charts],
    Description2(anyOf)[charts],
      DescriptionVariant1(string)[charts],
      Missing(ref)[charts],
    Index2(anyOf)[charts],
      IndexVariant1(int)[charts],
      Missing(ref)[charts],
  CustomerVisiblePlanInfo(class)[orgs],
    PaymentPlanTier(ref)[orgs],
    StartedOn(DateTime)[orgs],
    EndsOn(DateTime)[orgs],
  PaymentPlanTier(enum)[orgs],
  Dataset(class)[datasets],
    Name(string)[datasets],
    Description(string)[datasets],
    CreatedAt(DateTime)[datasets],
    DatasetInputsSchemaDefinition(class)[datasets],
    DatasetOutputsSchemaDefinition(class)[datasets],
    ExternallyManaged(bool)[datasets],
    Transformations(array)[datasets],
      DatasetTransformation(ref)[datasets],
    DataType(ref)[datasets],
    Id(string)[datasets],
    TenantId(string)[datasets],
    ExampleCount(int)[datasets],
    SessionCount(int)[datasets],
    ModifiedAt(DateTime)[datasets],
    LastSessionStartTime(DateTime)[datasets],
  DatasetTransformation(class)[datasets, public],
    Path(array)[datasets, public],
      PathItem(string)[datasets, public],
    DatasetTransformationType(ref)[datasets, public],
  DatasetTransformationType(enum)[datasets, public],
  DatasetCreate(class)[datasets],
    Name(string)[datasets],
    Description(string)[datasets],
    CreatedAt(DateTime)[datasets],
    DatasetCreateInputsSchemaDefinition(class)[datasets],
    DatasetCreateOutputsSchemaDefinition(class)[datasets],
    ExternallyManaged(bool)[datasets],
    Transformations(array)[datasets],
      DatasetTransformation(ref)[datasets],
    Id(string)[datasets],
    DatasetCreateExtra(class)[datasets],
    DataType(ref)[datasets],
  DatasetDiffInfo(class)[datasets],
    ExamplesModified(array)[datasets],
      ExamplesModifiedItem(string)[datasets],
    ExamplesAdded(array)[datasets],
      ExamplesAddedItem(string)[datasets],
    ExamplesRemoved(array)[datasets],
      ExamplesRemovedItem(string)[datasets],
  DatasetIndexInfo(class)[datasets],
    DatasetId(string)[datasets],
    Tag(string)[datasets],
    LastUpdatedVersion(DateTime)[datasets],
  DatasetIndexRequest(class)[datasets],
    Tag(string)[datasets],
  DatasetPublicSchema(class)[public],
    Name(string)[public],
    Description(string)[public],
    CreatedAt(DateTime)[public],
    DatasetPublicSchemaInputsSchemaDefinition(class)[public],
    DatasetPublicSchemaOutputsSchemaDefinition(class)[public],
    ExternallyManaged(bool)[public],
    Transformations(array)[public],
      DatasetTransformation(ref)[public],
    DataType(ref)[public],
    Id(string)[public],
    ExampleCount(int)[public],
  DatasetSchemaForUpdate(class)[datasets],
    Name(string)[datasets],
    Description(string)[datasets],
    CreatedAt(DateTime)[datasets],
    DatasetSchemaForUpdateInputsSchemaDefinition(class)[datasets],
    DatasetSchemaForUpdateOutputsSchemaDefinition(class)[datasets],
    ExternallyManaged(bool)[datasets],
    Transformations(array)[datasets],
      DatasetTransformation(ref)[datasets],
    DataType(ref)[datasets],
    Id(string)[datasets],
    TenantId(string)[datasets],
  DatasetShareSchema(class)[datasets],
    DatasetId(string)[datasets],
    ShareToken(string)[datasets],
  DatasetUpdate(class)[datasets],
    Name(anyOf)[datasets],
      NameVariant1(string)[datasets],
      Missing(ref)[datasets],
    Description3(anyOf)[datasets],
      DescriptionVariant1(string)[datasets],
      Missing(ref)[datasets],
    InputsSchemaDefinition(anyOf)[datasets],
      DatasetUpdateInputsSchemaDefinition(class)[datasets],
      Missing(ref)[datasets],
    OutputsSchemaDefinition(anyOf)[datasets],
      DatasetUpdateOutputsSchemaDefinition(class)[datasets],
      Missing(ref)[datasets],
    DatasetUpdatePatchExamples(class)[datasets],
      ExampleUpdate(ref)[datasets],
    Transformations(anyOf)[datasets],
      TransformationsVariant1(array)[datasets],
        DatasetTransformation(ref)[datasets],
      Missing(ref)[datasets],
  ExampleUpdate(class)[examples, datasets],
    DatasetId(string)[examples, datasets],
    ExampleUpdateInputs(class)[examples, datasets],
    ExampleUpdateOutputs(class)[examples, datasets],
    AttachmentsOperations(ref)[examples, datasets],
    ExampleUpdateMetadata(class)[examples, datasets],
    Split(anyOf)[examples, datasets],
      SplitVariant1(array)[examples, datasets],
        SplitVariant1Item(string)[examples, datasets],
      SplitVariant2(string)[examples, datasets],
    Overwrite(bool)[examples, datasets],
  DatasetVersion(class)[datasets],
    Tags(array)[datasets],
      TagsItem(string)[datasets],
    AsOf(DateTime)[datasets],
  DemoConfig(class)[repos, optimization-jobs],
    MessageIndex(int)[repos, optimization-jobs],
    DemoConfigMetaprompt(class)[repos, optimization-jobs],
    Examples(array)[repos, optimization-jobs],
      DemoConfigExample(class)[repos, optimization-jobs],
    OverallFeedback(string)[repos, optimization-jobs],
  EPromptOptimizationAlgorithm(enum)[repos, optimization-jobs],
  EPromptOptimizationJobLogType(enum)[optimization-jobs],
  EPromptOptimizationJobStatus(enum)[optimization-jobs],
  EvaluatorStructuredOutput(class)[run],
    HubRef(string)[run],
    Prompt(array)[run],
      PromptItem(array)[run],
        PromptItemItem(string)[run],
    TemplateFormat(string)[run],
    EvaluatorStructuredOutputSchema(class)[run],
    EvaluatorStructuredOutputVariableMapping(class)[run],
      VariableMapping(string)[run],
    EvaluatorStructuredOutputModel(class)[run],
  EvaluatorTopLevel(class)[run],
    EvaluatorStructuredOutput(ref)[run],
  Example(class)[examples, datasets, public],
    ExampleOutputs(class)[examples, datasets, public],
    DatasetId(string)[examples, datasets, public],
    SourceRunId(string)[examples, datasets, public],
    ExampleMetadata(class)[examples, datasets, public],
    ExampleInputs(class)[examples, datasets, public],
    CreatedAt(DateTime)[examples, datasets, public],
    Id(string)[examples, datasets, public],
    Name(string)[examples, datasets, public],
    ModifiedAt(DateTime)[examples, datasets, public],
    ExampleAttachmentUrls(class)[examples, datasets, public],
  ExampleListOrder(enum)[examples],
  ExampleSelect(enum)[examples, public],
  ExampleUpdateWithID(class)[examples],
    DatasetId(string)[examples],
    ExampleUpdateWithIDInputs(class)[examples],
    ExampleUpdateWithIDOutputs(class)[examples],
    AttachmentsOperations(ref)[examples],
    ExampleUpdateWithIDMetadata(class)[examples],
    Split2(anyOf)[examples],
      SplitVariant1(array)[examples],
        SplitVariant1Item(string)[examples],
      SplitVariant2(string)[examples],
    Overwrite(bool)[examples],
    Id(string)[examples],
  ExampleValidationResult(class)[examples],
    DatasetId(string)[examples],
    ExampleValidationResultInputs(class)[examples],
    ExampleValidationResultOutputs(class)[examples],
    CreatedAt(DateTime)[examples],
    ExampleValidationResultMetadata(class)[examples],
    SourceRunId(string)[examples],
    Split3(anyOf)[examples],
      SplitVariant1(array)[examples],
        SplitVariant1Item(string)[examples],
      SplitVariant2(string)[examples],
    Id(string)[examples],
    UseSourceRunIo(bool)[examples],
    Overwrite(bool)[examples],
  ExampleWithRuns(class)[datasets],
    ExampleWithRunsOutputs(class)[datasets],
    DatasetId(string)[datasets],
    SourceRunId(string)[datasets],
    ExampleWithRunsMetadata(class)[datasets],
    ExampleWithRunsInputs(class)[datasets],
    CreatedAt(DateTime)[datasets],
    Id(string)[datasets],
    Name(string)[datasets],
    ModifiedAt(DateTime)[datasets],
    ExampleWithRunsAttachmentUrls(class)[datasets],
    Runs(array)[datasets],
      RunSchema(ref)[datasets],
  RunSchema(class)[run, datasets],
    Name(string)[run, datasets],
    RunSchemaInputs(class)[run, datasets],
    InputsPreview(string)[run, datasets],
    RunTypeEnum(ref)[run, datasets],
    StartTime(DateTime)[run, datasets],
    EndTime(DateTime)[run, datasets],
    RunSchemaExtra(class)[run, datasets],
    Error(string)[run, datasets],
    ExecutionOrder(int)[run, datasets],
    RunSchemaSerialized(class)[run, datasets],
    RunSchemaOutputs(class)[run, datasets],
    OutputsPreview(string)[run, datasets],
    ParentRunId(string)[run, datasets],
    ManifestId(string)[run, datasets],
    ManifestS3Id(string)[run, datasets],
    Events(array)[run, datasets],
      RunSchemaEvent(class)[run, datasets],
    Tags(array)[run, datasets],
      TagsItem(string)[run, datasets],
    RunSchemaInputsS3Urls(class)[run, datasets],
    RunSchemaOutputsS3Urls(class)[run, datasets],
    RunSchemaS3Urls(class)[run, datasets],
    TraceId(string)[run, datasets],
    DottedOrder(string)[run, datasets],
    Id(string)[run, datasets],
    Status(string)[run, datasets],
    ChildRunIds(array)[run, datasets],
      ChildRunIdsItem(string)[run, datasets],
    DirectChildRunIds(array)[run, datasets],
      DirectChildRunIdsItem(string)[run, datasets],
    ParentRunIds(array)[run, datasets],
      ParentRunIdsItem(string)[run, datasets],
    RunSchemaFeedbackStats(class)[run, datasets],
      RunSchemaFeedbackStats2(class)[run, datasets],
    ReferenceExampleId(string)[run, datasets],
    TotalTokens(int)[run, datasets],
    PromptTokens(int)[run, datasets],
    CompletionTokens(int)[run, datasets],
    TotalCost(string)[run, datasets],
    PromptCost(string)[run, datasets],
    CompletionCost(string)[run, datasets],
    PriceModelId(string)[run, datasets],
    FirstTokenTime(DateTime)[run, datasets],
    SessionId(string)[run, datasets],
    AppPath(string)[run, datasets],
    LastQueuedAt(DateTime)[run, datasets],
    InDataset(bool)[run, datasets],
    ShareToken(string)[run, datasets],
    TraceTier(ref)[run, datasets],
    TraceFirstReceivedAt(DateTime)[run, datasets],
    TtlSeconds(int)[run, datasets],
    TraceUpgrade(bool)[run, datasets],
    ReferenceDatasetId(string)[run, datasets],
    ThreadId(string)[run, datasets],
  TraceTier(enum)[tracer-sessions, orgs, ttl-settings, run, datasets, public, annotation-queues],
  ExampleWithRunsCH(class)[datasets, public],
    ExampleWithRunsCHOutputs(class)[datasets, public],
    DatasetId(string)[datasets, public],
    SourceRunId(string)[datasets, public],
    ExampleWithRunsCHMetadata(class)[datasets, public],
    ExampleWithRunsCHInputs(class)[datasets, public],
    CreatedAt(DateTime)[datasets, public],
    Id(string)[datasets, public],
    Name(string)[datasets, public],
    ModifiedAt(DateTime)[datasets, public],
    ExampleWithRunsCHAttachmentUrls(class)[datasets, public],
    Runs(array)[datasets, public],
      RunSchemaComparisonView(ref)[datasets, public],
  RunSchemaComparisonView(class)[datasets, public],
    Name(string)[datasets, public],
    RunSchemaComparisonViewInputs(class)[datasets, public],
    InputsPreview(string)[datasets, public],
    RunTypeEnum(ref)[datasets, public],
    StartTime(DateTime)[datasets, public],
    EndTime(DateTime)[datasets, public],
    RunSchemaComparisonViewExtra(class)[datasets, public],
    Error(string)[datasets, public],
    ExecutionOrder(int)[datasets, public],
    RunSchemaComparisonViewSerialized(class)[datasets, public],
    RunSchemaComparisonViewOutputs(class)[datasets, public],
    OutputsPreview(string)[datasets, public],
    ParentRunId(string)[datasets, public],
    ManifestId(string)[datasets, public],
    ManifestS3Id(string)[datasets, public],
    Events(array)[datasets, public],
      RunSchemaComparisonViewEvent(class)[datasets, public],
    Tags(array)[datasets, public],
      TagsItem(string)[datasets, public],
    RunSchemaComparisonViewInputsS3Urls(class)[datasets, public],
    RunSchemaComparisonViewOutputsS3Urls(class)[datasets, public],
    RunSchemaComparisonViewS3Urls(class)[datasets, public],
    TraceId(string)[datasets, public],
    DottedOrder(string)[datasets, public],
    Id(string)[datasets, public],
    SessionId(string)[datasets, public],
    ReferenceExampleId(string)[datasets, public],
    TotalTokens(int)[datasets, public],
    PromptTokens(int)[datasets, public],
    CompletionTokens(int)[datasets, public],
    TotalCost(string)[datasets, public],
    PromptCost(string)[datasets, public],
    CompletionCost(string)[datasets, public],
    Status(string)[datasets, public],
    RunSchemaComparisonViewFeedbackStats(class)[datasets, public],
      RunSchemaComparisonViewFeedbackStats2(class)[datasets, public],
    AppPath(string)[datasets, public],
  ExampleWithRunsGroup(class)[datasets],
    Filter(string)[datasets],
    Count(int)[datasets],
    TotalTokens(int)[datasets],
    TotalCost(string)[datasets],
    MinStartTime(DateTime)[datasets],
    MaxStartTime(DateTime)[datasets],
    LatencyP50(double)[datasets],
    LatencyP99(double)[datasets],
    ExampleWithRunsGroupFeedbackStats(class)[datasets],
    ExampleWithRunsGroupGroupKey(class)[datasets],
    Examples(anyOf)[datasets],
      ExamplesVariant1(array)[datasets],
        ExampleWithRuns(ref)[datasets],
      ExamplesVariant2(array)[datasets],
        ExampleWithRunsCH(ref)[datasets],
    PromptTokens(int)[datasets],
    CompletionTokens(int)[datasets],
    PromptCost(string)[datasets],
    CompletionCost(string)[datasets],
    ErrorRate(double)[datasets],
  ExperimentResultRow(class)[datasets],
    RowId(string)[datasets],
    ExperimentResultRowInputs(class)[datasets],
    ExperimentResultRowExpectedOutputs(class)[datasets],
    ExperimentResultRowActualOutputs(class)[datasets],
    EvaluationScores(array)[datasets],
      FeedbackCreateCoreSchema(ref)[datasets],
    StartTime(DateTime)[datasets],
    EndTime(DateTime)[datasets],
    RunName(string)[datasets],
    Error(string)[datasets],
    ExperimentResultRowRunMetadata(class)[datasets],
  FeedbackCreateCoreSchema(class)[datasets],
    CreatedAt(DateTime)[datasets],
    ModifiedAt(DateTime)[datasets],
    Key(string)[datasets],
    Score(anyOf)[datasets],
      ScoreVariant1(double)[datasets],
      ScoreVariant2(int)[datasets],
      ScoreVariant3(bool)[datasets],
    Value2(anyOf)[datasets],
      ValueVariant1(double)[datasets],
      ValueVariant2(int)[datasets],
      ValueVariant3(bool)[datasets],
      ValueVariant4(string)[datasets],
      FeedbackCreateCoreSchemaValue(class)[datasets],
    Comment(string)[datasets],
    Correction(anyOf)[datasets],
      FeedbackCreateCoreSchemaCorrection(class)[datasets],
      CorrectionVariant2(string)[datasets],
    FeedbackGroupId(string)[datasets],
    ComparativeExperimentId(string)[datasets],
    Id(string)[datasets],
    FeedbackSource(anyOf)[datasets],
      AppFeedbackSource(ref)[datasets],
      APIFeedbackSource(ref)[datasets],
      ModelFeedbackSource(ref)[datasets],
      AutoEvalFeedbackSource(ref)[datasets],
    FeedbackConfig(ref)[datasets],
    FeedbackCreateCoreSchemaExtra(class)[datasets],
  ModelFeedbackSource(class)[feedback, datasets],
    Type(string)[feedback, datasets],
    ModelFeedbackSourceMetadata(class)[feedback, datasets],
  ExperimentResultsUpload(class)[datasets],
    ExperimentName(string)[datasets],
    ExperimentDescription(string)[datasets],
    DatasetId(string)[datasets],
    DatasetName(string)[datasets],
    DatasetDescription(string)[datasets],
    SummaryExperimentScores(array)[datasets],
      FeedbackCreateCoreSchema(ref)[datasets],
    Results(array)[datasets],
      ExperimentResultRow(ref)[datasets],
    ExperimentStartTime(DateTime)[datasets],
    ExperimentEndTime(DateTime)[datasets],
    ExperimentResultsUploadExperimentMetadata(class)[datasets],
  ExperimentResultsUploadResult(class)[datasets],
    Dataset(ref)[datasets],
    TracerSession(ref)[datasets],
  TracerSession(class)[tracer-sessions, datasets, public],
    StartTime(DateTime)[tracer-sessions, datasets, public],
    EndTime(DateTime)[tracer-sessions, datasets, public],
    TracerSessionExtra(class)[tracer-sessions, datasets, public],
    Name(string)[tracer-sessions, datasets, public],
    Description(string)[tracer-sessions, datasets, public],
    DefaultDatasetId(string)[tracer-sessions, datasets, public],
    ReferenceDatasetId(string)[tracer-sessions, datasets, public],
    TraceTier(ref)[tracer-sessions, datasets, public],
    Id(string)[tracer-sessions, datasets, public],
    RunCount(int)[tracer-sessions, datasets, public],
    LatencyP50(double)[tracer-sessions, datasets, public],
    LatencyP99(double)[tracer-sessions, datasets, public],
    FirstTokenP50(double)[tracer-sessions, datasets, public],
    FirstTokenP99(double)[tracer-sessions, datasets, public],
    TotalTokens(int)[tracer-sessions, datasets, public],
    PromptTokens(int)[tracer-sessions, datasets, public],
    CompletionTokens(int)[tracer-sessions, datasets, public],
    TotalCost(string)[tracer-sessions, datasets, public],
    PromptCost(string)[tracer-sessions, datasets, public],
    CompletionCost(string)[tracer-sessions, datasets, public],
    TenantId(string)[tracer-sessions, datasets, public],
    LastRunStartTime(DateTime)[tracer-sessions, datasets, public],
    LastRunStartTimeLive(DateTime)[tracer-sessions, datasets, public],
    TracerSessionFeedbackStats(class)[tracer-sessions, datasets, public],
    TracerSessionSessionFeedbackStats(class)[tracer-sessions, datasets, public],
    RunFacets(array)[tracer-sessions, datasets, public],
      TracerSessionRunFacet(class)[tracer-sessions, datasets, public],
    ErrorRate(double)[tracer-sessions, datasets, public],
    StreamingRate(double)[tracer-sessions, datasets, public],
    TestRunNumber(int)[tracer-sessions, datasets, public],
  ExportAnnotationQueueRunsRequest(class)[annotation-queues],
    StartTime(DateTime)[annotation-queues],
    EndTime(DateTime)[annotation-queues],
  FeedbackConfigSchema(class)[feedback-configs],
    FeedbackKey(string)[feedback-configs],
    FeedbackConfig(ref)[feedback-configs],
    TenantId(string)[feedback-configs],
    ModifiedAt(DateTime)[feedback-configs],
    IsLowerScoreBetter(bool)[feedback-configs],
  FeedbackCreateSchema(class)[feedback],
    CreatedAt(DateTime)[feedback],
    ModifiedAt(DateTime)[feedback],
    Key(string)[feedback],
    Score2(anyOf)[feedback],
      ScoreVariant1(double)[feedback],
      ScoreVariant2(int)[feedback],
      ScoreVariant3(bool)[feedback],
    Value3(anyOf)[feedback],
      ValueVariant1(double)[feedback],
      ValueVariant2(int)[feedback],
      ValueVariant3(bool)[feedback],
      ValueVariant4(string)[feedback],
      FeedbackCreateSchemaValue(class)[feedback],
    Comment(string)[feedback],
    Correction2(anyOf)[feedback],
      FeedbackCreateSchemaCorrection(class)[feedback],
      CorrectionVariant2(string)[feedback],
    FeedbackGroupId(string)[feedback],
    ComparativeExperimentId(string)[feedback],
    RunId(string)[feedback],
    SessionId(string)[feedback],
    TraceId(string)[feedback],
    Id(string)[feedback],
    FeedbackSource2(anyOf)[feedback],
      AppFeedbackSource(ref)[feedback],
      APIFeedbackSource(ref)[feedback],
      ModelFeedbackSource(ref)[feedback],
      AutoEvalFeedbackSource(ref)[feedback],
    FeedbackConfig(ref)[feedback],
    Error(bool)[feedback],
  FeedbackCreateWithTokenExtendedSchema(class)[feedback],
    Score3(anyOf)[feedback],
      ScoreVariant1(double)[feedback],
      ScoreVariant2(int)[feedback],
      ScoreVariant3(bool)[feedback],
    Value4(anyOf)[feedback],
      ValueVariant1(double)[feedback],
      ValueVariant2(int)[feedback],
      ValueVariant3(bool)[feedback],
      ValueVariant4(string)[feedback],
    Comment(string)[feedback],
    Correction3(anyOf)[feedback],
      FeedbackCreateWithTokenExtendedSchemaCorrection(class)[feedback],
      CorrectionVariant2(string)[feedback],
    FeedbackCreateWithTokenExtendedSchemaMetadata(class)[feedback],
  FeedbackDelta(class)[datasets, public],
    ImprovedExamples(array)[datasets, public],
      ImprovedExamplesItem(string)[datasets, public],
    RegressedExamples(array)[datasets, public],
      RegressedExamplesItem(string)[datasets, public],
  FeedbackIngestTokenCreateSchema(class)[feedback],
    TimedeltaInput(ref)[feedback],
    ExpiresAt(DateTime)[feedback],
    RunId(string)[feedback],
    FeedbackKey(string)[feedback],
    FeedbackConfig(ref)[feedback],
  FeedbackIngestTokenSchema(class)[feedback],
    Id(string)[feedback],
    Url(string)[feedback],
    ExpiresAt(DateTime)[feedback],
    FeedbackKey(string)[feedback],
  FeedbackLevel(enum)[feedback, public],
  FeedbackSchema(class)[feedback, public],
    CreatedAt(DateTime)[feedback, public],
    ModifiedAt(DateTime)[feedback, public],
    Key(string)[feedback, public],
    Score4(anyOf)[feedback, public],
      ScoreVariant1(double)[feedback, public],
      ScoreVariant2(int)[feedback, public],
      ScoreVariant3(bool)[feedback, public],
    Value5(anyOf)[feedback, public],
      ValueVariant1(double)[feedback, public],
      ValueVariant2(int)[feedback, public],
      ValueVariant3(bool)[feedback, public],
      ValueVariant4(string)[feedback, public],
      FeedbackSchemaValue(class)[feedback, public],
    Comment(string)[feedback, public],
    Correction4(anyOf)[feedback, public],
      FeedbackSchemaCorrection(class)[feedback, public],
      CorrectionVariant2(string)[feedback, public],
    FeedbackGroupId(string)[feedback, public],
    ComparativeExperimentId(string)[feedback, public],
    RunId(string)[feedback, public],
    SessionId(string)[feedback, public],
    Id(string)[feedback, public],
    FeedbackSource3(ref)[feedback, public],
    FeedbackSchemaExtra(class)[feedback, public],
  FeedbackSource3(class)[feedback, public],
    Type(string)[feedback, public],
    FeedbackSourceMetadata(class)[feedback, public],
    UserId(string)[feedback, public],
    UserName(string)[feedback, public],
  FeedbackUpdateSchema(class)[feedback],
    Score5(anyOf)[feedback],
      ScoreVariant1(double)[feedback],
      ScoreVariant2(int)[feedback],
      ScoreVariant3(bool)[feedback],
    Value6(anyOf)[feedback],
      ValueVariant1(double)[feedback],
      ValueVariant2(int)[feedback],
      ValueVariant3(bool)[feedback],
      ValueVariant4(string)[feedback],
      FeedbackUpdateSchemaValue(class)[feedback],
    Comment(string)[feedback],
    Correction5(anyOf)[feedback],
      FeedbackUpdateSchemaCorrection(class)[feedback],
      CorrectionVariant2(string)[feedback],
    FeedbackConfig(ref)[feedback],
  FilterView(class)[tracer-sessions],
    FilterString(string)[tracer-sessions],
    TraceFilterString(string)[tracer-sessions],
    TreeFilterString(string)[tracer-sessions],
    DisplayName(string)[tracer-sessions],
    Description(string)[tracer-sessions],
    FilterViewType(ref)[tracer-sessions],
    Id(string)[tracer-sessions],
    SessionId(string)[tracer-sessions],
    CreatedAt(DateTime)[tracer-sessions],
    UpdatedAt(DateTime)[tracer-sessions],
  FilterViewType(enum)[tracer-sessions],
  FilterViewCreate(class)[tracer-sessions],
    FilterString(string)[tracer-sessions],
    TraceFilterString(string)[tracer-sessions],
    TreeFilterString(string)[tracer-sessions],
    DisplayName(string)[tracer-sessions],
    Description(string)[tracer-sessions],
    FilterViewType(ref)[tracer-sessions],
  FilterViewUpdate(class)[tracer-sessions],
    FilterString(string)[tracer-sessions],
    DisplayName(string)[tracer-sessions],
    Description(string)[tracer-sessions],
    TraceFilterString(string)[tracer-sessions],
    TreeFilterString(string)[tracer-sessions],
    FilterViewType(ref)[tracer-sessions],
  ForkRepoRequest(class)[repos],
    RepoHandle(string)[repos],
    Readme(string)[repos],
    Description(string)[repos],
    Tags(array)[repos],
      TagsItem(string)[repos],
    IsPublic(bool)[repos],
  FunctionMessage(class)[prompts],
    Content5(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item5(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[],
          FunctionMessageContentVariant2Item(class)[],
    FunctionMessageAdditionalKwargs(class)[prompts],
    FunctionMessageResponseMetadata(class)[prompts],
    FunctionMessageType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
  FunctionMessageChunk(class)[prompts],
    Content6(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item6(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[],
          FunctionMessageChunkContentVariant2Item(class)[],
    FunctionMessageChunkAdditionalKwargs(class)[prompts],
    FunctionMessageChunkResponseMetadata(class)[prompts],
    FunctionMessageChunkType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
  GenerateSyntheticExamplesBody(class)[datasets],
    ExampleIds(array)[datasets],
      ExampleIdsItem(string)[datasets],
    NumExamples(int)[datasets],
  GetRepoResponse(class)[repos],
    RepoWithLookups(ref)[repos],
  GroupExampleRunsByField(enum)[datasets],
  GroupedExamplesWithRunsResponse(class)[datasets],
    Groups(array)[datasets],
      ExampleWithRunsGroup(ref)[datasets],
  HTTPValidationError(class)[tracer-sessions, orgs, auth, api-key, examples, datasets, run, feedback, public, annotation-queues, ace, bulk-exports, tenant, feedback-configs, model-price-map, usage-limits, ttl-settings, prompts, workspaces, playground-settings, service-accounts, charts, repos, likes, commits, settings, events, comments, tags, optimization-jobs],
    Detail(array)[tracer-sessions, orgs, auth, api-key, examples, datasets, run, feedback, public, annotation-queues, ace, bulk-exports, tenant, feedback-configs, model-price-map, usage-limits, ttl-settings, prompts, workspaces, playground-settings, service-accounts, charts, repos, likes, commits, settings, events, comments, tags, optimization-jobs],
      ValidationError(ref)[tracer-sessions, orgs, auth, api-key, examples, datasets, run, feedback, public, annotation-queues, ace, bulk-exports, tenant, feedback-configs, model-price-map, usage-limits, ttl-settings, prompts, workspaces, playground-settings, service-accounts, charts, repos, likes, commits, settings, events, comments, tags, optimization-jobs],
  ValidationError(class)[tracer-sessions, orgs, auth, api-key, examples, datasets, run, feedback, public, annotation-queues, ace, bulk-exports, tenant, feedback-configs, model-price-map, usage-limits, ttl-settings, prompts, workspaces, playground-settings, service-accounts, charts, repos, likes, commits, settings, events, comments, tags, optimization-jobs],
    Loc(array)[tracer-sessions, orgs, auth, api-key, examples, datasets, run, feedback, public, annotation-queues, ace, bulk-exports, tenant, feedback-configs, model-price-map, usage-limits, ttl-settings, prompts, workspaces, playground-settings, service-accounts, charts, repos, likes, commits, settings, events, comments, tags, optimization-jobs],
      LocItem(anyOf)[tracer-sessions, orgs, auth, api-key, examples, datasets, run, feedback, public, annotation-queues, ace, bulk-exports, tenant, feedback-configs, model-price-map, usage-limits, ttl-settings, prompts, workspaces, playground-settings, service-accounts, charts, repos, likes, commits, settings, events, comments, tags, optimization-jobs],
        LocItemVariant1(string)[tracer-sessions, orgs, auth, api-key, examples, datasets, run, feedback, public, annotation-queues, ace, bulk-exports, tenant, feedback-configs, model-price-map, usage-limits, ttl-settings, prompts, workspaces, playground-settings, service-accounts, charts, repos, likes, commits, settings, events, comments, tags, optimization-jobs],
        LocItemVariant2(int)[tracer-sessions, orgs, auth, api-key, examples, datasets, run, feedback, public, annotation-queues, ace, bulk-exports, tenant, feedback-configs, model-price-map, usage-limits, ttl-settings, prompts, workspaces, playground-settings, service-accounts, charts, repos, likes, commits, settings, events, comments, tags, optimization-jobs],
    Msg(string)[tracer-sessions, orgs, auth, api-key, examples, datasets, run, feedback, public, annotation-queues, ace, bulk-exports, tenant, feedback-configs, model-price-map, usage-limits, ttl-settings, prompts, workspaces, playground-settings, service-accounts, charts, repos, likes, commits, settings, events, comments, tags, optimization-jobs],
    Type(string)[tracer-sessions, orgs, auth, api-key, examples, datasets, run, feedback, public, annotation-queues, ace, bulk-exports, tenant, feedback-configs, model-price-map, usage-limits, ttl-settings, prompts, workspaces, playground-settings, service-accounts, charts, repos, likes, commits, settings, events, comments, tags, optimization-jobs],
  HealthInfoGetResponse(class)[info],
    ClickhouseDiskFreePct(double)[info],
  Highlight(class)[prompts],
    PromptChunkStartIndex(int)[prompts],
    PromptChunkEndIndex(int)[prompts],
    PromptChunk(string)[prompts],
    HighlightText(string)[prompts],
  HumanMessage(class)[prompts],
    Content7(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item7(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[],
          HumanMessageContentVariant2Item(class)[],
    HumanMessageAdditionalKwargs(class)[prompts],
    HumanMessageResponseMetadata(class)[prompts],
    HumanMessageType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
    Example(bool)[prompts],
  HumanMessageChunk(class)[prompts],
    Content8(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item8(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[],
          HumanMessageChunkContentVariant2Item(class)[],
    HumanMessageChunkAdditionalKwargs(class)[prompts],
    HumanMessageChunkResponseMetadata(class)[prompts],
    HumanMessageChunkType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
    Example(bool)[prompts],
  Identity(class)[orgs, workspaces],
    Id(string)[orgs, workspaces],
    OrganizationId(string)[orgs, workspaces],
    TenantId(string)[orgs, workspaces],
    CreatedAt(DateTime)[orgs, workspaces],
    UserId(string)[orgs, workspaces],
    LsUserId(string)[orgs, workspaces],
    ReadOnly(bool)[orgs, workspaces],
    RoleId(string)[orgs, workspaces],
    RoleName(string)[orgs, workspaces],
    AccessScope(ref)[orgs, workspaces],
  IdentityAnnotationQueueRunStatusCreateSchema(class)[annotation-queues],
    Status(string)[annotation-queues],
    OverrideAddedAt(DateTime)[annotation-queues],
  IdentityCreate(class)[workspaces],
    UserId(string)[workspaces],
    OrgIdentityId(string)[workspaces],
    ReadOnly(bool)[workspaces],
    RoleId(string)[workspaces],
  IdentityPatch(class)[workspaces],
    ReadOnly(bool)[workspaces],
    RoleId(string)[workspaces],
  InfoGetResponse(class)[info],
    Version(string)[info],
    LicenseExpirationTime(DateTime)[info],
    BatchIngestConfig(ref)[info],
    InfoGetResponseInstanceFlags(class)[info],
  InvokePromptPayload(class)[prompts],
    Messages(array)[prompts],
      MessagesItem(array)[prompts],
        MessagesItemItem(string)[prompts],
    TemplateFormat(string)[prompts],
    InvokePromptPayloadInputs(class)[prompts],
  LikeRepoRequest(class)[likes],
    Like(bool)[likes],
  LikeRepoResponse(class)[likes],
    Likes(int)[likes],
  ListCommentsResponse(class)[comments],
    Comments(array)[comments],
      Comment(ref)[comments],
    Total(int)[comments],
  ListCommitsResponse(class)[commits],
    Commits(array)[commits],
      CommitWithLookups(ref)[commits],
    Total(int)[commits],
  ListPublicDatasetRunsResponse(class)[public],
    Runs(array)[public],
      RunPublicDatasetSchema(ref)[public],
    ListPublicDatasetRunsResponseCursors(class)[public],
      Cursors(string)[public],
    ParsedQuery(string)[public],
  RunPublicDatasetSchema(class)[public],
    Name(string)[public],
    RunPublicDatasetSchemaInputs(class)[public],
    InputsPreview(string)[public],
    RunTypeEnum(ref)[public],
    StartTime(DateTime)[public],
    EndTime(DateTime)[public],
    RunPublicDatasetSchemaExtra(class)[public],
    Error(string)[public],
    ExecutionOrder(int)[public],
    RunPublicDatasetSchemaSerialized(class)[public],
    RunPublicDatasetSchemaOutputs(class)[public],
    OutputsPreview(string)[public],
    ParentRunId(string)[public],
    ManifestId(string)[public],
    ManifestS3Id(string)[public],
    Events(array)[public],
      RunPublicDatasetSchemaEvent(class)[public],
    Tags(array)[public],
      TagsItem(string)[public],
    RunPublicDatasetSchemaInputsS3Urls(class)[public],
    RunPublicDatasetSchemaOutputsS3Urls(class)[public],
    RunPublicDatasetSchemaS3Urls(class)[public],
    TraceId(string)[public],
    DottedOrder(string)[public],
    Id(string)[public],
    Status(string)[public],
    ChildRunIds(array)[public],
      ChildRunIdsItem(string)[public],
    DirectChildRunIds(array)[public],
      DirectChildRunIdsItem(string)[public],
    ParentRunIds(array)[public],
      ParentRunIdsItem(string)[public],
    RunPublicDatasetSchemaFeedbackStats(class)[public],
      RunPublicDatasetSchemaFeedbackStats2(class)[public],
    ReferenceExampleId(string)[public],
    TotalTokens(int)[public],
    PromptTokens(int)[public],
    CompletionTokens(int)[public],
    TotalCost(string)[public],
    PromptCost(string)[public],
    CompletionCost(string)[public],
    PriceModelId(string)[public],
    FirstTokenTime(DateTime)[public],
    SessionId(string)[public],
  ListPublicRunsResponse(class)[public],
    Runs(array)[public],
      RunPublicSchema(ref)[public],
    ListPublicRunsResponseCursors(class)[public],
      Cursors(string)[public],
    ParsedQuery(string)[public],
  RunPublicSchema(class)[public],
    Name(string)[public],
    RunPublicSchemaInputs(class)[public],
    InputsPreview(string)[public],
    RunTypeEnum(ref)[public],
    StartTime(DateTime)[public],
    EndTime(DateTime)[public],
    RunPublicSchemaExtra(class)[public],
    Error(string)[public],
    ExecutionOrder(int)[public],
    RunPublicSchemaSerialized(class)[public],
    RunPublicSchemaOutputs(class)[public],
    OutputsPreview(string)[public],
    ParentRunId(string)[public],
    ManifestId(string)[public],
    ManifestS3Id(string)[public],
    Events(array)[public],
      RunPublicSchemaEvent(class)[public],
    Tags(array)[public],
      TagsItem(string)[public],
    RunPublicSchemaInputsS3Urls(class)[public],
    RunPublicSchemaOutputsS3Urls(class)[public],
    RunPublicSchemaS3Urls(class)[public],
    TraceId(string)[public],
    DottedOrder(string)[public],
    Id(string)[public],
    Status(string)[public],
    ChildRunIds(array)[public],
      ChildRunIdsItem(string)[public],
    DirectChildRunIds(array)[public],
      DirectChildRunIdsItem(string)[public],
    ParentRunIds(array)[public],
      ParentRunIdsItem(string)[public],
    RunPublicSchemaFeedbackStats(class)[public],
      RunPublicSchemaFeedbackStats2(class)[public],
    ReferenceExampleId(string)[public],
    TotalTokens(int)[public],
    PromptTokens(int)[public],
    CompletionTokens(int)[public],
    TotalCost(string)[public],
    PromptCost(string)[public],
    CompletionCost(string)[public],
    PriceModelId(string)[public],
    FirstTokenTime(DateTime)[public],
  ListReposResponse(class)[repos],
    Repos(array)[repos],
      RepoWithLookups(ref)[repos],
    Total(int)[repos],
  ListRunsResponse(class)[run],
    Runs(array)[run],
      RunSchema(ref)[run],
    ListRunsResponseCursors(class)[run],
      Cursors(string)[run],
    ListRunsResponseSearchCursors(class)[run],
      SearchCursors(null)[run],
    ParsedQuery(string)[run],
  ListTagsForResourceRequest(class)[workspaces],
    ResourceId(string)[workspaces],
    ResourceType(ref)[workspaces],
  ResourceType(enum)[workspaces],
  ListTagsResponse(class)[repos],
    Tags(array)[repos],
      TagCount(ref)[repos],
  TagCount(class)[repos],
    Tag(string)[repos],
    Count(int)[repos],
  MemberIdentity(class)[workspaces],
    Id(string)[workspaces],
    OrganizationId(string)[workspaces],
    TenantId(string)[workspaces],
    CreatedAt(DateTime)[workspaces],
    UserId(string)[workspaces],
    LsUserId(string)[workspaces],
    ReadOnly(bool)[workspaces],
    RoleId(string)[workspaces],
    RoleName(string)[workspaces],
    AccessScope(ref)[workspaces],
    Email(string)[workspaces],
    FullName(string)[workspaces],
    AvatarUrl(string)[workspaces],
    LinkedLoginMethods(array)[workspaces],
      ProviderUserSlim(ref)[workspaces],
    OrgRoleId(string)[workspaces],
    OrgRoleName(string)[workspaces],
  ProviderUserSlim(class)[orgs, workspaces],
    Id(string)[orgs, workspaces],
    AuthProvider(ref)[orgs, workspaces],
    LsUserId(string)[orgs, workspaces],
    SamlProviderId(string)[orgs, workspaces],
    ProviderUserId(string)[orgs, workspaces],
    CreatedAt(DateTime)[orgs, workspaces],
    UpdatedAt(DateTime)[orgs, workspaces],
    Email(string)[orgs, workspaces],
    FullName(string)[orgs, workspaces],
    EmailConfirmedAt(DateTime)[orgs, workspaces],
  MetadataKeyValue(class)[run],
    Key(string)[run],
    Value(string)[run],
  ModelPriceMapCreateSchema(class)[model-price-map],
    Name(string)[model-price-map],
    StartTime(DateTime)[model-price-map],
    MatchPath(array)[model-price-map],
      MatchPathItem(string)[model-price-map],
    MatchPattern(string)[model-price-map],
    PromptCost(anyOf)[model-price-map],
      PromptCostVariant1(double)[model-price-map],
      PromptCostVariant2(string)[model-price-map],
    CompletionCost(anyOf)[model-price-map],
      CompletionCostVariant1(double)[model-price-map],
      CompletionCostVariant2(string)[model-price-map],
    Provider(string)[model-price-map],
  ModelPriceMapUpdateSchema(class)[model-price-map],
    Name(string)[model-price-map],
    StartTime(DateTime)[model-price-map],
    MatchPath(array)[model-price-map],
      MatchPathItem(string)[model-price-map],
    MatchPattern(string)[model-price-map],
    PromptCost2(anyOf)[model-price-map],
      PromptCostVariant1(double)[model-price-map],
      PromptCostVariant2(string)[model-price-map],
    CompletionCost2(anyOf)[model-price-map],
      CompletionCostVariant1(double)[model-price-map],
      CompletionCostVariant2(string)[model-price-map],
    Provider(string)[model-price-map],
  MonitorBlock(class)[run],
    Title(string)[run],
    Section(string)[run],
    Columns(array)[run],
      ColumnsItem(string)[run],
    Subtitle(string)[run],
    Rows(array)[run],
      RowsItem(array)[run],
        MonitorBlockRowItem(class)[run],
    MonitorBlockChartSpec(class)[run],
    ClickTarget(string)[run],
    MonitorBlockToggleableMarks(class)[run],
      ToggleableMarks(array)[run],
        ToggleableMarksItem(int)[run],
  MonitorGroupSpec(class)[run],
    Session(string)[run],
    Tag(string)[run],
    MetadataKeyValue(ref)[run],
  MonitorRequest(class)[run],
    Timezone(string)[run],
    Groups(array)[run],
      MonitorGroupSpec(ref)[run],
    TimedeltaInput(ref)[run],
    TimedeltaInput(ref)[run],
  MonitorResponse(class)[run],
    Blocks(array)[run],
      MonitorBlock(ref)[run],
  OAuthProvider(enum)[auth],
  OptimizePromptJobRequest(class)[repos],
    EPromptOptimizationAlgorithm(ref)[repos],
    Config(anyOf)[repos],
      PromptimConfig(ref)[repos],
      DemoConfig(ref)[repos],
    PromptName(string)[repos],
  PromptimConfig(class)[repos, optimization-jobs],
    MessageIndex(int)[repos, optimization-jobs],
    TaskDescription(string)[repos, optimization-jobs],
    DatasetName(string)[repos, optimization-jobs],
    TrainSplit(string)[repos, optimization-jobs],
    DevSplit(string)[repos, optimization-jobs],
    TestSplit(string)[repos, optimization-jobs],
    Evaluators(array)[repos, optimization-jobs],
      EvaluatorsItem(string)[repos, optimization-jobs],
    NumEpochs(int)[repos, optimization-jobs],
    AutoCommit(bool)[repos, optimization-jobs],
  OptimizePromptResponse(class)[repos],
    OptimizationJobId(string)[repos],
  OrgIdentityPatch(class)[orgs],
    Password(string)[orgs],
    FullName(string)[orgs],
    RoleId(string)[orgs],
  OrgMemberIdentity(class)[orgs],
    Id(string)[orgs],
    OrganizationId(string)[orgs],
    TenantId(string)[orgs],
    CreatedAt(DateTime)[orgs],
    UserId(string)[orgs],
    LsUserId(string)[orgs],
    ReadOnly(bool)[orgs],
    RoleId(string)[orgs],
    RoleName(string)[orgs],
    AccessScope(ref)[orgs],
    Email(string)[orgs],
    FullName(string)[orgs],
    AvatarUrl(string)[orgs],
    LinkedLoginMethods(array)[orgs],
      ProviderUserSlim(ref)[orgs],
    OrgRoleId(string)[orgs],
    OrgRoleName(string)[orgs],
    TenantIds(array)[orgs],
      TenantIdsItem(string)[orgs],
  OrgPendingIdentity(class)[orgs],
    Email(string)[orgs],
    ReadOnly(bool)[orgs],
    RoleId(string)[orgs],
    WorkspaceIds(array)[orgs],
      WorkspaceIdsItem(string)[orgs],
    WorkspaceRoleId(string)[orgs],
    Password(string)[orgs],
    FullName(string)[orgs],
    AccessScope(ref)[orgs],
    Id(string)[orgs],
    UserId(string)[orgs],
    TenantId(string)[orgs],
    OrganizationId(string)[orgs],
    CreatedAt(DateTime)[orgs],
    RoleName(string)[orgs],
    OrgRoleId(string)[orgs],
    OrgRoleName(string)[orgs],
    TenantIds(array)[orgs],
      TenantIdsItem(string)[orgs],
  OrgUsage(class)[orgs],
    CustomerId(string)[orgs],
    BillableMetricId(string)[orgs],
    BillableMetricName(string)[orgs],
    StartTimestamp(string)[orgs],
    EndTimestamp(string)[orgs],
    Value(double)[orgs],
    OrgUsageGroups(class)[orgs],
      Groups(double)[orgs],
  Organization(class)[orgs],
    Id(string)[orgs],
    DisplayName(string)[orgs],
    OrganizationConfig(ref)[orgs],
    ConnectedToStripe(bool)[orgs],
    ConnectedToMetronome(bool)[orgs],
    IsPersonal(bool)[orgs],
    PaymentPlanTier(ref)[orgs],
    StripePaymentMethodInfo(ref)[orgs],
    HasCancelled(bool)[orgs],
    EndOfBillingPeriod(DateTime)[orgs],
    CustomerVisiblePlanInfo(ref)[orgs],
    CustomerVisiblePlanInfo(ref)[orgs],
    ReachedMaxWorkspaces(bool)[orgs],
    Permissions(array)[orgs],
      PermissionsItem(string)[orgs],
    MarketplacePayoutsEnabled(bool)[orgs],
    Wallet(ref)[orgs],
  OrganizationConfig(class)[orgs],
    MaxIdentities(int)[orgs],
    MaxWorkspaces(int)[orgs],
    CanUseRbac(bool)[orgs],
    CanAddSeats(bool)[orgs],
    StartupPlanApprovalDate(string)[orgs],
    PartnerPlanApprovalDate(string)[orgs],
    PremierPlanApprovalDate(string)[orgs],
    CanDisablePublicSharing(bool)[orgs],
    CanServeDatasets(bool)[orgs],
    CanUseLanggraphCloud(bool)[orgs],
    MaxLanggraphCloudDeployments(int)[orgs],
    MaxFreeLanggraphCloudDeployments(int)[orgs],
    CanUseSamlSso(bool)[orgs],
    CanUseBulkExport(bool)[orgs],
    UsePythonPlaygroundService(bool)[orgs],
    ShowUpdatedSidenav(bool)[orgs],
    ShowUpdatedResourceTags(bool)[orgs],
    KvDatasetMessageSupport(bool)[orgs],
    ShowPlaygroundPromptCanvas(bool)[orgs],
    AllowCustomIframes(bool)[orgs],
    EnableLanggraphPricing(bool)[orgs],
    EnableThreadViewPlayground(bool)[orgs],
    EnableOrgUsageCharts(bool)[orgs],
    EnableSelectAllTraces(bool)[orgs],
    UseExactSearchForPrompts(bool)[orgs],
    LanggraphDeployOwnCloudEnabled(bool)[orgs],
    PromptOptimizationJobsEnabled(bool)[orgs],
    EnableK8sVanillaPlatform(bool)[orgs],
    DemoLgpNewGraphEnabled(bool)[orgs],
    DatadogRumSessionSampleRate(int)[orgs],
    LanggraphRemoteReconcilerEnabled(bool)[orgs],
    LangsmithAlertsPocEnabled(bool)[orgs],
    TenantSkipTopkFacets(bool)[orgs],
    LgpTemplatesEnabled(bool)[orgs],
    LangsmithAlertsLegacyPocEnabled(bool)[orgs],
    EnablePrebuiltDashboards(bool)[orgs],
    LangsmithExperimentalSearchEnabled(bool)[orgs],
    LanggraphPlatformGaEnabled(bool)[orgs],
  StripePaymentMethodInfo(class)[orgs],
    Brand(string)[orgs],
    Last4(string)[orgs],
    ExpMonth(int)[orgs],
    ExpYear(int)[orgs],
    Email(string)[orgs],
  Wallet(class)[orgs],
    CreditBalanceMicros(int)[orgs],
    InflightBalanceMicros(int)[orgs],
  OrganizationBillingInfo(class)[orgs],
    Id(string)[orgs],
    DisplayName(string)[orgs],
    OrganizationConfig(ref)[orgs],
    ConnectedToStripe(bool)[orgs],
    ConnectedToMetronome(bool)[orgs],
    IsPersonal(bool)[orgs],
    PaymentPlanTier(ref)[orgs],
    StripePaymentMethodInfo(ref)[orgs],
    EndOfBillingPeriod(DateTime)[orgs],
    CustomerVisiblePlanInfo(ref)[orgs],
    CustomerVisiblePlanInfo(ref)[orgs],
    ReachedMaxWorkspaces(bool)[orgs],
    Disabled(bool)[orgs],
  OrganizationCreate(class)[orgs],
    DisplayName(string)[orgs],
    IsPersonal(bool)[orgs],
  OrganizationDashboardColorScheme(enum)[orgs],
  OrganizationDashboardSchema(class)[orgs],
    EmbeddableUrl(string)[orgs],
  OrganizationDashboardType(enum)[orgs],
  OrganizationInfo(class)[orgs],
    Id(string)[orgs],
    DisplayName(string)[orgs],
    OrganizationConfig(ref)[orgs],
    IsPersonal(bool)[orgs],
    PaymentPlanTier(ref)[orgs],
    ReachedMaxWorkspaces(bool)[orgs],
    Permissions(array)[orgs],
      PermissionsItem(string)[orgs],
    Disabled(bool)[orgs],
    SsoOnly(bool)[orgs],
    SsoLoginSlug(string)[orgs],
    PublicSharingDisabled(bool)[orgs],
    MarketplacePayoutsEnabled(bool)[orgs],
    Wallet(ref)[orgs],
  OrganizationMembers(class)[orgs],
    OrganizationId(string)[orgs],
    Members(array)[orgs],
      OrgMemberIdentity(ref)[orgs],
    Pending(array)[orgs],
      OrgPendingIdentity(ref)[orgs],
  OrganizationPGSchemaSlim(class)[orgs],
    Id(string)[orgs],
    DisplayName(string)[orgs],
    CreatedAt(DateTime)[orgs],
    CreatedByUserId(string)[orgs],
    ModifiedAt(DateTime)[orgs],
    IsPersonal(bool)[orgs],
    Disabled(bool)[orgs],
    SsoLoginSlug(string)[orgs],
    SsoOnly(bool)[orgs],
    PublicSharingDisabled(bool)[orgs],
  OrganizationUpdate(class)[orgs],
    DisplayName(string)[orgs],
    PublicSharingDisabled(bool)[orgs],
    UnshareAll(bool)[orgs],
  PagerdutySeverity(enum)[run],
  PendingIdentity(class)[orgs, workspaces],
    Email(string)[orgs, workspaces],
    ReadOnly(bool)[orgs, workspaces],
    RoleId(string)[orgs, workspaces],
    WorkspaceIds(array)[orgs, workspaces],
      WorkspaceIdsItem(string)[orgs, workspaces],
    WorkspaceRoleId(string)[orgs, workspaces],
    Password(string)[orgs, workspaces],
    FullName(string)[orgs, workspaces],
    AccessScope(ref)[orgs, workspaces],
    Id(string)[orgs, workspaces],
    UserId(string)[orgs, workspaces],
    TenantId(string)[orgs, workspaces],
    OrganizationId(string)[orgs, workspaces],
    CreatedAt(DateTime)[orgs, workspaces],
    RoleName(string)[orgs, workspaces],
    OrgRoleId(string)[orgs, workspaces],
    OrgRoleName(string)[orgs, workspaces],
  PendingIdentityCreate(class)[orgs, workspaces],
    Email(string)[orgs, workspaces],
    ReadOnly(bool)[orgs, workspaces],
    RoleId(string)[orgs, workspaces],
    WorkspaceIds(array)[orgs, workspaces],
      WorkspaceIdsItem(string)[orgs, workspaces],
    WorkspaceRoleId(string)[orgs, workspaces],
    Password(string)[orgs, workspaces],
    FullName(string)[orgs, workspaces],
  PermissionResponse(class)[orgs],
    Name(string)[orgs],
    Description(string)[orgs],
    AccessScope(ref)[orgs],
  PlaygroundPromptCanvasPayload(class)[prompts],
    Messages(array)[prompts],
      MessagesItem(oneOf)[prompts],
        AIMessage(ref)[prompts],
        HumanMessage(ref)[prompts],
        ChatMessage(ref)[prompts],
        SystemMessage(ref)[prompts],
        FunctionMessage(ref)[prompts],
        ToolMessage(ref)[prompts],
        AIMessageChunk(ref)[prompts],
        HumanMessageChunk(ref)[prompts],
        ChatMessageChunk(ref)[prompts],
        SystemMessageChunk(ref)[prompts],
        FunctionMessageChunk(ref)[prompts],
        ToolMessageChunk(ref)[prompts],
    Highlight(ref)[prompts],
    Artifact(ref)[prompts],
    PlaygroundPromptCanvasPayloadArtifactLength(enum)[prompts],
    PlaygroundPromptCanvasPayloadReadingLevel(enum)[prompts],
    CustomAction(string)[prompts],
    PlaygroundPromptCanvasPayloadTemplateFormat(enum)[prompts],
    PlaygroundPromptCanvasPayloadSecrets(class)[prompts],
      Secrets(string)[prompts],
  SystemMessage(class)[prompts],
    Content9(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item9(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[prompts],
          SystemMessageContentVariant2Item(class)[prompts],
    SystemMessageAdditionalKwargs(class)[prompts],
    SystemMessageResponseMetadata(class)[prompts],
    SystemMessageType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
  ToolMessage(class)[prompts],
    Content11(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item11(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[prompts],
          ToolMessageContentVariant2Item(class)[prompts],
    ToolMessageAdditionalKwargs(class)[prompts],
    ToolMessageResponseMetadata(class)[prompts],
    ToolMessageType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
    ToolCallId(string)[prompts],
    ToolMessageArtifact(class)[prompts],
    ToolMessageStatus(enum)[prompts],
  SystemMessageChunk(class)[prompts],
    Content10(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item10(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[prompts],
          SystemMessageChunkContentVariant2Item(class)[prompts],
    SystemMessageChunkAdditionalKwargs(class)[prompts],
    SystemMessageChunkResponseMetadata(class)[prompts],
    SystemMessageChunkType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
  ToolMessageChunk(class)[prompts],
    Content12(anyOf)[prompts],
      ContentVariant1(string)[prompts],
      ContentVariant2(array)[prompts],
        ContentVariant2Item12(anyOf)[prompts],
          ContentVariant2ItemVariant1(string)[prompts],
          ToolMessageChunkContentVariant2Item(class)[prompts],
    ToolMessageChunkAdditionalKwargs(class)[prompts],
    ToolMessageChunkResponseMetadata(class)[prompts],
    ToolMessageChunkType(enum)[prompts],
    Name(string)[prompts],
    Id(string)[prompts],
    ToolCallId(string)[prompts],
    ToolMessageChunkArtifact(class)[prompts],
    ToolMessageChunkStatus(enum)[prompts],
  PlaygroundRunOverDatasetRequestSchema(class)[datasets],
    PlaygroundRunOverDatasetRequestSchemaManifest(class)[datasets],
    PlaygroundRunOverDatasetRequestSchemaSecrets(class)[datasets],
      Secrets(string)[datasets],
    RunId(string)[datasets],
    RepoId(string)[datasets],
    Tools(array)[datasets],
      PlaygroundRunOverDatasetRequestSchemaTool(class)[datasets],
    ToolChoice(string)[datasets],
    ParallelToolCalls(bool)[datasets],
    RunnableConfig(ref)[datasets],
    ProjectName(string)[datasets],
    RepoHandle(string)[datasets],
    Owner(string)[datasets],
    Commit(string)[datasets],
    EvaluatorRules(array)[datasets],
      EvaluatorRulesItem(string)[datasets],
    RequestsPerSecond(int)[datasets],
    UseOrFallbackToWorkspaceSecrets(bool)[datasets],
    DatasetId(string)[datasets],
    DatasetSplits(array)[datasets],
      DatasetSplitsItem(string)[datasets],
    Repetitions(int)[datasets],
  RunnableConfig(class)[datasets],
    Tags(array)[datasets],
      TagsItem(string)[datasets],
    RunnableConfigMetadata(class)[datasets],
    Callbacks(anyOf)[datasets],
      CallbacksVariant1(array)[datasets],
        RunnableConfigCallback(class)[datasets],
      RunnableConfigCallbacks(class)[datasets],
    RunName(string)[datasets],
    MaxConcurrency(int)[datasets],
    RecursionLimit(int)[datasets],
    RunnableConfigConfigurable(class)[datasets],
    RunId(string)[datasets],
  PlaygroundSavedOptions(class)[playground-settings],
    RequestsPerSecond(int)[playground-settings],
  PlaygroundSettingsCreateRequest(class)[playground-settings],
    Name(string)[playground-settings],
    Description(string)[playground-settings],
    PlaygroundSettingsCreateRequestSettings(class)[playground-settings],
    PlaygroundSavedOptions(ref)[playground-settings],
  PlaygroundSettingsResponse(class)[playground-settings],
    Id(string)[playground-settings],
    PlaygroundSettingsResponseSettings(class)[playground-settings],
    PlaygroundSavedOptions(ref)[playground-settings],
    Name(string)[playground-settings],
    CreatedAt(DateTime)[playground-settings],
    UpdatedAt(DateTime)[playground-settings],
    Description(string)[playground-settings],
  PlaygroundSettingsUpdateRequest(class)[playground-settings],
    Name(string)[playground-settings],
    Description(string)[playground-settings],
    PlaygroundSettingsUpdateRequestSettings(class)[playground-settings],
    PlaygroundSavedOptions(ref)[playground-settings],
  PopulateAnnotationQueueSchema(class)[annotation-queues],
    QueueId(string)[annotation-queues],
    SessionIds(array)[annotation-queues],
      SessionIdsItem(string)[annotation-queues],
  PromptOptimizationJob(class)[optimization-jobs],
    Id(string)[optimization-jobs],
    RepoId(string)[optimization-jobs],
    EPromptOptimizationJobStatus(ref)[optimization-jobs],
    TenantId(string)[optimization-jobs],
    EPromptOptimizationAlgorithm(ref)[optimization-jobs],
    Config2(anyOf)[optimization-jobs],
      PromptimConfig(ref)[optimization-jobs],
      DemoConfig(ref)[optimization-jobs],
    Results(array)[optimization-jobs],
      PromptOptimizationResult(ref)[optimization-jobs],
    CreatedAt(DateTime)[optimization-jobs],
    UpdatedAt(DateTime)[optimization-jobs],
  PromptOptimizationResult(class)[optimization-jobs],
    Timestamp(DateTime)[optimization-jobs],
    X(double)[optimization-jobs],
    Y(double)[optimization-jobs],
  PromptOptimizationJobCreate(class)[optimization-jobs],
    EPromptOptimizationAlgorithm(ref)[optimization-jobs],
    Config3(anyOf)[optimization-jobs],
      PromptimConfig(ref)[optimization-jobs],
      DemoConfig(ref)[optimization-jobs],
  PromptOptimizationJobLog(class)[optimization-jobs],
    EPromptOptimizationJobLogType(ref)[optimization-jobs],
    Message(string)[optimization-jobs],
    PromptOptimizationJobLogData(class)[optimization-jobs],
    Id(string)[optimization-jobs],
    JobId(string)[optimization-jobs],
    CreatedAt(DateTime)[optimization-jobs],
  PromptOptimizationJobLogCreate(class)[optimization-jobs],
    EPromptOptimizationJobLogType(ref)[optimization-jobs],
    Message(string)[optimization-jobs],
    PromptOptimizationJobLogCreateData(class)[optimization-jobs],
  PromptOptimizationJobUpdate(class)[optimization-jobs],
    EPromptOptimizationJobStatus(ref)[optimization-jobs],
    PromptOptimizationResult(ref)[optimization-jobs],
  PromptOptimizationJobWithLogs(class)[optimization-jobs],
    Id(string)[optimization-jobs],
    RepoId(string)[optimization-jobs],
    EPromptOptimizationJobStatus(ref)[optimization-jobs],
    TenantId(string)[optimization-jobs],
    EPromptOptimizationAlgorithm(ref)[optimization-jobs],
    Config4(anyOf)[optimization-jobs],
      PromptimConfig(ref)[optimization-jobs],
      DemoConfig(ref)[optimization-jobs],
    Results(array)[optimization-jobs],
      PromptOptimizationResult(ref)[optimization-jobs],
    CreatedAt(DateTime)[optimization-jobs],
    UpdatedAt(DateTime)[optimization-jobs],
    Logs(array)[optimization-jobs],
      PromptOptimizationJobLog(ref)[optimization-jobs],
  PublicComparativeExperiment(class)[public],
    Id(string)[public],
    Name(string)[public],
    Description(string)[public],
    CreatedAt(DateTime)[public],
    ModifiedAt(DateTime)[public],
    PublicComparativeExperimentExtra(class)[public],
    ExperimentsInfo(array)[public],
      SimpleExperimentInfo(ref)[public],
    PublicComparativeExperimentFeedbackStats(class)[public],
  PublicExampleWithRuns(class)[public],
    PublicExampleWithRunsOutputs(class)[public],
    DatasetId(string)[public],
    SourceRunId(string)[public],
    PublicExampleWithRunsMetadata(class)[public],
    PublicExampleWithRunsInputs(class)[public],
    CreatedAt(DateTime)[public],
    Id(string)[public],
    Name(string)[public],
    ModifiedAt(DateTime)[public],
    PublicExampleWithRunsAttachmentUrls(class)[public],
    Runs(array)[public],
      RunPublicDatasetSchema(ref)[public],
  PutDatasetVersionsSchema(class)[datasets],
    AsOf(anyOf)[datasets],
      AsOfVariant1(DateTime)[datasets],
      AsOfVariant2(string)[datasets],
    Tag(string)[datasets],
  QueryExampleSchemaWithRuns(class)[datasets, public],
    SessionIds(array)[datasets, public],
      SessionIdsItem(string)[datasets, public],
    Offset(int)[datasets, public],
    Limit(int)[datasets, public],
    Preview(bool)[datasets, public],
    QueryExampleSchemaWithRunsFormat(enum)[datasets, public],
    ComparativeExperimentId(string)[datasets, public],
    SortParamsForRunsComparisonView(ref)[datasets, public],
    QueryExampleSchemaWithRunsFilters(class)[datasets, public],
      Filters(array)[datasets, public],
        FiltersItem(string)[datasets, public],
  SortParamsForRunsComparisonView(class)[datasets, public],
    SortBy(string)[datasets, public],
    SortParamsForRunsComparisonViewSortOrder(enum)[datasets, public],
  QueryFeedbackDelta(class)[datasets, public],
    BaselineSessionId(string)[datasets, public],
    ComparisonSessionIds(array)[datasets, public],
      ComparisonSessionIdsItem(string)[datasets, public],
    FeedbackKey(string)[datasets, public],
    QueryFeedbackDeltaFilters(class)[datasets, public],
      Filters(array)[datasets, public],
        FiltersItem(string)[datasets, public],
    Offset(int)[datasets, public],
    Limit(int)[datasets, public],
    ComparativeExperimentId(string)[datasets, public],
  QueryGroupedExamplesWithRuns(class)[datasets],
    SessionIds(array)[datasets],
      SessionIdsItem(string)[datasets],
    Offset(int)[datasets],
    Limit(int)[datasets],
    Preview(bool)[datasets],
    GroupExampleRunsByField(ref)[datasets],
    MetadataKey(string)[datasets],
    PerGroupLimit(int)[datasets],
  QueryParamsForPublicRunSchema(class)[public],
    Id(array)[public],
      IdItem(string)[public],
  RepoTag(class)[tags],
    Id(string)[tags],
    RepoId(string)[tags],
    CommitId(string)[tags],
    CommitHash(string)[tags],
    TagName(string)[tags],
    CreatedAt(DateTime)[tags],
    UpdatedAt(DateTime)[tags],
  RepoTagRequest(class)[tags],
    TagName(string)[tags],
    CommitId(string)[tags],
  RepoUpdateTagRequest(class)[tags],
    CommitId(string)[tags],
  RequestBodyForRunsGenerateQuery(class)[run, public],
    Query(string)[run, public],
    FeedbackKeys(array)[run, public],
      RunsGenerateQueryFeedbackKeys(ref)[run, public],
  RunsGenerateQueryFeedbackKeys(enum)[run, public],
  Resource(class)[workspaces],
    TaggingId(string)[workspaces],
    ResourceName(string)[workspaces],
    ResourceId(string)[workspaces],
  ResponseBodyForRunsGenerateQuery(class)[run, public],
    Filter(string)[run, public],
    ResponseBodyForRunsGenerateQueryFeedbackUrls(class)[run, public],
      FeedbackUrls(string)[run, public],
  Role(class)[orgs],
    Id(string)[orgs],
    Name(string)[orgs],
    DisplayName(string)[orgs],
    Description(string)[orgs],
    OrganizationId(string)[orgs],
    Permissions(array)[orgs],
      PermissionsItem(string)[orgs],
    AccessScope(ref)[orgs],
  RootModelDictStrListStr(class)[tracer-sessions],
    RootModelDictStrListStr(array)[tracer-sessions],
      RootModelDictStrListStrItem(string)[tracer-sessions],
  RuleLogActionOutcome(enum)[run],
  RuleLogActionResponse(class)[run],
    RuleLogActionOutcome(ref)[run],
    RuleLogActionResponsePayload(class)[run],
  RuleLogSchema(class)[run],
    RuleId(string)[run],
    RunId(string)[run],
    RunName(string)[run],
    RunType(string)[run],
    RunSessionId(string)[run],
    StartTime(DateTime)[run],
    EndTime(DateTime)[run],
    ApplicationTime(DateTime)[run],
    RuleLogActionResponse(ref)[run],
    RuleLogActionResponse(ref)[run],
    RuleLogActionResponse(ref)[run],
    RuleLogActionResponse(ref)[run],
    RuleLogActionResponse(ref)[run],
  RunGroupBy(enum)[run],
  RunGroupRequest(class)[run],
    SessionId(string)[run],
    RunGroupBy(ref)[run],
    Filter(string)[run],
    StartTime(DateTime)[run],
    EndTime(DateTime)[run],
    Offset(int)[run],
    Limit(int)[run],
  RunGroupStats(class)[run],
    RunCount(int)[run],
    LatencyP50(double)[run],
    LatencyP99(double)[run],
    FirstTokenP50(double)[run],
    FirstTokenP99(double)[run],
    TotalTokens(int)[run],
    PromptTokens(int)[run],
    CompletionTokens(int)[run],
    MedianTokens(int)[run],
    CompletionTokensP50(int)[run],
    PromptTokensP50(int)[run],
    TokensP99(int)[run],
    CompletionTokensP99(int)[run],
    PromptTokensP99(int)[run],
    LastRunStartTime(DateTime)[run],
    RunGroupStatsFeedbackStats(class)[run],
    RunFacets(array)[run],
      RunGroupStatsRunFacet(class)[run],
    ErrorRate(double)[run],
    StreamingRate(double)[run],
    TotalCost(string)[run],
    PromptCost(string)[run],
    CompletionCost(string)[run],
    CostP50(string)[run],
    CostP99(string)[run],
    GroupCount(int)[run],
  RunRulesAlertType(enum)[run],
  RunRulesCreateSchema(class)[run],
    DisplayName(string)[run],
    SessionId(string)[run],
    IsEnabled(bool)[run],
    DatasetId(string)[run],
    SamplingRate(double)[run],
    Filter(string)[run],
    TraceFilter(string)[run],
    TreeFilter(string)[run],
    BackfillFrom(DateTime)[run],
    UseCorrectionsDataset(bool)[run],
    NumFewShotExamples(int)[run],
    ExtendOnly(bool)[run],
    Transient(bool)[run],
    AddToAnnotationQueueId(string)[run],
    AddToDatasetId(string)[run],
    AddToDatasetPreferCorrection(bool)[run],
    Evaluators(array)[run],
      EvaluatorTopLevel(ref)[run],
    CodeEvaluators(array)[run],
      CodeEvaluatorTopLevel(ref)[run],
    Alerts(array)[run],
      RunRulesPagerdutyAlertSchema(ref)[run],
    Webhooks(array)[run],
      RunRulesWebhookSchema(ref)[run],
    EvaluatorVersion(int)[run],
  RunRulesPagerdutyAlertSchema(class)[run],
    RunRulesAlertType(ref)[run],
    RoutingKey(string)[run],
    Summary(string)[run],
    PagerdutySeverity(ref)[run],
  RunRulesWebhookSchema(class)[run],
    Url(string)[run],
    RunRulesWebhookSchemaHeaders(class)[run],
      Headers(string)[run],
  RunRulesSchema(class)[run],
    Id(string)[run],
    TenantId(string)[run],
    IsEnabled(bool)[run],
    SessionId(string)[run],
    SessionName(string)[run],
    DatasetId(string)[run],
    DatasetName(string)[run],
    DisplayName(string)[run],
    SamplingRate(double)[run],
    Filter(string)[run],
    TraceFilter(string)[run],
    TreeFilter(string)[run],
    AddToAnnotationQueueId(string)[run],
    AddToAnnotationQueueName(string)[run],
    AddToDatasetId(string)[run],
    AddToDatasetName(string)[run],
    AddToDatasetPreferCorrection(bool)[run],
    CorrectionsDatasetId(string)[run],
    UseCorrectionsDataset(bool)[run],
    NumFewShotExamples(int)[run],
    Evaluators(array)[run],
      EvaluatorTopLevel(ref)[run],
    CodeEvaluators(array)[run],
      CodeEvaluatorTopLevel(ref)[run],
    Alerts(array)[run],
      RunRulesPagerdutyAlertSchema(ref)[run],
    Webhooks(array)[run],
      RunRulesWebhookSchema(ref)[run],
    ExtendOnly(bool)[run],
    CreatedAt(DateTime)[run],
    UpdatedAt(DateTime)[run],
    BackfillFrom(DateTime)[run],
    Transient(bool)[run],
    EvaluatorVersion(int)[run],
  RunSchemaWithAnnotationQueueInfo(class)[annotation-queues],
    Name(string)[annotation-queues],
    RunSchemaWithAnnotationQueueInfoInputs(class)[annotation-queues],
    InputsPreview(string)[annotation-queues],
    RunTypeEnum(ref)[annotation-queues],
    StartTime(DateTime)[annotation-queues],
    EndTime(DateTime)[annotation-queues],
    RunSchemaWithAnnotationQueueInfoExtra(class)[annotation-queues],
    Error(string)[annotation-queues],
    ExecutionOrder(int)[annotation-queues],
    RunSchemaWithAnnotationQueueInfoSerialized(class)[annotation-queues],
    RunSchemaWithAnnotationQueueInfoOutputs(class)[annotation-queues],
    OutputsPreview(string)[annotation-queues],
    ParentRunId(string)[annotation-queues],
    ManifestId(string)[annotation-queues],
    ManifestS3Id(string)[annotation-queues],
    Events(array)[annotation-queues],
      RunSchemaWithAnnotationQueueInfoEvent(class)[annotation-queues],
    Tags(array)[annotation-queues],
      TagsItem(string)[annotation-queues],
    RunSchemaWithAnnotationQueueInfoInputsS3Urls(class)[annotation-queues],
    RunSchemaWithAnnotationQueueInfoOutputsS3Urls(class)[annotation-queues],
    RunSchemaWithAnnotationQueueInfoS3Urls(class)[annotation-queues],
    TraceId(string)[annotation-queues],
    DottedOrder(string)[annotation-queues],
    Id(string)[annotation-queues],
    Status(string)[annotation-queues],
    ChildRunIds(array)[annotation-queues],
      ChildRunIdsItem(string)[annotation-queues],
    DirectChildRunIds(array)[annotation-queues],
      DirectChildRunIdsItem(string)[annotation-queues],
    ParentRunIds(array)[annotation-queues],
      ParentRunIdsItem(string)[annotation-queues],
    RunSchemaWithAnnotationQueueInfoFeedbackStats(class)[annotation-queues],
      RunSchemaWithAnnotationQueueInfoFeedbackStats2(class)[annotation-queues],
    ReferenceExampleId(string)[annotation-queues],
    TotalTokens(int)[annotation-queues],
    PromptTokens(int)[annotation-queues],
    CompletionTokens(int)[annotation-queues],
    TotalCost(string)[annotation-queues],
    PromptCost(string)[annotation-queues],
    CompletionCost(string)[annotation-queues],
    PriceModelId(string)[annotation-queues],
    FirstTokenTime(DateTime)[annotation-queues],
    SessionId(string)[annotation-queues],
    AppPath(string)[annotation-queues],
    LastQueuedAt(DateTime)[annotation-queues],
    InDataset(bool)[annotation-queues],
    ShareToken(string)[annotation-queues],
    TraceTier(ref)[annotation-queues],
    TraceFirstReceivedAt(DateTime)[annotation-queues],
    TtlSeconds(int)[annotation-queues],
    TraceUpgrade(bool)[annotation-queues],
    ReferenceDatasetId(string)[annotation-queues],
    ThreadId(string)[annotation-queues],
    QueueRunId(string)[annotation-queues],
    LastReviewedTime(DateTime)[annotation-queues],
    AddedAt(DateTime)[annotation-queues],
    EffectiveAddedAt(DateTime)[annotation-queues],
  RunShareSchema(class)[run],
    RunId(string)[run],
    ShareToken(string)[run],
  RunStats(class)[run, public],
    RunCount(int)[run, public],
    LatencyP50(double)[run, public],
    LatencyP99(double)[run, public],
    FirstTokenP50(double)[run, public],
    FirstTokenP99(double)[run, public],
    TotalTokens(int)[run, public],
    PromptTokens(int)[run, public],
    CompletionTokens(int)[run, public],
    MedianTokens(int)[run, public],
    CompletionTokensP50(int)[run, public],
    PromptTokensP50(int)[run, public],
    TokensP99(int)[run, public],
    CompletionTokensP99(int)[run, public],
    PromptTokensP99(int)[run, public],
    LastRunStartTime(DateTime)[run, public],
    RunStatsFeedbackStats(class)[run, public],
    RunFacets(array)[run, public],
      RunStatsRunFacet(class)[run, public],
    ErrorRate(double)[run, public],
    StreamingRate(double)[run, public],
    TotalCost(string)[run, public],
    PromptCost(string)[run, public],
    CompletionCost(string)[run, public],
    CostP50(string)[run, public],
    CostP99(string)[run, public],
  RunStatsQueryParams(class)[run, public],
    Id(array)[run, public],
      IdItem(string)[run, public],
    Trace(string)[run, public],
    ParentRun(string)[run, public],
    RunTypeEnum(ref)[run, public],
    Session(array)[run, public],
      SessionItem(string)[run, public],
    ReferenceExample(array)[run, public],
      ReferenceExampleItem(string)[run, public],
    ExecutionOrder(int)[run, public],
    StartTime(DateTime)[run, public],
    EndTime(DateTime)[run, public],
    Error(bool)[run, public],
    Query(string)[run, public],
    Filter(string)[run, public],
    TraceFilter(string)[run, public],
    TreeFilter(string)[run, public],
    IsRoot(bool)[run, public],
    RunsFilterDataSourceTypeEnum(ref)[run, public],
    SkipPagination(bool)[run, public],
    SearchFilter(string)[run, public],
    UseExperimentalSearch(bool)[run, public],
    RunStatsGroupBy(ref)[run, public],
  SSOConfirmEmailRequest(class)[auth],
    Token(string)[auth],
  SSOEmailVerificationSendRequest(class)[auth],
    Email(string)[auth],
    SamlProviderId(string)[auth],
  SSOEmailVerificationStatusRequest(class)[auth],
    Email(string)[auth],
    SamlProviderId(string)[auth],
  SSOEmailVerificationStatusResponse(class)[auth],
    EmailConfirmedAt(DateTime)[auth],
  SSOProvider(class)[orgs],
    Id(string)[orgs],
    OrganizationId(string)[orgs],
    ProviderId(string)[orgs],
    DefaultWorkspaceRoleId(string)[orgs],
    DefaultWorkspaceIds(array)[orgs],
      DefaultWorkspaceIdsItem(string)[orgs],
    MetadataUrl(string)[orgs],
    MetadataXml(string)[orgs],
  SSOProviderSlim(class)[auth],
    ProviderId(string)[auth],
    OrganizationId(string)[auth],
    OrganizationDisplayName(string)[auth],
  SSOSettingsCreate(class)[orgs],
    DefaultWorkspaceRoleId(string)[orgs],
    DefaultWorkspaceIds(array)[orgs],
      DefaultWorkspaceIdsItem(string)[orgs],
    MetadataXml(string)[orgs],
    MetadataUrl(string)[orgs],
    SSOSettingsCreateAttributeMapping(class)[orgs],
      AttributeMapping(string)[orgs],
  SSOSettingsUpdate(class)[orgs],
    DefaultWorkspaceRoleId(string)[orgs],
    DefaultWorkspaceIds(array)[orgs],
      DefaultWorkspaceIdsItem(string)[orgs],
    MetadataUrl(string)[orgs],
    MetadataXml(string)[orgs],
  SearchDatasetRequest(class)[datasets],
    SearchDatasetRequestInputs(class)[datasets],
    Limit(int)[datasets],
    Debug(bool)[datasets],
    Filter(string)[datasets],
  SearchDatasetResponse(class)[datasets],
    Examples(array)[datasets],
      SearchedFewShotExample(ref)[datasets],
  SearchedFewShotExample(class)[datasets],
    SearchedFewShotExampleInputs(class)[datasets],
    SearchedFewShotExampleOutputs(class)[datasets],
    Id(string)[datasets],
    SearchedFewShotExampleDebugInfo(class)[datasets],
  SecretKey(class)[workspaces],
    Key(string)[workspaces],
  SecretUpsert(class)[workspaces],
    Key(string)[workspaces],
    Value(string)[workspaces],
  ServiceAccount(class)[service-accounts],
    Id(string)[service-accounts],
    CreatedAt(DateTime)[service-accounts],
    UpdatedAt(DateTime)[service-accounts],
    Name(string)[service-accounts],
    OrganizationId(string)[service-accounts],
    DefaultWorkspaceId(string)[service-accounts],
  ServiceAccountCreateRequest(class)[service-accounts],
    Name(string)[service-accounts],
  ServiceAccountCreateResponse(class)[service-accounts],
    Id(string)[service-accounts],
    CreatedAt(DateTime)[service-accounts],
    UpdatedAt(DateTime)[service-accounts],
    Name(string)[service-accounts],
    OrganizationId(string)[service-accounts],
    DefaultWorkspaceId(string)[service-accounts],
    OrganizationIdentityId(string)[service-accounts],
  ServiceAccountDeleteResponse(class)[service-accounts],
    Id(string)[service-accounts],
    CreatedAt(DateTime)[service-accounts],
    UpdatedAt(DateTime)[service-accounts],
    Name(string)[service-accounts],
    OrganizationId(string)[service-accounts],
    DefaultWorkspaceId(string)[service-accounts],
  SessionFeedbackDelta(class)[datasets, public],
    SessionFeedbackDeltaFeedbackDeltas(class)[datasets, public],
      FeedbackDelta(ref)[datasets, public],
  SessionSortableColumns(enum)[tracer-sessions, public],
  SetTenantHandleRequest(class)[settings],
    TenantHandle(string)[settings],
  SingleCustomChartResponseBase(class)[charts],
    Data(array)[charts],
      CustomChartsDataPoint(ref)[charts],
  SortByComparativeExperimentColumn(enum)[datasets, public],
  SortByDatasetColumn(enum)[datasets, public],
  SourceType(enum)[feedback, public],
  StripeAccountLinksCreate(class)[orgs],
    SuccessPath(string)[orgs],
  StripeBusinessBillingInfo(class)[orgs],
    Name(string)[orgs],
    StripeCustomerAddress(ref)[orgs],
  StripeCustomerAddress(class)[orgs],
    Line1(string)[orgs],
    Line2(string)[orgs],
    City(string)[orgs],
    State(string)[orgs],
    PostalCode(string)[orgs],
    Country(string)[orgs],
  StripeBusinessInfoInput(class)[orgs],
    StripeBusinessBillingInfo(ref)[orgs],
    StripeTaxId(ref)[orgs],
    InvoiceEmail(string)[orgs],
    IsBusiness(bool)[orgs],
  StripeTaxId(class)[orgs],
    Value(string)[orgs],
    Type(string)[orgs],
  StripeBusinessInfoOutput(class)[orgs],
    StripeBusinessBillingInfo(ref)[orgs],
    StripeTaxId(ref)[orgs],
    InvoiceEmail(string)[orgs],
    IsBusiness(bool)[orgs],
  StripeCheckoutSessionsConfirm(class)[orgs],
    StripeSessionId(string)[orgs],
  StripeCheckoutSessionsCreate(class)[orgs],
    AmountCents(int)[orgs],
    SuccessPath(string)[orgs],
  StripeCustomerBillingInfo(class)[orgs],
    Name(string)[orgs],
    StripeCustomerAddress(ref)[orgs],
  StripePaymentInformation(class)[orgs],
    StripeCustomerBillingInfo(ref)[orgs],
    SetupIntent(string)[orgs],
  StripeSetupIntentResponse(class)[orgs],
    ClientSecret(string)[orgs],
  TTLSettings(class)[orgs, ttl-settings],
    TenantId(string)[orgs, ttl-settings],
    TraceTier(ref)[orgs, ttl-settings],
    ApplyToAllProjects(bool)[orgs, ttl-settings],
    Id(string)[orgs, ttl-settings],
    OrganizationId(string)[orgs, ttl-settings],
    CreatedAt(DateTime)[orgs, ttl-settings],
    UpdatedAt(DateTime)[orgs, ttl-settings],
    ConfiguredBy(ref)[orgs, ttl-settings],
  TagKey(class)[workspaces],
    Key(string)[workspaces],
    Description(string)[workspaces],
    Id(string)[workspaces],
    CreatedAt(DateTime)[workspaces],
    UpdatedAt(DateTime)[workspaces],
  TagKeyCreate(class)[workspaces],
    Key(string)[workspaces],
    Description(string)[workspaces],
  TagKeyUpdate(class)[workspaces],
    Key(string)[workspaces],
    Description(string)[workspaces],
  TagKeyWithValues(class)[workspaces],
    Key(string)[workspaces],
    Description(string)[workspaces],
    Id(string)[workspaces],
    CreatedAt(DateTime)[workspaces],
    UpdatedAt(DateTime)[workspaces],
    Values(array)[workspaces],
      TagValue(ref)[workspaces],
  TagValue(class)[workspaces],
    Value(string)[workspaces],
    Description(string)[workspaces],
    Id(string)[workspaces],
    TagKeyId(string)[workspaces],
    CreatedAt(DateTime)[workspaces],
    UpdatedAt(DateTime)[workspaces],
  TagKeyWithValuesAndTaggings(class)[workspaces],
    Key(string)[workspaces],
    Description(string)[workspaces],
    Id(string)[workspaces],
    CreatedAt(DateTime)[workspaces],
    UpdatedAt(DateTime)[workspaces],
    Values(array)[workspaces],
      TagValueWithTaggings(ref)[workspaces],
  TagValueWithTaggings(class)[workspaces],
    Value(string)[workspaces],
    Description(string)[workspaces],
    Id(string)[workspaces],
    TagKeyId(string)[workspaces],
    CreatedAt(DateTime)[workspaces],
    UpdatedAt(DateTime)[workspaces],
    Taggings(array)[workspaces],
      Tagging(ref)[workspaces],
  Tagging(class)[workspaces],
    TagValueId(string)[workspaces],
    ResourceType(ref)[workspaces],
    ResourceId(string)[workspaces],
    Id(string)[workspaces],
    CreatedAt(DateTime)[workspaces],
  TagValueCreate(class)[workspaces],
    Value(string)[workspaces],
    Description(string)[workspaces],
  TagValueUpdate(class)[workspaces],
    Value(string)[workspaces],
    Description(string)[workspaces],
  TaggingCreate(class)[workspaces],
    TagValueId(string)[workspaces],
    ResourceType(ref)[workspaces],
    ResourceId(string)[workspaces],
  TaggingsByResourceType(class)[workspaces],
    Prompts(array)[workspaces],
      Resource(ref)[workspaces],
    Projects(array)[workspaces],
      Resource(ref)[workspaces],
    Queues(array)[workspaces],
      Resource(ref)[workspaces],
    Deployments(array)[workspaces],
      Resource(ref)[workspaces],
    Experiments(array)[workspaces],
      Resource(ref)[workspaces],
    Datasets(array)[workspaces],
      Resource(ref)[workspaces],
    Dashboards(array)[workspaces],
      Resource(ref)[workspaces],
  TaggingsResponse(class)[workspaces],
    TagKey(string)[workspaces],
    TagKeyId(string)[workspaces],
    TagValue(string)[workspaces],
    TagValueId(string)[workspaces],
    TaggingsByResourceType(ref)[workspaces],
  TenantBulkUnshareRequest(class)[workspaces],
    ShareTokens(array)[workspaces],
      ShareTokensItem(string)[workspaces],
  TenantCreate(class)[tenant],
    Id(string)[tenant],
    OrganizationId(string)[tenant],
    DisplayName(string)[tenant],
    TenantHandle(string)[tenant],
    IsPersonal(bool)[tenant],
  TenantForUser(class)[tenant, workspaces],
    Id(string)[tenant, workspaces],
    OrganizationId(string)[tenant, workspaces],
    CreatedAt(DateTime)[tenant, workspaces],
    DisplayName(string)[tenant, workspaces],
    IsPersonal(bool)[tenant, workspaces],
    IsDeleted(bool)[tenant, workspaces],
    TenantHandle(string)[tenant, workspaces],
    ReadOnly(bool)[tenant, workspaces],
    RoleId(string)[tenant, workspaces],
    RoleName(string)[tenant, workspaces],
    Permissions(array)[tenant, workspaces],
      PermissionsItem(string)[tenant, workspaces],
  TenantMembers(class)[workspaces],
    TenantId(string)[workspaces],
    Members(array)[workspaces],
      MemberIdentity(ref)[workspaces],
    Pending(array)[workspaces],
      PendingIdentity(ref)[workspaces],
  TenantShareDatasetToken(class)[workspaces],
    TenantShareDatasetTokenType(enum)[workspaces],
    ShareToken(string)[workspaces],
    CreatedAt(DateTime)[workspaces],
    DatasetId(string)[workspaces],
    DatasetName(string)[workspaces],
  TenantShareRunToken(class)[workspaces],
    TenantShareRunTokenType(enum)[workspaces],
    ShareToken(string)[workspaces],
    CreatedAt(DateTime)[workspaces],
    RunId(string)[workspaces],
    RunName(string)[workspaces],
    RunType(string)[workspaces],
    SessionId(string)[workspaces],
    SessionName(string)[workspaces],
  TenantShareTokensResponse(class)[workspaces],
    Entities(array)[workspaces],
      EntitiesItem(oneOf)[workspaces],
        TenantShareRunToken(ref)[workspaces],
        TenantShareDatasetToken(ref)[workspaces],
        TenantShareTokensResponseEntitieDiscriminator(class)[workspaces],
          TenantShareTokensResponseEntitieDiscriminatorType(enum)[workspaces],
  TenantStats(class)[workspaces],
    TenantId(string)[workspaces],
    DatasetCount(int)[workspaces],
    TracerSessionCount(int)[workspaces],
    RepoCount(int)[workspaces],
    AnnotationQueueCount(int)[workspaces],
    DeploymentCount(int)[workspaces],
    DashboardsCount(int)[workspaces],
  TenantUsageLimitInfo(class)[workspaces],
    InRejectSet(bool)[workspaces],
    TenantUsageLimitType(ref)[workspaces],
    TenantLimit(int)[workspaces],
  TenantUsageLimitType(enum)[workspaces],
  TracerSessionCreate(class)[tracer-sessions],
    StartTime(DateTime)[tracer-sessions],
    EndTime(DateTime)[tracer-sessions],
    TracerSessionCreateExtra(class)[tracer-sessions],
    Name(string)[tracer-sessions],
    Description(string)[tracer-sessions],
    DefaultDatasetId(string)[tracer-sessions],
    ReferenceDatasetId(string)[tracer-sessions],
    TraceTier(ref)[tracer-sessions],
    Id(string)[tracer-sessions],
  TracerSessionUpdate(class)[tracer-sessions],
    Name(string)[tracer-sessions],
    Description(string)[tracer-sessions],
    DefaultDatasetId(string)[tracer-sessions],
    EndTime(DateTime)[tracer-sessions],
    TracerSessionUpdateExtra(class)[tracer-sessions],
    TraceTier(ref)[tracer-sessions],
  TracerSessionWithoutVirtualFields(class)[tracer-sessions],
    StartTime(DateTime)[tracer-sessions],
    EndTime(DateTime)[tracer-sessions],
    TracerSessionWithoutVirtualFieldsExtra(class)[tracer-sessions],
    Name(string)[tracer-sessions],
    Description(string)[tracer-sessions],
    DefaultDatasetId(string)[tracer-sessions],
    ReferenceDatasetId(string)[tracer-sessions],
    TraceTier(ref)[tracer-sessions],
    Id(string)[tracer-sessions],
    TenantId(string)[tracer-sessions],
    LastRunStartTimeLive(DateTime)[tracer-sessions],
  TriggerRulesRequest(class)[run],
    RuleIds(array)[run],
      RuleIdsItem(string)[run],
    DatasetId(string)[run],
  UpdateFeedbackConfigSchema(class)[feedback-configs],
    FeedbackKey(string)[feedback-configs],
    FeedbackConfig(ref)[feedback-configs],
    IsLowerScoreBetter(bool)[feedback-configs],
  UpdateRepoRequest(class)[repos],
    Description(string)[repos],
    Readme(string)[repos],
    Tags(array)[repos],
      TagsItem(string)[repos],
    IsPublic(bool)[repos],
    IsArchived(bool)[repos],
  UpdateRoleRequest(class)[orgs],
    DisplayName(string)[orgs],
    Description(string)[orgs],
    Permissions(array)[orgs],
      PermissionsItem(string)[orgs],
  UpsertTTLSettingsRequest(class)[orgs, ttl-settings],
    TenantId(string)[orgs, ttl-settings],
    TraceTier(ref)[orgs, ttl-settings],
    ApplyToAllProjects(bool)[orgs, ttl-settings],
  UpsertUsageLimit(class)[usage-limits],
    UsageLimitType(ref)[usage-limits],
    LimitValue(int)[usage-limits],
    Id(string)[usage-limits],
  UsageLimitType(enum)[usage-limits],
  UsageLimit(class)[usage-limits],
    UsageLimitType(ref)[usage-limits],
    LimitValue(int)[usage-limits],
    Id(string)[usage-limits],
    TenantId(string)[usage-limits],
    CreatedAt(DateTime)[usage-limits],
    UpdatedAt(DateTime)[usage-limits],
  UserWithPassword(class)[orgs],
    Id(string)[orgs],
    LsUserId(string)[orgs],
    CreatedAt(DateTime)[orgs],
    UpdatedAt(DateTime)[orgs],
    Email(string)[orgs],
    FullName(string)[orgs],
    AvatarUrl(string)[orgs],
    Password(string)[orgs],
  WorkspaceCreate(class)[workspaces],
    Id(string)[workspaces],
    DisplayName(string)[workspaces],
    TenantHandle(string)[workspaces],
  WorkspacePatch(class)[workspaces],
    DisplayName(string)[workspaces],
  AppHubCrudTenantsTenant(class)[settings],
    Id(string)[settings],
    DisplayName(string)[settings],
    CreatedAt(DateTime)[settings],
    TenantHandle(string)[settings],
  AppSchemasTenant(class)[tenant, workspaces],
    Id(string)[tenant, workspaces],
    OrganizationId(string)[tenant, workspaces],
    CreatedAt(DateTime)[tenant, workspaces],
    DisplayName(string)[tenant, workspaces],
    IsPersonal(bool)[tenant, workspaces],
    IsDeleted(bool)[tenant, workspaces],
    TenantHandle(string)[tenant, workspaces],
  CreateRunRequest(class)[run],
    Name(string)[run],
    CreateRunRequestInputs(class)[run],
    CreateRunRequestRunType(enum)[run],
    StartTime(oneOf)[run],
      StartTimeVariant1(string)[run],
      StartTimeVariant2(double)[run],
    EndTime(oneOf)[run],
      EndTimeVariant1(string)[run],
      EndTimeVariant2(double)[run],
    CreateRunRequestExtra(class)[run],
    Error(string)[run],
    CreateRunRequestSerialized(class)[run],
    CreateRunRequestOutputs(class)[run],
    ParentRunId(string)[run],
    Events(array)[run],
      CreateRunRequestEvent(class)[run],
    Tags(array)[run],
      TagsItem(string)[run],
    TraceId(string)[run],
    DottedOrder(string)[run],
    Id(string)[run],
    SessionId(string)[run],
    SessionName(string)[run],
    ReferenceExampleId(string)[run],
    CreateRunRequestInputAttachments(class)[run],
    CreateRunRequestOutputAttachments(class)[run],
  BatchIngestRunsRequest(class)[run],
    Post(array)[run],
      BatchIngestRunsRequestPostItem(class)[run],
        Name(string)[run],
        BatchIngestRunsRequestPostItemInputs(class)[run],
        BatchIngestRunsRequestPostItemRunType(enum)[run],
        StartTime2(oneOf)[run],
          StartTimeVariant1(string)[run],
          StartTimeVariant2(double)[run],
        EndTime2(oneOf)[run],
          EndTimeVariant1(string)[run],
          EndTimeVariant2(double)[run],
        BatchIngestRunsRequestPostItemExtra(class)[run],
        Error(string)[run],
        BatchIngestRunsRequestPostItemSerialized(class)[run],
        BatchIngestRunsRequestPostItemOutputs(class)[run],
        ParentRunId(string)[run],
        Events(array)[run],
          BatchIngestRunsRequestPostItemEvent(class)[run],
        Tags(array)[run],
          TagsItem(string)[run],
        TraceId(string)[run],
        DottedOrder(string)[run],
        Id(string)[run],
        SessionId(string)[run],
        SessionName(string)[run],
        ReferenceExampleId(string)[run],
        BatchIngestRunsRequestPostItemInputAttachments(class)[run],
        BatchIngestRunsRequestPostItemOutputAttachments(class)[run],
    Patch(array)[run],
      BatchIngestRunsRequestPatchItem(class)[run],
        TraceId(string)[run],
        DottedOrder(string)[run],
        ParentRunId(string)[run],
        EndTime3(oneOf)[run],
          EndTimeVariant1(string)[run],
          EndTimeVariant2(double)[run],
        Error(string)[run],
        BatchIngestRunsRequestPatchItemInputs(class)[run],
        BatchIngestRunsRequestPatchItemOutputs(class)[run],
        Events(array)[run],
          BatchIngestRunsRequestPatchItemEvent(class)[run],
        Tags(array)[run],
          TagsItem(string)[run],
        BatchIngestRunsRequestPatchItemExtra(class)[run],
        BatchIngestRunsRequestPatchItemInputAttachments(class)[run],
        BatchIngestRunsRequestPatchItemOutputAttachments(class)[run],
        Id(string)[run],
  UpdateRunRequest(class)[run],
    TraceId(string)[run],
    DottedOrder(string)[run],
    ParentRunId(string)[run],
    EndTime4(oneOf)[run],
      EndTimeVariant1(string)[run],
      EndTimeVariant2(double)[run],
    Error(string)[run],
    UpdateRunRequestInputs(class)[run],
    UpdateRunRequestOutputs(class)[run],
    Events(array)[run],
      UpdateRunRequestEvent(class)[run],
    Tags(array)[run],
      TagsItem(string)[run],
    UpdateRunRequestExtra(class)[run],
    UpdateRunRequestInputAttachments(class)[run],
    UpdateRunRequestOutputAttachments(class)[run],
    SessionId(string)[run],
    SessionName(string)[run],
  CustomChartsSectionRequest(ref)[tracer-sessions],
  TracerSessionUpdate(ref)[tracer-sessions],
  TracerSessionCreate(ref)[tracer-sessions],
  FilterViewCreate(ref)[tracer-sessions],
  FilterViewUpdate(ref)[tracer-sessions],
  OrganizationCreate(ref)[orgs],
  OrganizationUpdate(ref)[orgs],
  StripePaymentInformation(ref)[orgs],
  StripeBusinessInfoInput(ref)[orgs],
  ChangePaymentPlanSchema(ref)[orgs],
  CreateRoleRequest(ref)[orgs],
  UpdateRoleRequest(ref)[orgs],
  PendingIdentityCreate(ref)[orgs],
  AddMembersToCurrentOrgBatchApiV1OrgsCurrentMembersBatchPostRequest(array)[orgs],
    PendingIdentityCreate(ref)[orgs],
  AddBasicAuthMembersToCurrentOrgApiV1OrgsCurrentMembersBasicBatchPostRequest(array)[orgs],
    BasicAuthMemberCreate(ref)[orgs],
  OrgIdentityPatch(ref)[orgs],
  BasicAuthUserPatch(ref)[orgs],
  UpsertTTLSettingsRequest(ref)[orgs],
  SSOSettingsCreate(ref)[orgs],
  SSOSettingsUpdate(ref)[orgs],
  AllowedLoginMethodsUpdate(ref)[orgs],
  StripeCheckoutSessionsCreate(ref)[orgs],
  StripeCheckoutSessionsConfirm(ref)[orgs],
  StripeAccountLinksCreate(ref)[orgs],
  SSOEmailVerificationSendRequest(ref)[auth],
  SSOEmailVerificationStatusRequest(ref)[auth],
  SSOConfirmEmailRequest(ref)[auth],
  APIKeyCreateRequest(ref)[api-key],
  APIKeyCreateRequest(ref)[api-key],
  ExampleUpdate(ref)[examples],
  LegacyUpdateExamplesApiV1ExamplesBulkPatchRequest(array)[examples],
    ExampleUpdateWithID(ref)[examples],
  BodyLegacyUploadExamplesApiV1ExamplesUploadDatasetIdPost(ref)[examples],
  DatasetUpdate(ref)[datasets],
  DatasetCreate(ref)[datasets],
  BodyUploadCsvDatasetApiV1DatasetsUploadPost(ref)[datasets],
  ExperimentResultsUpload(ref)[datasets],
  PutDatasetVersionsSchema(ref)[datasets],
  QueryExampleSchemaWithRuns(ref)[datasets],
  QueryGroupedExamplesWithRuns(ref)[datasets],
  QueryFeedbackDelta(ref)[datasets],
  ComparativeExperimentCreate(ref)[datasets],
  BodyCloneDatasetApiV1DatasetsClonePost(ref)[datasets],
  BodyUpdateDatasetSplitsApiV1DatasetsDatasetIdSplitsPut(ref)[datasets],
  DatasetIndexRequest(ref)[datasets],
  SearchDatasetRequest(ref)[datasets],
  GenerateSyntheticExamplesBody(ref)[datasets],
  PlaygroundRunOverDatasetRequestSchema(ref)[datasets],
  PlaygroundRunOverDatasetRequestSchema(ref)[datasets],
  RunRulesCreateSchema(ref)[run],
  RunRulesCreateSchema(ref)[run],
  TriggerRulesRequest(ref)[run],
  UpdateRunRequest(ref)[run],
  BodyParamsForRunSchema(ref)[run],
  RequestBodyForRunsGenerateQuery(ref)[run],
  RunStatsQueryParams(ref)[run],
  MonitorRequest(ref)[run],
  CreateRunRequest(ref)[run],
  BatchIngestRunsRequest(ref)[run],
  RunGroupRequest(ref)[run],
  RunGroupRequest(ref)[run],
  BodyDeleteRunsApiV1RunsDeletePost(ref)[run],
  FeedbackUpdateSchema(ref)[feedback],
  FeedbackCreateSchema(ref)[feedback],
  FeedbackCreateSchema(ref)[feedback],
  CreateFeedbackIngestTokenApiV1FeedbackTokensPostRequest(anyOf)[feedback],
    FeedbackIngestTokenCreateSchema(ref)[feedback],
    CreateFeedbackIngestTokenApiV1FeedbackTokensPostRequestVariant2(array)[feedback],
      FeedbackIngestTokenCreateSchema(ref)[feedback],
  FeedbackCreateWithTokenExtendedSchema(ref)[feedback],
  QueryParamsForPublicRunSchema(ref)[public],
  QueryExampleSchemaWithRuns(ref)[public],
  QueryFeedbackDelta(ref)[public],
  BodyParamsForRunSchema(ref)[public],
  RequestBodyForRunsGenerateQuery(ref)[public],
  RunStatsQueryParams(ref)[public],
  AnnotationQueueCreateSchema(ref)[annotation-queues],
  PopulateAnnotationQueueSchema(ref)[annotation-queues],
  AnnotationQueueUpdateSchema(ref)[annotation-queues],
  AddRunsToAnnotationQueueApiV1AnnotationQueuesQueueIdRunsPostRequest(array)[annotation-queues],
    AddRunsToAnnotationQueueApiV1AnnotationQueuesQueueIdRunsPostRequestItem(string)[annotation-queues],
  ExportAnnotationQueueRunsRequest(ref)[annotation-queues],
  AnnotationQueueRunUpdateSchema(ref)[annotation-queues],
  AnnotationQueueBulkDeleteRunsRequest(ref)[annotation-queues],
  IdentityAnnotationQueueRunStatusCreateSchema(ref)[annotation-queues],
  BodyExecuteApiV1AceExecutePost(ref)[ace],
  BulkExportCreate(ref)[bulk-exports],
  BulkExportDestinationCreate(ref)[bulk-exports],
  BulkExportUpdate(ref)[bulk-exports],
  TenantCreate(ref)[tenant],
  CreateFeedbackConfigSchema(ref)[feedback-configs],
  UpdateFeedbackConfigSchema(ref)[feedback-configs],
  ModelPriceMapCreateSchema(ref)[model-price-map],
  ModelPriceMapUpdateSchema(ref)[model-price-map],
  UpsertUsageLimit(ref)[usage-limits],
  UpsertTTLSettingsRequest(ref)[ttl-settings],
  InvokePromptPayload(ref)[prompts],
  PlaygroundPromptCanvasPayload(ref)[prompts],
  WorkspaceCreate(ref)[workspaces],
  WorkspacePatch(ref)[workspaces],
  IdentityCreate(ref)[workspaces],
  AddMembersToCurrentWorkspaceBatchApiV1WorkspacesCurrentMembersBatchPostRequest(array)[workspaces],
    PendingIdentityCreate(ref)[workspaces],
  TenantBulkUnshareRequest(ref)[workspaces],
  IdentityPatch(ref)[workspaces],
  UpsertCurrentWorkspaceSecretsApiV1WorkspacesCurrentSecretsPostRequest(array)[workspaces],
    SecretUpsert(ref)[workspaces],
  TagKeyCreate(ref)[workspaces],
  TagKeyUpdate(ref)[workspaces],
  TagValueCreate(ref)[workspaces],
  TagValueUpdate(ref)[workspaces],
  TaggingCreate(ref)[workspaces],
  ListTagsForResourcesApiV1WorkspacesCurrentTagsResourcesPostRequest(array)[workspaces],
    ListTagsForResourceRequest(ref)[workspaces],
  PlaygroundSettingsCreateRequest(ref)[playground-settings],
  PlaygroundSettingsUpdateRequest(ref)[playground-settings],
  ServiceAccountCreateRequest(ref)[service-accounts],
  CustomChartsSectionCreate(ref)[charts],
  CustomChartsRequest(ref)[charts],
  CustomChartPreviewRequest(ref)[charts],
  CustomChartCreate(ref)[charts],
  CustomChartsRequest(ref)[charts],
  CustomChartUpdate(ref)[charts],
  CustomChartsSectionRequest(ref)[charts],
  CustomChartsSectionUpdate(ref)[charts],
  CustomChartsSectionCreate(ref)[charts],
  CustomChartsRequest(ref)[charts],
  CustomChartPreviewRequest(ref)[charts],
  CustomChartCreate(ref)[charts],
  CustomChartsRequest(ref)[charts],
  CustomChartUpdate(ref)[charts],
  CustomChartsRequestBase(ref)[charts],
  CustomChartsSectionUpdate(ref)[charts],
  CreateRepoRequest(ref)[repos],
  UpdateRepoRequest(ref)[repos],
  ForkRepoRequest(ref)[repos],
  OptimizePromptJobRequest(ref)[repos],
  LikeRepoRequest(ref)[likes],
  CreateRepoCommitRequest(ref)[commits],
  SetTenantHandleRequest(ref)[settings],
  CreateEventRequest(ref)[events],
  CreateCommentRequest(ref)[comments],
  CreateCommentRequest(ref)[comments],
  RepoTagRequest(ref)[tags],
  RepoUpdateTagRequest(ref)[tags],
  PromptOptimizationJobCreate(ref)[optimization-jobs],
  PromptOptimizationJobUpdate(ref)[optimization-jobs],
  PromptOptimizationJobLogCreate(ref)[optimization-jobs],
  Request(class)[examples],
    x_exampleId_(byte[])[examples],
    x_exampleId_Inputs(byte[])[examples],
    x_exampleId_Outputs(byte[])[examples],
    x_exampleId_Attachments_name_(byte[])[examples],
  Request2(class)[examples],
    x_exampleId_(byte[])[examples],
    x_exampleId_Inputs(byte[])[examples],
    x_exampleId_Outputs(byte[])[examples],
    x_exampleId_AttachmentsOperations(byte[])[examples],
    x_exampleId_Attachment_name_(byte[])[examples],
  Request3(class)[runs],
    Post_runId_(byte[])[runs],
    Patch_runId_(byte[])[runs],
    Post_runId_Inputs(byte[])[runs],
    Patch_runId_Outputs(byte[])[runs],
    Feedback_runId_(byte[])[runs],
    Attachment_runId__filename_(file)[runs],
  GetTracingProjectPrebuiltDashboardApiV1SessionsSessionIdDashboardPostSessionId(string)[tracer-sessions],
  GetTracingProjectPrebuiltDashboardApiV1SessionsSessionIdDashboardPostAccept(string)[tracer-sessions],
  ReadTracerSessionApiV1SessionsSessionIdGetSessionId(string)[tracer-sessions],
  ReadTracerSessionApiV1SessionsSessionIdGetIncludeStats(bool)[tracer-sessions],
  ReadTracerSessionApiV1SessionsSessionIdGetAccept(string)[tracer-sessions],
  UpdateTracerSessionApiV1SessionsSessionIdPatchSessionId(string)[tracer-sessions],
  DeleteTracerSessionApiV1SessionsSessionIdDeleteSessionId(string)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetReferenceFree(bool)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetReferenceDataset(array)[tracer-sessions],
    ReadTracerSessionsApiV1SessionsGetReferenceDatasetItem(string)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetId(array)[tracer-sessions],
    ReadTracerSessionsApiV1SessionsGetIdItem(string)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetName(string)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetNameContains(string)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetDatasetVersion(string)[tracer-sessions],
  SessionSortableColumns(ref)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetSortByDesc(bool)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetMetadata(string)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetSortByFeedbackKey(string)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetOffset(int)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetLimit(int)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetTagValueId(array)[tracer-sessions],
    ReadTracerSessionsApiV1SessionsGetTagValueIdItem(string)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetFacets(bool)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetFilter(string)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetIncludeStats(bool)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetAccept(string)[tracer-sessions],
  CreateTracerSessionApiV1SessionsPostUpsert(bool)[tracer-sessions],
  DeleteTracerSessionsApiV1SessionsDeleteSessionIds(array)[tracer-sessions],
    DeleteTracerSessionsApiV1SessionsDeleteSessionIdsItem(string)[tracer-sessions],
  ReadTracerSessionsRunsMetadataApiV1SessionsSessionIdMetadataGetSessionId(string)[tracer-sessions],
  ReadTracerSessionsRunsMetadataApiV1SessionsSessionIdMetadataGetMetadataKeys(array)[tracer-sessions],
    ReadTracerSessionsRunsMetadataApiV1SessionsSessionIdMetadataGetMetadataKeysItem(string)[tracer-sessions],
  ReadTracerSessionsRunsMetadataApiV1SessionsSessionIdMetadataGetStartTime(DateTime)[tracer-sessions],
  ReadTracerSessionsRunsMetadataApiV1SessionsSessionIdMetadataGetK(int)[tracer-sessions],
  ReadTracerSessionsRunsMetadataApiV1SessionsSessionIdMetadataGetRootRunsOnly(bool)[tracer-sessions],
  ReadFilterViewsApiV1SessionsSessionIdViewsGetSessionId(string)[tracer-sessions],
  FilterViewType(ref)[tracer-sessions],
  CreateFilterViewApiV1SessionsSessionIdViewsPostSessionId(string)[tracer-sessions],
  ReadFilterViewApiV1SessionsSessionIdViewsViewIdGetSessionId(string)[tracer-sessions],
  ReadFilterViewApiV1SessionsSessionIdViewsViewIdGetViewId(string)[tracer-sessions],
  UpdateFilterViewApiV1SessionsSessionIdViewsViewIdPatchSessionId(string)[tracer-sessions],
  UpdateFilterViewApiV1SessionsSessionIdViewsViewIdPatchViewId(string)[tracer-sessions],
  DeleteFilterViewApiV1SessionsSessionIdViewsViewIdDeleteSessionId(string)[tracer-sessions],
  DeleteFilterViewApiV1SessionsSessionIdViewsViewIdDeleteViewId(string)[tracer-sessions],
  ListOrganizationsApiV1OrgsGetSkipCreate(bool)[orgs],
  OrganizationDashboardType(ref)[orgs],
  OrganizationDashboardColorScheme(ref)[orgs],
  DeleteOrganizationRolesApiV1OrgsCurrentRolesRoleIdDeleteRoleId(string)[orgs],
  UpdateOrganizationRolesApiV1OrgsCurrentRolesRoleIdPatchRoleId(string)[orgs],
  GetCurrentActiveOrgMembersApiV1OrgsCurrentMembersActiveGetLimit(int)[orgs],
  GetCurrentActiveOrgMembersApiV1OrgsCurrentMembersActiveGetOffset(int)[orgs],
  GetCurrentActiveOrgMembersApiV1OrgsCurrentMembersActiveGetEmails(array)[orgs],
    GetCurrentActiveOrgMembersApiV1OrgsCurrentMembersActiveGetEmailsItem(string)[orgs],
  GetCurrentActiveOrgMembersApiV1OrgsCurrentMembersActiveGetLsUserIds(array)[orgs],
    GetCurrentActiveOrgMembersApiV1OrgsCurrentMembersActiveGetLsUserIdsItem(string)[orgs],
  GetCurrentActiveOrgMembersApiV1OrgsCurrentMembersActiveGetUserIds(array)[orgs],
    GetCurrentActiveOrgMembersApiV1OrgsCurrentMembersActiveGetUserIdsItem(string)[orgs],
  GetCurrentPendingOrgMembersApiV1OrgsCurrentMembersPendingGetLimit(int)[orgs],
  GetCurrentPendingOrgMembersApiV1OrgsCurrentMembersPendingGetOffset(int)[orgs],
  GetCurrentPendingOrgMembersApiV1OrgsCurrentMembersPendingGetEmails(array)[orgs],
    GetCurrentPendingOrgMembersApiV1OrgsCurrentMembersPendingGetEmailsItem(string)[orgs],
  DeleteCurrentOrgPendingMemberApiV1OrgsCurrentMembersIdentityIdPendingDeleteIdentityId(string)[orgs],
  DeletePendingOrganizationInviteApiV1OrgsPendingOrganizationIdDeleteOrganizationId(string)[orgs],
  ClaimPendingOrganizationInviteApiV1OrgsPendingOrganizationIdClaimPostOrganizationId(string)[orgs],
  RemoveMemberFromCurrentOrgApiV1OrgsCurrentMembersIdentityIdDeleteIdentityId(string)[orgs],
  UpdateCurrentOrgMemberApiV1OrgsCurrentMembersIdentityIdPatchIdentityId(string)[orgs],
  UpdateSsoSettingsApiV1OrgsCurrentSsoSettingsIdPatchId(string)[orgs],
  DeleteSsoSettingsApiV1OrgsCurrentSsoSettingsIdDeleteId(string)[orgs],
  GetOrgUsageApiV1OrgsCurrentBillingUsageGetStartingOn(DateTime)[orgs],
  GetOrgUsageApiV1OrgsCurrentBillingUsageGetEndingBefore(DateTime)[orgs],
  GetOrgUsageApiV1OrgsCurrentBillingUsageGetOnCurrentPlan(bool)[orgs],
  OAuthProvider(ref)[auth],
  OAuthProvider(ref)[auth],
  OAuthProvider(ref)[auth],
  OAuthProvider(ref)[auth],
  GetSsoSettingsApiV1SsoSettingsSsoLoginSlugGetSsoLoginSlug(string)[auth],
  DeleteApiKeyApiV1ApiKeyApiKeyIdDeleteApiKeyId(string)[api-key],
  DeletePersonalAccessTokenApiV1ApiKeyCurrentPatIdDeletePatId(string)[api-key],
  CountExamplesApiV1ExamplesCountGetId(array)[examples],
    CountExamplesApiV1ExamplesCountGetIdItem(string)[examples],
  CountExamplesApiV1ExamplesCountGetAsOf(anyOf)[examples],
    CountExamplesApiV1ExamplesCountGetAsOfVariant1(DateTime)[examples],
    CountExamplesApiV1ExamplesCountGetAsOfVariant2(string)[examples],
  CountExamplesApiV1ExamplesCountGetMetadata(string)[examples],
  CountExamplesApiV1ExamplesCountGetFullTextContains(array)[examples],
    CountExamplesApiV1ExamplesCountGetFullTextContainsItem(string)[examples],
  CountExamplesApiV1ExamplesCountGetSplits(array)[examples],
    CountExamplesApiV1ExamplesCountGetSplitsItem(string)[examples],
  CountExamplesApiV1ExamplesCountGetDataset(string)[examples],
  CountExamplesApiV1ExamplesCountGetFilter(string)[examples],
  ReadExampleApiV1ExamplesExampleIdGetExampleId(string)[examples],
  ReadExampleApiV1ExamplesExampleIdGetAsOf(anyOf)[examples],
    ReadExampleApiV1ExamplesExampleIdGetAsOfVariant1(DateTime)[examples],
    ReadExampleApiV1ExamplesExampleIdGetAsOfVariant2(string)[examples],
  UpdateExampleApiV1ExamplesExampleIdPatchExampleId(string)[examples],
  DeleteExampleApiV1ExamplesExampleIdDeleteExampleId(string)[examples],
  ReadExamplesApiV1ExamplesGetId(array)[examples],
    ReadExamplesApiV1ExamplesGetIdItem(string)[examples],
  ReadExamplesApiV1ExamplesGetAsOf(anyOf)[examples],
    ReadExamplesApiV1ExamplesGetAsOfVariant1(DateTime)[examples],
    ReadExamplesApiV1ExamplesGetAsOfVariant2(string)[examples],
  ReadExamplesApiV1ExamplesGetMetadata(string)[examples],
  ReadExamplesApiV1ExamplesGetFullTextContains(array)[examples],
    ReadExamplesApiV1ExamplesGetFullTextContainsItem(string)[examples],
  ReadExamplesApiV1ExamplesGetSplits(array)[examples],
    ReadExamplesApiV1ExamplesGetSplitsItem(string)[examples],
  ReadExamplesApiV1ExamplesGetDataset(string)[examples],
  ReadExamplesApiV1ExamplesGetOffset(int)[examples],
  ReadExamplesApiV1ExamplesGetLimit(int)[examples],
  ExampleListOrder(ref)[examples],
  ReadExamplesApiV1ExamplesGetRandomSeed(double)[examples],
  ReadExamplesApiV1ExamplesGetSelect(array)[examples],
    ExampleSelect(ref)[examples],
  ReadExamplesApiV1ExamplesGetFilter(string)[examples],
  DeleteExamplesApiV1ExamplesDeleteExampleIds(array)[examples],
    DeleteExamplesApiV1ExamplesDeleteExampleIdsItem(string)[examples],
  LegacyUploadExamplesApiV1ExamplesUploadDatasetIdPostDatasetId(string)[examples],
  ReadDatasetApiV1DatasetsDatasetIdGetDatasetId(string)[datasets],
  DeleteDatasetApiV1DatasetsDatasetIdDeleteDatasetId(string)[datasets],
  UpdateDatasetApiV1DatasetsDatasetIdPatchDatasetId(string)[datasets],
  ReadDatasetsApiV1DatasetsGetId(array)[datasets],
    ReadDatasetsApiV1DatasetsGetIdItem(string)[datasets],
  ReadDatasetsApiV1DatasetsGetDataType(anyOf)[datasets],
    ReadDatasetsApiV1DatasetsGetDataTypeVariant1(array)[datasets],
      DataType(ref)[datasets],
    DataType(ref)[datasets],
  ReadDatasetsApiV1DatasetsGetName(string)[datasets],
  ReadDatasetsApiV1DatasetsGetNameContains(string)[datasets],
  ReadDatasetsApiV1DatasetsGetMetadata(string)[datasets],
  ReadDatasetsApiV1DatasetsGetOffset(int)[datasets],
  ReadDatasetsApiV1DatasetsGetLimit(int)[datasets],
  SortByDatasetColumn(ref)[datasets],
  ReadDatasetsApiV1DatasetsGetSortByDesc(bool)[datasets],
  ReadDatasetsApiV1DatasetsGetTagValueId(array)[datasets],
    ReadDatasetsApiV1DatasetsGetTagValueIdItem(string)[datasets],
  GetDatasetVersionsApiV1DatasetsDatasetIdVersionsGetDatasetId(string)[datasets],
  GetDatasetVersionsApiV1DatasetsDatasetIdVersionsGetSearch(string)[datasets],
  GetDatasetVersionsApiV1DatasetsDatasetIdVersionsGetExample(string)[datasets],
  GetDatasetVersionsApiV1DatasetsDatasetIdVersionsGetLimit(int)[datasets],
  GetDatasetVersionsApiV1DatasetsDatasetIdVersionsGetOffset(int)[datasets],
  DiffDatasetVersionsApiV1DatasetsDatasetIdVersionsDiffGetDatasetId(string)[datasets],
  DiffDatasetVersionsApiV1DatasetsDatasetIdVersionsDiffGetFromVersion(anyOf)[datasets],
    DiffDatasetVersionsApiV1DatasetsDatasetIdVersionsDiffGetFromVersionVariant1(DateTime)[datasets],
    DiffDatasetVersionsApiV1DatasetsDatasetIdVersionsDiffGetFromVersionVariant2(string)[datasets],
  DiffDatasetVersionsApiV1DatasetsDatasetIdVersionsDiffGetToVersion(anyOf)[datasets],
    DiffDatasetVersionsApiV1DatasetsDatasetIdVersionsDiffGetToVersionVariant1(DateTime)[datasets],
    DiffDatasetVersionsApiV1DatasetsDatasetIdVersionsDiffGetToVersionVariant2(string)[datasets],
  GetDatasetVersionApiV1DatasetsDatasetIdVersionGetDatasetId(string)[datasets],
  GetDatasetVersionApiV1DatasetsDatasetIdVersionGetAsOf(DateTime)[datasets],
  GetDatasetVersionApiV1DatasetsDatasetIdVersionGetTag(string)[datasets],
  UpdateDatasetVersionApiV1DatasetsDatasetIdTagsPutDatasetId(string)[datasets],
  DownloadDatasetOpenaiApiV1DatasetsDatasetIdOpenaiGetDatasetId(string)[datasets],
  DownloadDatasetOpenaiApiV1DatasetsDatasetIdOpenaiGetAsOf(DateTime)[datasets],
  DownloadDatasetOpenaiFtApiV1DatasetsDatasetIdOpenaiFtGetDatasetId(string)[datasets],
  DownloadDatasetOpenaiFtApiV1DatasetsDatasetIdOpenaiFtGetAsOf(DateTime)[datasets],
  DownloadDatasetCsvApiV1DatasetsDatasetIdCsvGetDatasetId(string)[datasets],
  DownloadDatasetCsvApiV1DatasetsDatasetIdCsvGetAsOf(DateTime)[datasets],
  DownloadDatasetJsonlApiV1DatasetsDatasetIdJsonlGetDatasetId(string)[datasets],
  DownloadDatasetJsonlApiV1DatasetsDatasetIdJsonlGetAsOf(DateTime)[datasets],
  ReadExamplesWithRunsApiV1DatasetsDatasetIdRunsPostDatasetId(string)[datasets],
  ReadExamplesWithRunsApiV1DatasetsDatasetIdRunsPostFormat(string)[datasets],
  ReadExamplesWithRunsGroupedApiV1DatasetsDatasetIdGroupRunsPostDatasetId(string)[datasets],
  ReadDeltaApiV1DatasetsDatasetIdRunsDeltaPostDatasetId(string)[datasets],
  ReadDatasetShareStateApiV1DatasetsDatasetIdShareGetDatasetId(string)[datasets],
  ShareDatasetApiV1DatasetsDatasetIdSharePutDatasetId(string)[datasets],
  ShareDatasetApiV1DatasetsDatasetIdSharePutShareProjects(bool)[datasets],
  UnshareDatasetApiV1DatasetsDatasetIdShareDeleteDatasetId(string)[datasets],
  ReadComparativeExperimentsApiV1DatasetsDatasetIdComparativeGetDatasetId(string)[datasets],
  ReadComparativeExperimentsApiV1DatasetsDatasetIdComparativeGetName(string)[datasets],
  ReadComparativeExperimentsApiV1DatasetsDatasetIdComparativeGetNameContains(string)[datasets],
  ReadComparativeExperimentsApiV1DatasetsDatasetIdComparativeGetId(array)[datasets],
    ReadComparativeExperimentsApiV1DatasetsDatasetIdComparativeGetIdItem(string)[datasets],
  ReadComparativeExperimentsApiV1DatasetsDatasetIdComparativeGetOffset(int)[datasets],
  ReadComparativeExperimentsApiV1DatasetsDatasetIdComparativeGetLimit(int)[datasets],
  SortByComparativeExperimentColumn(ref)[datasets],
  ReadComparativeExperimentsApiV1DatasetsDatasetIdComparativeGetSortByDesc(bool)[datasets],
  DeleteComparativeExperimentApiV1DatasetsComparativeComparativeExperimentIdDeleteComparativeExperimentId(string)[datasets],
  GetDatasetSplitsApiV1DatasetsDatasetIdSplitsGetDatasetId(string)[datasets],
  GetDatasetSplitsApiV1DatasetsDatasetIdSplitsGetAsOf(anyOf)[datasets],
    GetDatasetSplitsApiV1DatasetsDatasetIdSplitsGetAsOfVariant1(DateTime)[datasets],
    GetDatasetSplitsApiV1DatasetsDatasetIdSplitsGetAsOfVariant2(string)[datasets],
  UpdateDatasetSplitsApiV1DatasetsDatasetIdSplitsPutDatasetId(string)[datasets],
  IndexApiV1DatasetsDatasetIdIndexPostDatasetId(string)[datasets],
  RemoveIndexApiV1DatasetsDatasetIdIndexDeleteDatasetId(string)[datasets],
  GetIndexInfoApiV1DatasetsDatasetIdIndexGetDatasetId(string)[datasets],
  SyncIndexApiV1DatasetsDatasetIdIndexSyncPostDatasetId(string)[datasets],
  SearchApiV1DatasetsDatasetIdSearchPostDatasetId(string)[datasets],
  GenerateApiV1DatasetsDatasetIdGeneratePostDatasetId(string)[datasets],
  ListRulesApiV1RunsRulesGetDatasetId(string)[run],
  ListRulesApiV1RunsRulesGetSessionId(string)[run],
  ListRulesApiV1RunsRulesGetType(enum)[run],
  ListRulesApiV1RunsRulesGetNameContains(string)[run],
  ListRulesApiV1RunsRulesGetId(array)[run],
    ListRulesApiV1RunsRulesGetIdItem(string)[run],
  UpdateRuleApiV1RunsRulesRuleIdPatchRuleId(string)[run],
  DeleteRuleApiV1RunsRulesRuleIdDeleteRuleId(string)[run],
  ListRuleLogsApiV1RunsRulesRuleIdLogsGetRuleId(string)[run],
  ListRuleLogsApiV1RunsRulesRuleIdLogsGetLimit(int)[run],
  ListRuleLogsApiV1RunsRulesRuleIdLogsGetOffset(int)[run],
  ListRuleLogsApiV1RunsRulesRuleIdLogsGetStartTime(DateTime)[run],
  ListRuleLogsApiV1RunsRulesRuleIdLogsGetEndTime(DateTime)[run],
  GetLastAppliedRuleApiV1RunsRulesRuleIdLastAppliedGetRuleId(string)[run],
  TriggerRuleApiV1RunsRulesRuleIdTriggerPostRuleId(string)[run],
  ReadRunApiV1RunsRunIdGetRunId(string)[run],
  ReadRunApiV1RunsRunIdGetSessionId(string)[run],
  ReadRunApiV1RunsRunIdGetStartTime(DateTime)[run],
  ReadRunApiV1RunsRunIdGetExcludeS3StoredAttributes(bool)[run],
  ReadRunApiV1RunsRunIdGetExcludeSerialized(bool)[run],
  UpdateRunApiV1RunsRunIdPatchRunId(string)[run],
  ReadRunShareStateApiV1RunsRunIdShareGetRunId(string)[run],
  ShareRunApiV1RunsRunIdSharePutRunId(string)[run],
  UnshareRunApiV1RunsRunIdShareDeleteRunId(string)[run],
  GroupRunsApiV1RunsGroupPostAccept(string)[run],
  ReadFeedbackApiV1FeedbackFeedbackIdGetFeedbackId(string)[feedback],
  ReadFeedbackApiV1FeedbackFeedbackIdGetIncludeUserNames(bool)[feedback],
  UpdateFeedbackApiV1FeedbackFeedbackIdPatchFeedbackId(string)[feedback],
  DeleteFeedbackApiV1FeedbackFeedbackIdDeleteFeedbackId(string)[feedback],
  ReadFeedbacksApiV1FeedbackGetRun(array)[feedback],
    ReadFeedbacksApiV1FeedbackGetRunItem(string)[feedback],
  ReadFeedbacksApiV1FeedbackGetKey(array)[feedback],
    ReadFeedbacksApiV1FeedbackGetKeyItem(string)[feedback],
  ReadFeedbacksApiV1FeedbackGetSession(array)[feedback],
    ReadFeedbacksApiV1FeedbackGetSessionItem(string)[feedback],
  ReadFeedbacksApiV1FeedbackGetSource(array)[feedback],
    SourceType(ref)[feedback],
  ReadFeedbacksApiV1FeedbackGetLimit(int)[feedback],
  ReadFeedbacksApiV1FeedbackGetOffset(int)[feedback],
  ReadFeedbacksApiV1FeedbackGetUser(array)[feedback],
    ReadFeedbacksApiV1FeedbackGetUserItem(string)[feedback],
  ReadFeedbacksApiV1FeedbackGetHasComment(bool)[feedback],
  ReadFeedbacksApiV1FeedbackGetHasScore(bool)[feedback],
  FeedbackLevel(ref)[feedback],
  ReadFeedbacksApiV1FeedbackGetMaxCreatedAt(DateTime)[feedback],
  ReadFeedbacksApiV1FeedbackGetMinCreatedAt(DateTime)[feedback],
  ReadFeedbacksApiV1FeedbackGetIncludeUserNames(bool)[feedback],
  ListFeedbackIngestTokensApiV1FeedbackTokensGetRunId(string)[feedback],
  CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetToken(string)[feedback],
  CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetScore(anyOf)[feedback],
    CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetScoreVariant1(double)[feedback],
    CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetScoreVariant2(int)[feedback],
    CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetScoreVariant3(bool)[feedback],
  CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetValue(anyOf)[feedback],
    CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetValueVariant1(double)[feedback],
    CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetValueVariant2(int)[feedback],
    CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetValueVariant3(bool)[feedback],
    CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetValueVariant4(string)[feedback],
  CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetComment(string)[feedback],
  CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetCorrection(string)[feedback],
  CreateFeedbackWithTokenPostApiV1FeedbackTokensTokenPostToken(string)[feedback],
  GetSharedRunApiV1PublicShareTokenRunGetShareToken(string)[public],
  GetSharedRunApiV1PublicShareTokenRunGetExcludeS3StoredAttributes(bool)[public],
  GetSharedRunByIdApiV1PublicShareTokenRunIdGetId(string)[public],
  GetSharedRunByIdApiV1PublicShareTokenRunIdGetShareToken(string)[public],
  GetSharedRunByIdApiV1PublicShareTokenRunIdGetExcludeS3StoredAttributes(bool)[public],
  QuerySharedRunsApiV1PublicShareTokenRunsQueryPostShareToken(string)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetShareToken(string)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetRun(array)[public],
    ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetRunItem(string)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetKey(array)[public],
    ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetKeyItem(string)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetSession(array)[public],
    ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetSessionItem(string)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetSource(array)[public],
    SourceType(ref)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetLimit(int)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetOffset(int)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetUser(array)[public],
    ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetUserItem(string)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetHasComment(bool)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetHasScore(bool)[public],
  FeedbackLevel(ref)[public],
  ReadSharedDatasetApiV1PublicShareTokenDatasetsGetShareToken(string)[public],
  ReadSharedDatasetApiV1PublicShareTokenDatasetsGetOffset(int)[public],
  ReadSharedDatasetApiV1PublicShareTokenDatasetsGetLimit(int)[public],
  SortByDatasetColumn(ref)[public],
  ReadSharedDatasetApiV1PublicShareTokenDatasetsGetSortByDesc(bool)[public],
  CountSharedExamplesApiV1PublicShareTokenExamplesCountGetShareToken(string)[public],
  CountSharedExamplesApiV1PublicShareTokenExamplesCountGetId(array)[public],
    CountSharedExamplesApiV1PublicShareTokenExamplesCountGetIdItem(string)[public],
  CountSharedExamplesApiV1PublicShareTokenExamplesCountGetAsOf(anyOf)[public],
    CountSharedExamplesApiV1PublicShareTokenExamplesCountGetAsOfVariant1(DateTime)[public],
    CountSharedExamplesApiV1PublicShareTokenExamplesCountGetAsOfVariant2(string)[public],
  CountSharedExamplesApiV1PublicShareTokenExamplesCountGetMetadata(string)[public],
  CountSharedExamplesApiV1PublicShareTokenExamplesCountGetFilter(string)[public],
  ReadSharedExamplesApiV1PublicShareTokenExamplesGetShareToken(string)[public],
  ReadSharedExamplesApiV1PublicShareTokenExamplesGetId(array)[public],
    ReadSharedExamplesApiV1PublicShareTokenExamplesGetIdItem(string)[public],
  ReadSharedExamplesApiV1PublicShareTokenExamplesGetAsOf(anyOf)[public],
    ReadSharedExamplesApiV1PublicShareTokenExamplesGetAsOfVariant1(DateTime)[public],
    ReadSharedExamplesApiV1PublicShareTokenExamplesGetAsOfVariant2(string)[public],
  ReadSharedExamplesApiV1PublicShareTokenExamplesGetMetadata(string)[public],
  ReadSharedExamplesApiV1PublicShareTokenExamplesGetOffset(int)[public],
  ReadSharedExamplesApiV1PublicShareTokenExamplesGetLimit(int)[public],
  ReadSharedExamplesApiV1PublicShareTokenExamplesGetSelect(array)[public],
    ExampleSelect(ref)[public],
  ReadSharedExamplesApiV1PublicShareTokenExamplesGetFilter(string)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetShareToken(string)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetId(array)[public],
    ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetIdItem(string)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetName(string)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetNameContains(string)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetDatasetVersion(string)[public],
  SessionSortableColumns(ref)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetSortByDesc(bool)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetSortByFeedbackKey(string)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetOffset(int)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetLimit(int)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetFacets(bool)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetAccept(string)[public],
  ReadSharedDatasetTracerSessionsBulkApiV1PublicDatasetsSessionsBulkGetShareTokens(array)[public],
    ReadSharedDatasetTracerSessionsBulkApiV1PublicDatasetsSessionsBulkGetShareTokensItem(string)[public],
  ReadSharedDatasetExamplesWithRunsApiV1PublicShareTokenExamplesRunsPostShareToken(string)[public],
  ReadSharedDeltaApiV1PublicShareTokenDatasetsRunsDeltaPostShareToken(string)[public],
  QuerySharedDatasetRunsApiV1PublicShareTokenDatasetsRunsQueryPostShareToken(string)[public],
  GenerateQueryForSharedDatasetRunsApiV1PublicShareTokenDatasetsRunsGenerateQueryPostShareToken(string)[public],
  StatsSharedDatasetRunsApiV1PublicShareTokenDatasetsRunsStatsPostShareToken(string)[public],
  ReadSharedDatasetRunApiV1PublicShareTokenDatasetsRunsRunIdGetRunId(string)[public],
  ReadSharedDatasetRunApiV1PublicShareTokenDatasetsRunsRunIdGetShareToken(string)[public],
  ReadSharedDatasetRunApiV1PublicShareTokenDatasetsRunsRunIdGetExcludeS3StoredAttributes(bool)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetShareToken(string)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetRun(array)[public],
    ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetRunItem(string)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetKey(array)[public],
    ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetKeyItem(string)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetSession(array)[public],
    ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetSessionItem(string)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetSource(array)[public],
    SourceType(ref)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetLimit(int)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetOffset(int)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetUser(array)[public],
    ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetUserItem(string)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetHasComment(bool)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetHasScore(bool)[public],
  FeedbackLevel(ref)[public],
  ReadSharedComparativeExperimentsApiV1PublicShareTokenDatasetsComparativeGetShareToken(string)[public],
  ReadSharedComparativeExperimentsApiV1PublicShareTokenDatasetsComparativeGetName(string)[public],
  ReadSharedComparativeExperimentsApiV1PublicShareTokenDatasetsComparativeGetNameContains(string)[public],
  ReadSharedComparativeExperimentsApiV1PublicShareTokenDatasetsComparativeGetOffset(int)[public],
  ReadSharedComparativeExperimentsApiV1PublicShareTokenDatasetsComparativeGetLimit(int)[public],
  SortByComparativeExperimentColumn(ref)[public],
  ReadSharedComparativeExperimentsApiV1PublicShareTokenDatasetsComparativeGetSortByDesc(bool)[public],
  GetMessageJsonSchemaApiV1PublicSchemasVersionMessageJsonGetVersion(string)[public],
  GetToolDefJsonSchemaApiV1PublicSchemasVersionTooldefJsonGetVersion(string)[public],
  GetAnnotationQueuesApiV1AnnotationQueuesGetIds(array)[annotation-queues],
    GetAnnotationQueuesApiV1AnnotationQueuesGetIdsItem(string)[annotation-queues],
  GetAnnotationQueuesApiV1AnnotationQueuesGetName(string)[annotation-queues],
  GetAnnotationQueuesApiV1AnnotationQueuesGetNameContains(string)[annotation-queues],
  GetAnnotationQueuesApiV1AnnotationQueuesGetOffset(int)[annotation-queues],
  GetAnnotationQueuesApiV1AnnotationQueuesGetLimit(int)[annotation-queues],
  GetAnnotationQueuesApiV1AnnotationQueuesGetTagValueId(array)[annotation-queues],
    GetAnnotationQueuesApiV1AnnotationQueuesGetTagValueIdItem(string)[annotation-queues],
  GetAnnotationQueuesApiV1AnnotationQueuesGetDatasetId(string)[annotation-queues],
  DeleteAnnotationQueueApiV1AnnotationQueuesQueueIdDeleteQueueId(string)[annotation-queues],
  UpdateAnnotationQueueApiV1AnnotationQueuesQueueIdPatchQueueId(string)[annotation-queues],
  GetAnnotationQueueApiV1AnnotationQueuesQueueIdGetQueueId(string)[annotation-queues],
  AddRunsToAnnotationQueueApiV1AnnotationQueuesQueueIdRunsPostQueueId(string)[annotation-queues],
  GetRunsFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsGetQueueId(string)[annotation-queues],
  GetRunsFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsGetOffset(int)[annotation-queues],
  GetRunsFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsGetLimit(int)[annotation-queues],
  GetRunsFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsGetArchived(bool)[annotation-queues],
  GetRunsFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsGetIncludeStats(bool)[annotation-queues],
  ExportAnnotationQueueArchivedRunsApiV1AnnotationQueuesQueueIdExportPostQueueId(string)[annotation-queues],
  GetRunFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunIndexGetQueueId(string)[annotation-queues],
  GetRunFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunIndexGetIndex(int)[annotation-queues],
  GetAnnotationQueuesForRunApiV1AnnotationQueuesRunIdQueuesGetRunId(string)[annotation-queues],
  UpdateRunInAnnotationQueueApiV1AnnotationQueuesQueueIdRunsQueueRunIdPatchQueueId(string)[annotation-queues],
  UpdateRunInAnnotationQueueApiV1AnnotationQueuesQueueIdRunsQueueRunIdPatchQueueRunId(string)[annotation-queues],
  DeleteRunFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsQueueRunIdDeleteQueueId(string)[annotation-queues],
  DeleteRunFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsQueueRunIdDeleteQueueRunId(string)[annotation-queues],
  DeleteRunsFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsDeletePostQueueId(string)[annotation-queues],
  GetTotalSizeFromAnnotationQueueApiV1AnnotationQueuesQueueIdTotalSizeGetQueueId(string)[annotation-queues],
  GetTotalArchivedFromAnnotationQueueApiV1AnnotationQueuesQueueIdTotalArchivedGetQueueId(string)[annotation-queues],
  GetTotalArchivedFromAnnotationQueueApiV1AnnotationQueuesQueueIdTotalArchivedGetStartTime(DateTime)[annotation-queues],
  GetTotalArchivedFromAnnotationQueueApiV1AnnotationQueuesQueueIdTotalArchivedGetEndTime(DateTime)[annotation-queues],
  GetSizeFromAnnotationQueueApiV1AnnotationQueuesQueueIdSizeGetQueueId(string)[annotation-queues],
  CreateIdentityAnnotationQueueRunStatusApiV1AnnotationQueuesStatusAnnotationQueueRunIdPostAnnotationQueueRunId(string)[annotation-queues],
  GetBulkExportApiV1BulkExportsBulkExportIdGetBulkExportId(string)[bulk-exports],
  CancelBulkExportApiV1BulkExportsBulkExportIdPatchBulkExportId(string)[bulk-exports],
  GetBulkExportDestinationApiV1BulkExportsDestinationsDestinationIdGetDestinationId(string)[bulk-exports],
  GetBulkExportRunsApiV1BulkExportsBulkExportIdRunsGetBulkExportId(string)[bulk-exports],
  GetBulkExportRunApiV1BulkExportsBulkExportIdRunsRunIdGetBulkExportId(string)[bulk-exports],
  GetBulkExportRunApiV1BulkExportsBulkExportIdRunsRunIdGetRunId(string)[bulk-exports],
  ListTenantsApiV1TenantsGetSkipCreate(bool)[tenant],
  ListTenantsApiV1TenantsGetIncludeDeleted(bool)[tenant],
  ListFeedbackConfigsEndpointApiV1FeedbackConfigsGetKey(array)[feedback-configs],
    ListFeedbackConfigsEndpointApiV1FeedbackConfigsGetKeyItem(string)[feedback-configs],
  ListFeedbackConfigsEndpointApiV1FeedbackConfigsGetReadAfterWrite(bool)[feedback-configs],
  UpdateModelPriceApiV1ModelPriceMapIdPutId(string)[model-price-map],
  DeleteModelPriceApiV1ModelPriceMapIdDeleteId(string)[model-price-map],
  DeleteUsageLimitApiV1UsageLimitsUsageLimitIdDeleteUsageLimitId(string)[usage-limits],
  ListWorkspacesApiV1WorkspacesGetIncludeDeleted(bool)[workspaces],
  PatchWorkspaceApiV1WorkspacesWorkspaceIdPatchWorkspaceId(string)[workspaces],
  DeleteWorkspaceApiV1WorkspacesWorkspaceIdDeleteWorkspaceId(string)[workspaces],
  DeletePendingWorkspaceInviteApiV1WorkspacesPendingIdDeleteId(string)[workspaces],
  ClaimPendingWorkspaceInviteApiV1WorkspacesPendingWorkspaceIdClaimPostWorkspaceId(string)[workspaces],
  GetCurrentWorkspaceStatsApiV1WorkspacesCurrentStatsGetTagValueId(array)[workspaces],
    GetCurrentWorkspaceStatsApiV1WorkspacesCurrentStatsGetTagValueIdItem(string)[workspaces],
  GetCurrentActiveWorkspaceMembersApiV1WorkspacesCurrentMembersActiveGetLimit(int)[workspaces],
  GetCurrentActiveWorkspaceMembersApiV1WorkspacesCurrentMembersActiveGetOffset(int)[workspaces],
  GetCurrentActiveWorkspaceMembersApiV1WorkspacesCurrentMembersActiveGetEmails(array)[workspaces],
    GetCurrentActiveWorkspaceMembersApiV1WorkspacesCurrentMembersActiveGetEmailsItem(string)[workspaces],
  GetCurrentActiveWorkspaceMembersApiV1WorkspacesCurrentMembersActiveGetLsUserIds(array)[workspaces],
    GetCurrentActiveWorkspaceMembersApiV1WorkspacesCurrentMembersActiveGetLsUserIdsItem(string)[workspaces],
  GetCurrentActiveWorkspaceMembersApiV1WorkspacesCurrentMembersActiveGetUserIds(array)[workspaces],
    GetCurrentActiveWorkspaceMembersApiV1WorkspacesCurrentMembersActiveGetUserIdsItem(string)[workspaces],
  GetCurrentPendingWorkspaceMembersApiV1WorkspacesCurrentMembersPendingGetLimit(int)[workspaces],
  GetCurrentPendingWorkspaceMembersApiV1WorkspacesCurrentMembersPendingGetOffset(int)[workspaces],
  GetCurrentPendingWorkspaceMembersApiV1WorkspacesCurrentMembersPendingGetEmails(array)[workspaces],
    GetCurrentPendingWorkspaceMembersApiV1WorkspacesCurrentMembersPendingGetEmailsItem(string)[workspaces],
  GetSharedTokensApiV1WorkspacesCurrentSharedGetLimit(int)[workspaces],
  GetSharedTokensApiV1WorkspacesCurrentSharedGetOffset(int)[workspaces],
  DeleteCurrentWorkspaceMemberApiV1WorkspacesCurrentMembersIdentityIdDeleteIdentityId(string)[workspaces],
  PatchCurrentWorkspaceMemberApiV1WorkspacesCurrentMembersIdentityIdPatchIdentityId(string)[workspaces],
  DeleteCurrentWorkspacePendingMemberApiV1WorkspacesCurrentMembersIdentityIdPendingDeleteIdentityId(string)[workspaces],
  UpdateTagKeyApiV1WorkspacesCurrentTagKeysTagKeyIdPatchTagKeyId(string)[workspaces],
  GetTagKeyApiV1WorkspacesCurrentTagKeysTagKeyIdGetTagKeyId(string)[workspaces],
  DeleteTagKeyApiV1WorkspacesCurrentTagKeysTagKeyIdDeleteTagKeyId(string)[workspaces],
  CreateTagValueApiV1WorkspacesCurrentTagKeysTagKeyIdTagValuesPostTagKeyId(string)[workspaces],
  ListTagValuesApiV1WorkspacesCurrentTagKeysTagKeyIdTagValuesGetTagKeyId(string)[workspaces],
  GetTagValueApiV1WorkspacesCurrentTagKeysTagKeyIdTagValuesTagValueIdGetTagKeyId(string)[workspaces],
  GetTagValueApiV1WorkspacesCurrentTagKeysTagKeyIdTagValuesTagValueIdGetTagValueId(string)[workspaces],
  UpdateTagValueApiV1WorkspacesCurrentTagKeysTagKeyIdTagValuesTagValueIdPatchTagKeyId(string)[workspaces],
  UpdateTagValueApiV1WorkspacesCurrentTagKeysTagKeyIdTagValuesTagValueIdPatchTagValueId(string)[workspaces],
  DeleteTagValueApiV1WorkspacesCurrentTagKeysTagKeyIdTagValuesTagValueIdDeleteTagKeyId(string)[workspaces],
  DeleteTagValueApiV1WorkspacesCurrentTagKeysTagKeyIdTagValuesTagValueIdDeleteTagValueId(string)[workspaces],
  ListTaggingsApiV1WorkspacesCurrentTaggingsGetTagValueId(string)[workspaces],
  DeleteTaggingApiV1WorkspacesCurrentTaggingsTaggingIdDeleteTaggingId(string)[workspaces],
  ResourceType(ref)[workspaces],
  ListTagsForResourceApiV1WorkspacesCurrentTagsResourceGetResourceId(string)[workspaces],
  UpdatePlaygroundSettingsApiV1PlaygroundSettingsPlaygroundSettingsIdPatchPlaygroundSettingsId(string)[playground-settings],
  DeletePlaygroundSettingsApiV1PlaygroundSettingsPlaygroundSettingsIdDeletePlaygroundSettingsId(string)[playground-settings],
  DeleteServiceAccountApiV1ServiceAccountsServiceAccountIdDeleteServiceAccountId(string)[service-accounts],
  ReadSectionsApiV1ChartsSectionGetLimit(int)[charts],
  ReadSectionsApiV1ChartsSectionGetOffset(int)[charts],
  ReadSectionsApiV1ChartsSectionGetTitleContains(string)[charts],
  ReadSectionsApiV1ChartsSectionGetIds(array)[charts],
    ReadSectionsApiV1ChartsSectionGetIdsItem(string)[charts],
  ReadSectionsApiV1ChartsSectionGetSortBy(string)[charts],
  ReadSectionsApiV1ChartsSectionGetSortByDesc(bool)[charts],
  ReadSectionsApiV1ChartsSectionGetTagValueId(array)[charts],
    ReadSectionsApiV1ChartsSectionGetTagValueIdItem(string)[charts],
  ReadSingleChartApiV1ChartsChartIdPostChartId(string)[charts],
  UpdateChartApiV1ChartsChartIdPatchChartId(string)[charts],
  DeleteChartApiV1ChartsChartIdDeleteChartId(string)[charts],
  ReadSingleSectionApiV1ChartsSectionSectionIdPostSectionId(string)[charts],
  UpdateSectionApiV1ChartsSectionSectionIdPatchSectionId(string)[charts],
  DeleteSectionApiV1ChartsSectionSectionIdDeleteSectionId(string)[charts],
  OrgReadSectionsApiV1OrgChartsSectionGetLimit(int)[charts],
  OrgReadSectionsApiV1OrgChartsSectionGetOffset(int)[charts],
  OrgReadSectionsApiV1OrgChartsSectionGetTitleContains(string)[charts],
  OrgReadSectionsApiV1OrgChartsSectionGetIds(array)[charts],
    OrgReadSectionsApiV1OrgChartsSectionGetIdsItem(string)[charts],
  OrgReadSectionsApiV1OrgChartsSectionGetSortBy(string)[charts],
  OrgReadSectionsApiV1OrgChartsSectionGetSortByDesc(bool)[charts],
  OrgReadSectionsApiV1OrgChartsSectionGetTagValueId(array)[charts],
    OrgReadSectionsApiV1OrgChartsSectionGetTagValueIdItem(string)[charts],
  OrgReadSingleChartApiV1OrgChartsChartIdPostChartId(string)[charts],
  OrgUpdateChartApiV1OrgChartsChartIdPatchChartId(string)[charts],
  OrgDeleteChartApiV1OrgChartsChartIdDeleteChartId(string)[charts],
  OrgReadSingleSectionApiV1OrgChartsSectionSectionIdPostSectionId(string)[charts],
  OrgUpdateSectionApiV1OrgChartsSectionSectionIdPatchSectionId(string)[charts],
  OrgDeleteSectionApiV1OrgChartsSectionSectionIdDeleteSectionId(string)[charts],
  ListReposApiV1ReposGetWithLatestManifest(bool)[repos],
  ListReposApiV1ReposGetLimit(int)[repos],
  ListReposApiV1ReposGetOffset(int)[repos],
  ListReposApiV1ReposGetTenantHandle(string)[repos],
  ListReposApiV1ReposGetTenantId(string)[repos],
  ListReposApiV1ReposGetQuery(string)[repos],
  ListReposApiV1ReposGetHasCommits(bool)[repos],
  ListReposApiV1ReposGetTags(array)[repos],
    ListReposApiV1ReposGetTagsItem(string)[repos],
  ListReposApiV1ReposGetIsArchived(enum)[repos],
  ListReposApiV1ReposGetIsPublic(enum)[repos],
  ListReposApiV1ReposGetUpstreamRepoOwner(string)[repos],
  ListReposApiV1ReposGetUpstreamRepoHandle(string)[repos],
  ListReposApiV1ReposGetTagValueId(array)[repos],
    ListReposApiV1ReposGetTagValueIdItem(string)[repos],
  ListReposApiV1ReposGetSortField(string)[repos],
  ListReposApiV1ReposGetSortDirection(anyOf)[repos],
    ListReposApiV1ReposGetSortDirectionVariant1(enum)[repos],
    ListReposApiV1ReposGetSortDirectionVariant2(enum)[repos],
  GetRepoApiV1ReposOwnerRepoGetOwner(string)[repos],
  GetRepoApiV1ReposOwnerRepoGetRepo(string)[repos],
  UpdateRepoApiV1ReposOwnerRepoPatchOwner(string)[repos],
  UpdateRepoApiV1ReposOwnerRepoPatchRepo(string)[repos],
  DeleteRepoApiV1ReposOwnerRepoDeleteOwner(string)[repos],
  DeleteRepoApiV1ReposOwnerRepoDeleteRepo(string)[repos],
  ForkRepoApiV1ReposOwnerRepoForkPostOwner(string)[repos],
  ForkRepoApiV1ReposOwnerRepoForkPostRepo(string)[repos],
  ListRepoTagsApiV1ReposTagsGetLimit(int)[repos],
  ListRepoTagsApiV1ReposTagsGetOffset(int)[repos],
  ListRepoTagsApiV1ReposTagsGetTenantHandle(string)[repos],
  ListRepoTagsApiV1ReposTagsGetTenantId(string)[repos],
  ListRepoTagsApiV1ReposTagsGetQuery(string)[repos],
  ListRepoTagsApiV1ReposTagsGetHasCommits(bool)[repos],
  ListRepoTagsApiV1ReposTagsGetTags(array)[repos],
    ListRepoTagsApiV1ReposTagsGetTagsItem(string)[repos],
  ListRepoTagsApiV1ReposTagsGetIsArchived(enum)[repos],
  ListRepoTagsApiV1ReposTagsGetIsPublic(enum)[repos],
  ListRepoTagsApiV1ReposTagsGetUpstreamRepoOwner(string)[repos],
  ListRepoTagsApiV1ReposTagsGetUpstreamRepoHandle(string)[repos],
  ListRepoTagsApiV1ReposTagsGetTagValueId(array)[repos],
    ListRepoTagsApiV1ReposTagsGetTagValueIdItem(string)[repos],
  LikeRepoApiV1LikesOwnerRepoPostOwner(string)[likes],
  LikeRepoApiV1LikesOwnerRepoPostRepo(string)[likes],
  ListCommitsApiV1CommitsOwnerRepoGetOwner(string)[commits],
  ListCommitsApiV1CommitsOwnerRepoGetRepo(string)[commits],
  ListCommitsApiV1CommitsOwnerRepoGetLimit(int)[commits],
  ListCommitsApiV1CommitsOwnerRepoGetOffset(int)[commits],
  CreateCommitApiV1CommitsOwnerRepoPostOwner(string)[commits],
  CreateCommitApiV1CommitsOwnerRepoPostRepo(string)[commits],
  GetCommitApiV1CommitsOwnerRepoCommitGetOwner(string)[commits],
  GetCommitApiV1CommitsOwnerRepoCommitGetRepo(string)[commits],
  GetCommitApiV1CommitsOwnerRepoCommitGetCommit(string)[commits],
  GetCommitApiV1CommitsOwnerRepoCommitGetGetExamples(bool)[commits],
  GetCommitApiV1CommitsOwnerRepoCommitGetIsView(bool)[commits],
  GetCommitApiV1CommitsOwnerRepoCommitGetIncludeModel(bool)[commits],
  CreateCommentApiV1CommentsOwnerRepoPostOwner(string)[comments],
  CreateCommentApiV1CommentsOwnerRepoPostRepo(string)[comments],
  GetCommentsApiV1CommentsOwnerRepoGetOwner(string)[comments],
  GetCommentsApiV1CommentsOwnerRepoGetRepo(string)[comments],
  GetCommentsApiV1CommentsOwnerRepoGetLimit(int)[comments],
  GetCommentsApiV1CommentsOwnerRepoGetOffset(int)[comments],
  GetSubCommentsApiV1CommentsOwnerRepoParentCommentIdGetOwner(string)[comments],
  GetSubCommentsApiV1CommentsOwnerRepoParentCommentIdGetRepo(string)[comments],
  GetSubCommentsApiV1CommentsOwnerRepoParentCommentIdGetParentCommentId(string)[comments],
  GetSubCommentsApiV1CommentsOwnerRepoParentCommentIdGetLimit(int)[comments],
  GetSubCommentsApiV1CommentsOwnerRepoParentCommentIdGetOffset(int)[comments],
  CreateSubCommentApiV1CommentsOwnerRepoParentCommentIdPostOwner(string)[comments],
  CreateSubCommentApiV1CommentsOwnerRepoParentCommentIdPostRepo(string)[comments],
  CreateSubCommentApiV1CommentsOwnerRepoParentCommentIdPostParentCommentId(string)[comments],
  LikeCommentApiV1CommentsOwnerRepoParentCommentIdLikePostOwner(string)[comments],
  LikeCommentApiV1CommentsOwnerRepoParentCommentIdLikePostRepo(string)[comments],
  LikeCommentApiV1CommentsOwnerRepoParentCommentIdLikePostParentCommentId(string)[comments],
  UnlikeCommentApiV1CommentsOwnerRepoParentCommentIdLikeDeleteOwner(string)[comments],
  UnlikeCommentApiV1CommentsOwnerRepoParentCommentIdLikeDeleteRepo(string)[comments],
  UnlikeCommentApiV1CommentsOwnerRepoParentCommentIdLikeDeleteParentCommentId(string)[comments],
  GetTagsApiV1ReposOwnerRepoTagsGetRepo(string)[tags],
  GetTagsApiV1ReposOwnerRepoTagsGetOwner(string)[tags],
  CreateTagApiV1ReposOwnerRepoTagsPostRepo(string)[tags],
  CreateTagApiV1ReposOwnerRepoTagsPostOwner(string)[tags],
  GetTagApiV1ReposOwnerRepoTagsTagNameGetRepo(string)[tags],
  GetTagApiV1ReposOwnerRepoTagsTagNameGetTagName(string)[tags],
  GetTagApiV1ReposOwnerRepoTagsTagNameGetOwner(string)[tags],
  UpdateTagApiV1ReposOwnerRepoTagsTagNamePatchRepo(string)[tags],
  UpdateTagApiV1ReposOwnerRepoTagsTagNamePatchTagName(string)[tags],
  UpdateTagApiV1ReposOwnerRepoTagsTagNamePatchOwner(string)[tags],
  DeleteTagApiV1ReposOwnerRepoTagsTagNameDeleteRepo(string)[tags],
  DeleteTagApiV1ReposOwnerRepoTagsTagNameDeleteTagName(string)[tags],
  DeleteTagApiV1ReposOwnerRepoTagsTagNameDeleteOwner(string)[tags],
  ListJobsApiV1ReposOwnerRepoOptimizationJobsGetRepo(string)[optimization-jobs],
  ListJobsApiV1ReposOwnerRepoOptimizationJobsGetOwner(string)[optimization-jobs],
  CreateJobApiV1ReposOwnerRepoOptimizationJobsPostRepo(string)[optimization-jobs],
  CreateJobApiV1ReposOwnerRepoOptimizationJobsPostOwner(string)[optimization-jobs],
  GetJobApiV1ReposOwnerRepoOptimizationJobsJobIdGetJobId(string)[optimization-jobs],
  GetJobApiV1ReposOwnerRepoOptimizationJobsJobIdGetOwner(string)[optimization-jobs],
  GetJobApiV1ReposOwnerRepoOptimizationJobsJobIdGetRepo(string)[optimization-jobs],
  UpdateJobApiV1ReposOwnerRepoOptimizationJobsJobIdPatchJobId(string)[optimization-jobs],
  UpdateJobApiV1ReposOwnerRepoOptimizationJobsJobIdPatchOwner(string)[optimization-jobs],
  UpdateJobApiV1ReposOwnerRepoOptimizationJobsJobIdPatchRepo(string)[optimization-jobs],
  DeleteJobApiV1ReposOwnerRepoOptimizationJobsJobIdDeleteJobId(string)[optimization-jobs],
  DeleteJobApiV1ReposOwnerRepoOptimizationJobsJobIdDeleteOwner(string)[optimization-jobs],
  DeleteJobApiV1ReposOwnerRepoOptimizationJobsJobIdDeleteRepo(string)[optimization-jobs],
  ListJobLogsApiV1ReposOwnerRepoOptimizationJobsJobIdLogsGetJobId(string)[optimization-jobs],
  ListJobLogsApiV1ReposOwnerRepoOptimizationJobsJobIdLogsGetOwner(string)[optimization-jobs],
  ListJobLogsApiV1ReposOwnerRepoOptimizationJobsJobIdLogsGetRepo(string)[optimization-jobs],
  CreateLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsPostJobId(string)[optimization-jobs],
  CreateLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsPostOwner(string)[optimization-jobs],
  CreateLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsPostRepo(string)[optimization-jobs],
  GetLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsLogIdGetLogId(string)[optimization-jobs],
  GetLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsLogIdGetOwner(string)[optimization-jobs],
  GetLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsLogIdGetRepo(string)[optimization-jobs],
  GetLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsLogIdGetJobId(string)[optimization-jobs],
  DeleteLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsLogIdDeleteLogId(string)[optimization-jobs],
  DeleteLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsLogIdDeleteOwner(string)[optimization-jobs],
  DeleteLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsLogIdDeleteRepo(string)[optimization-jobs],
  DeleteLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsLogIdDeleteJobId(string)[optimization-jobs],
  Body(class)[runs],
  CustomChartsSection(ref)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  TracerSession(ref)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  TracerSessionWithoutVirtualFields(ref)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  DeleteTracerSessionApiV1SessionsSessionIdDeleteResponse(class)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  ReadTracerSessionsApiV1SessionsGetResponse(array)[tracer-sessions],
    TracerSession(ref)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  TracerSessionWithoutVirtualFields(ref)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  DeleteTracerSessionsApiV1SessionsDeleteResponse(class)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  RootModelDictStrListStr(ref)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  ReadFilterViewsApiV1SessionsSessionIdViewsGetResponse(array)[tracer-sessions],
    FilterView(ref)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  FilterView(ref)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  FilterView(ref)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  FilterView(ref)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  DeleteFilterViewApiV1SessionsSessionIdViewsViewIdDeleteResponse(class)[tracer-sessions],
  HTTPValidationError(ref)[tracer-sessions],
  ListOrganizationsApiV1OrgsGetResponse(array)[orgs],
    OrganizationPGSchemaSlim(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  OrganizationPGSchemaSlim(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  StripeSetupIntentResponse(ref)[orgs],
  Organization(ref)[orgs],
  OrganizationInfo(ref)[orgs],
  OrganizationInfo(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  OrganizationBillingInfo(ref)[orgs],
  OrganizationDashboardSchema(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  OnPaymentMethodCreatedApiV1OrgsCurrentPaymentMethodPostResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  StripeBusinessInfoOutput(ref)[orgs],
  SetCompanyInfoApiV1OrgsCurrentBusinessInfoPostResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  ChangePaymentPlanApiV1OrgsCurrentPlanPostResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  ListOrganizationRolesApiV1OrgsCurrentRolesGetResponse(array)[orgs],
    Role(ref)[orgs],
  Role(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  Role(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  Role(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  ListPermissionsApiV1OrgsPermissionsGetResponse(array)[orgs],
    PermissionResponse(ref)[orgs],
  ListPendingOrganizationInvitesApiV1OrgsPendingGetResponse(array)[orgs],
    OrganizationPGSchemaSlim(ref)[orgs],
  OrganizationMembers(ref)[orgs],
  PendingIdentity(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  GetCurrentActiveOrgMembersApiV1OrgsCurrentMembersActiveGetResponse(array)[orgs],
    OrgMemberIdentity(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  GetCurrentPendingOrgMembersApiV1OrgsCurrentMembersPendingGetResponse(array)[orgs],
    OrgPendingIdentity(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  AddMembersToCurrentOrgBatchApiV1OrgsCurrentMembersBatchPostResponse(array)[orgs],
    PendingIdentity(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  AddBasicAuthMembersToCurrentOrgApiV1OrgsCurrentMembersBasicBatchPostResponse(array)[orgs],
    UserWithPassword(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  DeleteCurrentOrgPendingMemberApiV1OrgsCurrentMembersIdentityIdPendingDeleteResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  DeletePendingOrganizationInviteApiV1OrgsPendingOrganizationIdDeleteResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  Identity(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  RemoveMemberFromCurrentOrgApiV1OrgsCurrentMembersIdentityIdDeleteResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  UpdateCurrentOrgMemberApiV1OrgsCurrentMembersIdentityIdPatchResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  UpdateCurrentUserApiV1OrgsMembersBasicPatchResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  ListTtlSettingsApiV1OrgsTtlSettingsGetResponse(array)[orgs],
    TTLSettings(ref)[orgs],
  TTLSettings(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  GetCurrentSsoSettingsApiV1OrgsCurrentSsoSettingsGetResponse(array)[orgs],
    SSOProvider(ref)[orgs],
  SSOProvider(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  SSOProvider(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  SSOProvider(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  UpdateAllowedLoginMethodsApiV1OrgsCurrentLoginMethodsPatchResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  GetOrgUsageApiV1OrgsCurrentBillingUsageGetResponse(array)[orgs],
    OrgUsage(ref)[orgs],
  HTTPValidationError(ref)[orgs],
  GetCurrentUserLoginMethodsApiV1OrgsCurrentUserLoginMethodsGetResponse(array)[orgs],
    ProviderUserSlim(ref)[orgs],
  CreateStripeCheckoutSessionsEndpointApiV1OrgsCurrentStripeCheckoutSessionPostResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  ConfirmCheckoutSessionCompletionEndpointApiV1OrgsCurrentConfirmCheckoutSessionCompletionPostResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  CreateStripeAccountLinksEndpointApiV1OrgsCurrentStripeAccountLinksPostResponse(class)[orgs],
  HTTPValidationError(ref)[orgs],
  BasicAuthResponse(ref)[auth],
  OauthProviderCallbackApiV1OauthProviderCallbackGetResponse(class)[auth],
  HTTPValidationError(ref)[auth],
  OauthProviderLogoutApiV1OauthProviderLogoutGetResponse(class)[auth],
  HTTPValidationError(ref)[auth],
  OauthProviderAuthApiV1OauthProviderGetResponse(class)[auth],
  HTTPValidationError(ref)[auth],
  OauthProviderCurrentUserApiV1OauthProviderCurrentUserGetResponse(class)[auth],
  HTTPValidationError(ref)[auth],
  SendSsoEmailConfirmationApiV1SsoEmailVerificationSendPostResponse(class)[auth],
  HTTPValidationError(ref)[auth],
  SSOEmailVerificationStatusResponse(ref)[auth],
  HTTPValidationError(ref)[auth],
  ConfirmSsoUserEmailApiV1SsoEmailVerificationConfirmPostResponse(class)[auth],
  HTTPValidationError(ref)[auth],
  GetSsoSettingsApiV1SsoSettingsSsoLoginSlugGetResponse(array)[auth],
    SSOProviderSlim(ref)[auth],
  HTTPValidationError(ref)[auth],
  GetApiKeysApiV1ApiKeyGetResponse(array)[api-key],
    APIKeyGetResponse(ref)[api-key],
  APIKeyCreateResponse(ref)[api-key],
  HTTPValidationError(ref)[api-key],
  APIKeyGetResponse(ref)[api-key],
  HTTPValidationError(ref)[api-key],
  GetPersonalAccessTokensApiV1ApiKeyCurrentGetResponse(array)[api-key],
    APIKeyGetResponse(ref)[api-key],
  APIKeyCreateResponse(ref)[api-key],
  HTTPValidationError(ref)[api-key],
  APIKeyGetResponse(ref)[api-key],
  HTTPValidationError(ref)[api-key],
  CountExamplesApiV1ExamplesCountGetResponse(int)[examples],
  HTTPValidationError(ref)[examples],
  Example(ref)[examples],
  HTTPValidationError(ref)[examples],
  UpdateExampleApiV1ExamplesExampleIdPatchResponse(class)[examples],
  HTTPValidationError(ref)[examples],
  DeleteExampleApiV1ExamplesExampleIdDeleteResponse(class)[examples],
  HTTPValidationError(ref)[examples],
  ReadExamplesApiV1ExamplesGetResponse(array)[examples],
    Example(ref)[examples],
  HTTPValidationError(ref)[examples],
  Example(ref)[examples],
  DeleteExamplesApiV1ExamplesDeleteResponse(class)[examples],
  HTTPValidationError(ref)[examples],
  CreateExamplesApiV1ExamplesBulkPostResponse(class)[examples],
  LegacyUpdateExamplesApiV1ExamplesBulkPatchResponse(class)[examples],
  HTTPValidationError(ref)[examples],
  LegacyUploadExamplesApiV1ExamplesUploadDatasetIdPostResponse(array)[examples],
    Example(ref)[examples],
  HTTPValidationError(ref)[examples],
  ExampleValidationResult(ref)[examples],
  ValidateExamplesApiV1ExamplesValidateBulkPostResponse(array)[examples],
    ExampleValidationResult(ref)[examples],
  Dataset(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  DeleteDatasetApiV1DatasetsDatasetIdDeleteResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  DatasetSchemaForUpdate(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  ReadDatasetsApiV1DatasetsGetResponse(array)[datasets],
    Dataset(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  Dataset(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  Dataset(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  ExperimentResultsUploadResult(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  GetDatasetVersionsApiV1DatasetsDatasetIdVersionsGetResponse(array)[datasets],
    DatasetVersion(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  DatasetDiffInfo(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  DatasetVersion(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  DatasetVersion(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  DownloadDatasetOpenaiApiV1DatasetsDatasetIdOpenaiGetResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  DownloadDatasetOpenaiFtApiV1DatasetsDatasetIdOpenaiFtGetResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  DownloadDatasetCsvApiV1DatasetsDatasetIdCsvGetResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  DownloadDatasetJsonlApiV1DatasetsDatasetIdJsonlGetResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  ReadExamplesWithRunsApiV1DatasetsDatasetIdRunsPostResponse(anyOf)[datasets],
    ReadExamplesWithRunsApiV1DatasetsDatasetIdRunsPostResponseVariant1(array)[datasets],
      ExampleWithRuns(ref)[datasets],
    ReadExamplesWithRunsApiV1DatasetsDatasetIdRunsPostResponseVariant2(array)[datasets],
      ExampleWithRunsCH(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  GroupedExamplesWithRunsResponse(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  SessionFeedbackDelta(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  DatasetShareSchema(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  DatasetShareSchema(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  UnshareDatasetApiV1DatasetsDatasetIdShareDeleteResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  ReadComparativeExperimentsApiV1DatasetsDatasetIdComparativeGetResponse(array)[datasets],
    ComparativeExperiment(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  ComparativeExperimentBase(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  DeleteComparativeExperimentApiV1DatasetsComparativeComparativeExperimentIdDeleteResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  CloneDatasetApiV1DatasetsClonePostResponse(array)[datasets],
    Example(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  GetDatasetSplitsApiV1DatasetsDatasetIdSplitsGetResponse(array)[datasets],
    GetDatasetSplitsApiV1DatasetsDatasetIdSplitsGetResponseItem(string)[datasets],
  HTTPValidationError(ref)[datasets],
  UpdateDatasetSplitsApiV1DatasetsDatasetIdSplitsPutResponse(array)[datasets],
    UpdateDatasetSplitsApiV1DatasetsDatasetIdSplitsPutResponseItem(string)[datasets],
  HTTPValidationError(ref)[datasets],
  IndexApiV1DatasetsDatasetIdIndexPostResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  RemoveIndexApiV1DatasetsDatasetIdIndexDeleteResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  DatasetIndexInfo(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  SyncIndexApiV1DatasetsDatasetIdIndexSyncPostResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  SearchDatasetResponse(ref)[datasets],
  HTTPValidationError(ref)[datasets],
  GenerateApiV1DatasetsDatasetIdGeneratePostResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  DatasetHandlerApiV1DatasetsPlaygroundExperimentBatchPostResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  StreamDatasetHandlerApiV1DatasetsPlaygroundExperimentStreamPostResponse(class)[datasets],
  HTTPValidationError(ref)[datasets],
  ListRulesApiV1RunsRulesGetResponse(array)[run],
    RunRulesSchema(ref)[run],
  HTTPValidationError(ref)[run],
  RunRulesSchema(ref)[run],
  HTTPValidationError(ref)[run],
  RunRulesSchema(ref)[run],
  HTTPValidationError(ref)[run],
  DeleteRuleApiV1RunsRulesRuleIdDeleteResponse(class)[run],
  HTTPValidationError(ref)[run],
  ListRuleLogsApiV1RunsRulesRuleIdLogsGetResponse(array)[run],
    RuleLogSchema(ref)[run],
  HTTPValidationError(ref)[run],
  RuleLogSchema(ref)[run],
  HTTPValidationError(ref)[run],
  RunRulesSchema(ref)[run],
  HTTPValidationError(ref)[run],
  TriggerRulesApiV1RunsRulesTriggerPostResponse(class)[run],
  HTTPValidationError(ref)[run],
  RunSchema(ref)[run],
  HTTPValidationError(ref)[run],
  UpdateRunApiV1RunsRunIdPatchResponse(class)[run],
  HTTPValidationError(ref)[run],
  RunShareSchema(ref)[run],
  HTTPValidationError(ref)[run],
  RunShareSchema(ref)[run],
  HTTPValidationError(ref)[run],
  UnshareRunApiV1RunsRunIdShareDeleteResponse(class)[run],
  HTTPValidationError(ref)[run],
  ListRunsResponse(ref)[run],
  HTTPValidationError(ref)[run],
  ResponseBodyForRunsGenerateQuery(ref)[run],
  HTTPValidationError(ref)[run],
  StatsRunsApiV1RunsStatsPostResponse(anyOf)[run],
    RunStats(ref)[run],
    StatsRunsApiV1RunsStatsPostResponse2(class)[run],
      RunStats(ref)[run],
  HTTPValidationError(ref)[run],
  MonitorResponse(ref)[run],
  HTTPValidationError(ref)[run],
  CreateRunApiV1RunsPostResponse(class)[run],
  BatchIngestRunsApiV1RunsBatchPostResponse(class)[run],
  MultipartIngestRunsApiV1RunsMultipartPostResponse(class)[run],
  GroupRunsApiV1RunsGroupPostResponse(class)[run],
  HTTPValidationError(ref)[run],
  RunGroupStats(ref)[run],
  HTTPValidationError(ref)[run],
  DeleteRunsApiV1RunsDeletePostResponse(class)[run],
  HTTPValidationError(ref)[run],
  FeedbackSchema(ref)[feedback],
  HTTPValidationError(ref)[feedback],
  FeedbackSchema(ref)[feedback],
  HTTPValidationError(ref)[feedback],
  DeleteFeedbackApiV1FeedbackFeedbackIdDeleteResponse(class)[feedback],
  HTTPValidationError(ref)[feedback],
  ReadFeedbacksApiV1FeedbackGetResponse(array)[feedback],
    FeedbackSchema(ref)[feedback],
  HTTPValidationError(ref)[feedback],
  FeedbackSchema(ref)[feedback],
  HTTPValidationError(ref)[feedback],
  FeedbackSchema(ref)[feedback],
  HTTPValidationError(ref)[feedback],
  CreateFeedbackIngestTokenApiV1FeedbackTokensPostResponse(anyOf)[feedback],
    FeedbackIngestTokenSchema(ref)[feedback],
    CreateFeedbackIngestTokenApiV1FeedbackTokensPostResponseVariant2(array)[feedback],
      FeedbackIngestTokenSchema(ref)[feedback],
  HTTPValidationError(ref)[feedback],
  ListFeedbackIngestTokensApiV1FeedbackTokensGetResponse(array)[feedback],
    FeedbackIngestTokenSchema(ref)[feedback],
  HTTPValidationError(ref)[feedback],
  CreateFeedbackWithTokenGetApiV1FeedbackTokensTokenGetResponse(class)[feedback],
  HTTPValidationError(ref)[feedback],
  CreateFeedbackWithTokenPostApiV1FeedbackTokensTokenPostResponse(class)[feedback],
  HTTPValidationError(ref)[feedback],
  RunPublicSchema(ref)[public],
  HTTPValidationError(ref)[public],
  RunPublicSchema(ref)[public],
  HTTPValidationError(ref)[public],
  ListPublicRunsResponse(ref)[public],
  HTTPValidationError(ref)[public],
  ReadSharedFeedbacksApiV1PublicShareTokenFeedbacksGetResponse(array)[public],
    FeedbackSchema(ref)[public],
  HTTPValidationError(ref)[public],
  DatasetPublicSchema(ref)[public],
  HTTPValidationError(ref)[public],
  CountSharedExamplesApiV1PublicShareTokenExamplesCountGetResponse(int)[public],
  HTTPValidationError(ref)[public],
  ReadSharedExamplesApiV1PublicShareTokenExamplesGetResponse(array)[public],
    Example(ref)[public],
  HTTPValidationError(ref)[public],
  ReadSharedDatasetTracerSessionsApiV1PublicShareTokenDatasetsSessionsGetResponse(array)[public],
    TracerSession(ref)[public],
  HTTPValidationError(ref)[public],
  ReadSharedDatasetTracerSessionsBulkApiV1PublicDatasetsSessionsBulkGetResponse(array)[public],
    TracerSession(ref)[public],
  HTTPValidationError(ref)[public],
  ReadSharedDatasetExamplesWithRunsApiV1PublicShareTokenExamplesRunsPostResponse(anyOf)[public],
    ReadSharedDatasetExamplesWithRunsApiV1PublicShareTokenExamplesRunsPostResponseVariant1(array)[public],
      PublicExampleWithRuns(ref)[public],
    ReadSharedDatasetExamplesWithRunsApiV1PublicShareTokenExamplesRunsPostResponseVariant2(array)[public],
      ExampleWithRunsCH(ref)[public],
  HTTPValidationError(ref)[public],
  SessionFeedbackDelta(ref)[public],
  HTTPValidationError(ref)[public],
  ListPublicDatasetRunsResponse(ref)[public],
  HTTPValidationError(ref)[public],
  ResponseBodyForRunsGenerateQuery(ref)[public],
  HTTPValidationError(ref)[public],
  RunStats(ref)[public],
  HTTPValidationError(ref)[public],
  RunPublicDatasetSchema(ref)[public],
  HTTPValidationError(ref)[public],
  ReadSharedDatasetFeedbackApiV1PublicShareTokenDatasetsFeedbackGetResponse(array)[public],
    FeedbackSchema(ref)[public],
  HTTPValidationError(ref)[public],
  ReadSharedComparativeExperimentsApiV1PublicShareTokenDatasetsComparativeGetResponse(array)[public],
    PublicComparativeExperiment(ref)[public],
  HTTPValidationError(ref)[public],
  GetMessageJsonSchemaApiV1PublicSchemasVersionMessageJsonGetResponse(class)[public],
  HTTPValidationError(ref)[public],
  GetToolDefJsonSchemaApiV1PublicSchemasVersionTooldefJsonGetResponse(class)[public],
  HTTPValidationError(ref)[public],
  GetAnnotationQueuesApiV1AnnotationQueuesGetResponse(array)[annotation-queues],
    AnnotationQueueSchemaWithSize(ref)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  AnnotationQueueSchema(ref)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  PopulateAnnotationQueueApiV1AnnotationQueuesPopulatePostResponse(class)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  DeleteAnnotationQueueApiV1AnnotationQueuesQueueIdDeleteResponse(class)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  UpdateAnnotationQueueApiV1AnnotationQueuesQueueIdPatchResponse(class)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  AnnotationQueueSchemaWithRubric(ref)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  AddRunsToAnnotationQueueApiV1AnnotationQueuesQueueIdRunsPostResponse(array)[annotation-queues],
    AnnotationQueueRunSchema(ref)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  GetRunsFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsGetResponse(array)[annotation-queues],
    RunSchemaWithAnnotationQueueInfo(ref)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  ExportAnnotationQueueArchivedRunsApiV1AnnotationQueuesQueueIdExportPostResponse(class)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  RunSchemaWithAnnotationQueueInfo(ref)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  GetAnnotationQueuesForRunApiV1AnnotationQueuesRunIdQueuesGetResponse(array)[annotation-queues],
    AnnotationQueueSchema(ref)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  UpdateRunInAnnotationQueueApiV1AnnotationQueuesQueueIdRunsQueueRunIdPatchResponse(class)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  DeleteRunFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsQueueRunIdDeleteResponse(class)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  DeleteRunsFromAnnotationQueueApiV1AnnotationQueuesQueueIdRunsDeletePostResponse(class)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  AnnotationQueueSizeSchema(ref)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  AnnotationQueueSizeSchema(ref)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  AnnotationQueueSizeSchema(ref)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  CreateIdentityAnnotationQueueRunStatusApiV1AnnotationQueuesStatusAnnotationQueueRunIdPostResponse(class)[annotation-queues],
  HTTPValidationError(ref)[annotation-queues],
  ExecuteApiV1AceExecutePostResponse(class)[ace],
  HTTPValidationError(ref)[ace],
  GetBulkExportsApiV1BulkExportsGetResponse(array)[bulk-exports],
    BulkExport(ref)[bulk-exports],
  BulkExport(ref)[bulk-exports],
  HTTPValidationError(ref)[bulk-exports],
  GetBulkExportDestinationsApiV1BulkExportsDestinationsGetResponse(array)[bulk-exports],
    BulkExportDestination(ref)[bulk-exports],
  BulkExportDestination(ref)[bulk-exports],
  HTTPValidationError(ref)[bulk-exports],
  BulkExport(ref)[bulk-exports],
  HTTPValidationError(ref)[bulk-exports],
  BulkExport(ref)[bulk-exports],
  HTTPValidationError(ref)[bulk-exports],
  BulkExportDestination(ref)[bulk-exports],
  HTTPValidationError(ref)[bulk-exports],
  GetBulkExportRunsApiV1BulkExportsBulkExportIdRunsGetResponse(array)[bulk-exports],
    BulkExportRun(ref)[bulk-exports],
  HTTPValidationError(ref)[bulk-exports],
  BulkExportRun(ref)[bulk-exports],
  HTTPValidationError(ref)[bulk-exports],
  ListTenantsApiV1TenantsGetResponse(array)[tenant],
    TenantForUser(ref)[tenant],
  HTTPValidationError(ref)[tenant],
  AppSchemasTenant(ref)[tenant],
  HTTPValidationError(ref)[tenant],
  InfoGetResponse(ref)[info],
  HealthInfoGetResponse(ref)[info],
  ListFeedbackConfigsEndpointApiV1FeedbackConfigsGetResponse(array)[feedback-configs],
    FeedbackConfigSchema(ref)[feedback-configs],
  HTTPValidationError(ref)[feedback-configs],
  FeedbackConfigSchema(ref)[feedback-configs],
  HTTPValidationError(ref)[feedback-configs],
  FeedbackConfigSchema(ref)[feedback-configs],
  HTTPValidationError(ref)[feedback-configs],
  ReadModelPriceMapApiV1ModelPriceMapGetResponse(class)[model-price-map],
  CreateNewModelPriceApiV1ModelPriceMapPostResponse(class)[model-price-map],
  HTTPValidationError(ref)[model-price-map],
  UpdateModelPriceApiV1ModelPriceMapIdPutResponse(class)[model-price-map],
  HTTPValidationError(ref)[model-price-map],
  DeleteModelPriceApiV1ModelPriceMapIdDeleteResponse(class)[model-price-map],
  HTTPValidationError(ref)[model-price-map],
  ListUsageLimitsApiV1UsageLimitsGetResponse(array)[usage-limits],
    UsageLimit(ref)[usage-limits],
  UsageLimit(ref)[usage-limits],
  HTTPValidationError(ref)[usage-limits],
  ListOrgUsageLimitsApiV1UsageLimitsOrgGetResponse(array)[usage-limits],
    UsageLimit(ref)[usage-limits],
  DeleteUsageLimitApiV1UsageLimitsUsageLimitIdDeleteResponse(class)[usage-limits],
  HTTPValidationError(ref)[usage-limits],
  ListTtlSettingsApiV1TtlSettingsGetResponse(array)[ttl-settings],
    TTLSettings(ref)[ttl-settings],
  TTLSettings(ref)[ttl-settings],
  HTTPValidationError(ref)[ttl-settings],
  InvokePromptApiV1PromptsInvokePromptPostResponse(class)[prompts],
  HTTPValidationError(ref)[prompts],
  PromptCanvasApiV1PromptsCanvasPostResponse(class)[prompts],
  HTTPValidationError(ref)[prompts],
  ListWorkspacesApiV1WorkspacesGetResponse(array)[workspaces],
    TenantForUser(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  AppSchemasTenant(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  AppSchemasTenant(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  DeleteWorkspaceApiV1WorkspacesWorkspaceIdDeleteResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  ListPendingWorkspaceInvitesApiV1WorkspacesPendingGetResponse(array)[workspaces],
    AppSchemasTenant(ref)[workspaces],
  DeletePendingWorkspaceInviteApiV1WorkspacesPendingIdDeleteResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  ClaimPendingWorkspaceInviteApiV1WorkspacesPendingWorkspaceIdClaimPostResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  TenantStats(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  TenantMembers(ref)[workspaces],
  Identity(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  GetCurrentActiveWorkspaceMembersApiV1WorkspacesCurrentMembersActiveGetResponse(array)[workspaces],
    MemberIdentity(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  GetCurrentPendingWorkspaceMembersApiV1WorkspacesCurrentMembersPendingGetResponse(array)[workspaces],
    PendingIdentity(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  AddMembersToCurrentWorkspaceBatchApiV1WorkspacesCurrentMembersBatchPostResponse(array)[workspaces],
    PendingIdentity(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  TenantShareTokensResponse(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  BulkUnshareEntitiesApiV1WorkspacesCurrentSharedDeleteResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  DeleteCurrentWorkspaceMemberApiV1WorkspacesCurrentMembersIdentityIdDeleteResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  PatchCurrentWorkspaceMemberApiV1WorkspacesCurrentMembersIdentityIdPatchResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  DeleteCurrentWorkspacePendingMemberApiV1WorkspacesCurrentMembersIdentityIdPendingDeleteResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  TenantUsageLimitInfo(ref)[workspaces],
  ListCurrentWorkspaceSecretsApiV1WorkspacesCurrentSecretsGetResponse(array)[workspaces],
    SecretKey(ref)[workspaces],
  UpsertCurrentWorkspaceSecretsApiV1WorkspacesCurrentSecretsPostResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  ListTagKeysApiV1WorkspacesCurrentTagKeysGetResponse(array)[workspaces],
    TagKey(ref)[workspaces],
  TagKey(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  TagKey(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  TagKey(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  DeleteTagKeyApiV1WorkspacesCurrentTagKeysTagKeyIdDeleteResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  TagValue(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  ListTagValuesApiV1WorkspacesCurrentTagKeysTagKeyIdTagValuesGetResponse(array)[workspaces],
    TagValue(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  TagValue(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  TagValue(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  DeleteTagValueApiV1WorkspacesCurrentTagKeysTagKeyIdTagValuesTagValueIdDeleteResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  Tagging(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  ListTaggingsApiV1WorkspacesCurrentTaggingsGetResponse(array)[workspaces],
    TaggingsResponse(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  DeleteTaggingApiV1WorkspacesCurrentTaggingsTaggingIdDeleteResponse(class)[workspaces],
  HTTPValidationError(ref)[workspaces],
  ListTagsApiV1WorkspacesCurrentTagsGetResponse(array)[workspaces],
    TagKeyWithValues(ref)[workspaces],
  ListTagsForResourceApiV1WorkspacesCurrentTagsResourceGetResponse(array)[workspaces],
    TagKeyWithValuesAndTaggings(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  ListTagsForResourcesApiV1WorkspacesCurrentTagsResourcesPostResponse(class)[workspaces],
    ListTagsForResourcesApiV1WorkspacesCurrentTagsResourcesPostResponse(array)[workspaces],
      TagKeyWithValuesAndTaggings(ref)[workspaces],
  HTTPValidationError(ref)[workspaces],
  ListPlaygroundSettingsApiV1PlaygroundSettingsGetResponse(array)[playground-settings],
    PlaygroundSettingsResponse(ref)[playground-settings],
  PlaygroundSettingsResponse(ref)[playground-settings],
  HTTPValidationError(ref)[playground-settings],
  PlaygroundSettingsResponse(ref)[playground-settings],
  HTTPValidationError(ref)[playground-settings],
  DeletePlaygroundSettingsApiV1PlaygroundSettingsPlaygroundSettingsIdDeleteResponse(class)[playground-settings],
  HTTPValidationError(ref)[playground-settings],
  GetServiceAccountsApiV1ServiceAccountsGetResponse(array)[service-accounts],
    ServiceAccount(ref)[service-accounts],
  ServiceAccountCreateResponse(ref)[service-accounts],
  HTTPValidationError(ref)[service-accounts],
  ServiceAccountDeleteResponse(ref)[service-accounts],
  HTTPValidationError(ref)[service-accounts],
  ReadSectionsApiV1ChartsSectionGetResponse(array)[charts],
    CustomChartsSectionResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartsSectionResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartsResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  SingleCustomChartResponseBase(ref)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  SingleCustomChartResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  DeleteChartApiV1ChartsChartIdDeleteResponse(class)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartsSection(ref)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartsSectionResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  DeleteSectionApiV1ChartsSectionSectionIdDeleteResponse(class)[charts],
  HTTPValidationError(ref)[charts],
  OrgReadSectionsApiV1OrgChartsSectionGetResponse(array)[charts],
    CustomChartsSectionResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartsSectionResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartsResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  SingleCustomChartResponseBase(ref)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  SingleCustomChartResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  OrgDeleteChartApiV1OrgChartsChartIdDeleteResponse(class)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartsSection(ref)[charts],
  HTTPValidationError(ref)[charts],
  CustomChartsSectionResponse(ref)[charts],
  HTTPValidationError(ref)[charts],
  OrgDeleteSectionApiV1OrgChartsSectionSectionIdDeleteResponse(class)[charts],
  HTTPValidationError(ref)[charts],
  OkApiV1OkGetResponse(class)[],
  ListReposResponse(ref)[repos],
  HTTPValidationError(ref)[repos],
  CreateRepoResponse(ref)[repos],
  HTTPValidationError(ref)[repos],
  GetRepoResponse(ref)[repos],
  HTTPValidationError(ref)[repos],
  CreateRepoResponse(ref)[repos],
  HTTPValidationError(ref)[repos],
  DeleteRepoApiV1ReposOwnerRepoDeleteResponse(class)[repos],
  HTTPValidationError(ref)[repos],
  GetRepoResponse(ref)[repos],
  HTTPValidationError(ref)[repos],
  ListTagsResponse(ref)[repos],
  HTTPValidationError(ref)[repos],
  OptimizePromptResponse(ref)[repos],
  HTTPValidationError(ref)[repos],
  LikeRepoResponse(ref)[likes],
  HTTPValidationError(ref)[likes],
  ListCommitsResponse(ref)[commits],
  HTTPValidationError(ref)[commits],
  CreateRepoCommitResponse(ref)[commits],
  HTTPValidationError(ref)[commits],
  CommitManifestResponse(ref)[commits],
  HTTPValidationError(ref)[commits],
  AppHubCrudTenantsTenant(ref)[settings],
  AppHubCrudTenantsTenant(ref)[settings],
  HTTPValidationError(ref)[settings],
  CreateEventApiV1EventsPostResponse(class)[events],
  HTTPValidationError(ref)[events],
  CreateCommentApiV1CommentsOwnerRepoPostResponse(class)[comments],
  HTTPValidationError(ref)[comments],
  ListCommentsResponse(ref)[comments],
  HTTPValidationError(ref)[comments],
  ListCommentsResponse(ref)[comments],
  HTTPValidationError(ref)[comments],
  Comment(ref)[comments],
  HTTPValidationError(ref)[comments],
  LikeCommentApiV1CommentsOwnerRepoParentCommentIdLikePostResponse(class)[comments],
  HTTPValidationError(ref)[comments],
  UnlikeCommentApiV1CommentsOwnerRepoParentCommentIdLikeDeleteResponse(class)[comments],
  HTTPValidationError(ref)[comments],
  GetTagsApiV1ReposOwnerRepoTagsGetResponse(array)[tags],
    RepoTag(ref)[tags],
  HTTPValidationError(ref)[tags],
  RepoTag(ref)[tags],
  HTTPValidationError(ref)[tags],
  RepoTag(ref)[tags],
  HTTPValidationError(ref)[tags],
  RepoTag(ref)[tags],
  HTTPValidationError(ref)[tags],
  DeleteTagApiV1ReposOwnerRepoTagsTagNameDeleteResponse(class)[tags],
  HTTPValidationError(ref)[tags],
  ListJobsApiV1ReposOwnerRepoOptimizationJobsGetResponse(array)[optimization-jobs],
    PromptOptimizationJob(ref)[optimization-jobs],
  HTTPValidationError(ref)[optimization-jobs],
  PromptOptimizationJob(ref)[optimization-jobs],
  HTTPValidationError(ref)[optimization-jobs],
  PromptOptimizationJobWithLogs(ref)[optimization-jobs],
  HTTPValidationError(ref)[optimization-jobs],
  PromptOptimizationJob(ref)[optimization-jobs],
  HTTPValidationError(ref)[optimization-jobs],
  DeleteJobApiV1ReposOwnerRepoOptimizationJobsJobIdDeleteResponse(class)[optimization-jobs],
  HTTPValidationError(ref)[optimization-jobs],
  ListJobLogsApiV1ReposOwnerRepoOptimizationJobsJobIdLogsGetResponse(array)[optimization-jobs],
    PromptOptimizationJobLog(ref)[optimization-jobs],
  HTTPValidationError(ref)[optimization-jobs],
  PromptOptimizationJobLog(ref)[optimization-jobs],
  HTTPValidationError(ref)[optimization-jobs],
  PromptOptimizationJobLog(ref)[optimization-jobs],
  HTTPValidationError(ref)[optimization-jobs],
  DeleteLogApiV1ReposOwnerRepoOptimizationJobsJobIdLogsLogIdDeleteResponse(class)[optimization-jobs],
  HTTPValidationError(ref)[optimization-jobs],
  Response(class)[runs],
    Response2(allOf)[runs],
      ResponseVariant1(string)[runs],
      Response3(class)[runs],
        Message(string)[runs],
  Response4(class)[runs],
    Response5(allOf)[runs],
      ResponseVariant1(string)[runs],
      Response6(class)[runs],
        Message(string)[runs],
  Response7(class)[runs],
    Response(string)[runs],
  Response8(class)[runs],
    Response9(allOf)[runs],
      ResponseVariant1(string)[runs],
      Response10(class)[runs],
        Message(string)[runs]
]