//HintName: G.ISecurityAdvisoriesClient.SecurityAdvisoriesCreatePrivateVulnerabilityReport.g.cs
#nullable enable

namespace G
{
    public partial interface ISecurityAdvisoriesClient
    {
        /// <summary>
        /// Privately report a security vulnerability<br/>
        /// Report a security vulnerability to the maintainers of the repository.<br/>
        /// See "[Privately reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)" for more information about private vulnerability reporting.
        /// </summary>
        /// <param name="owner"></param>
        /// <param name="repo"></param>
        /// <param name="request"></param>
        /// <param name="cancellationToken">The token to cancel the operation with</param>
        /// <exception cref="global::G.ApiException"></exception>
        global::System.Threading.Tasks.Task<global::G.RepositoryAdvisory> SecurityAdvisoriesCreatePrivateVulnerabilityReportAsync(
            string owner,
            string repo,
            global::G.PrivateVulnerabilityReportCreate request,
            global::System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Privately report a security vulnerability<br/>
        /// Report a security vulnerability to the maintainers of the repository.<br/>
        /// See "[Privately reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)" for more information about private vulnerability reporting.
        /// </summary>
        /// <param name="owner"></param>
        /// <param name="repo"></param>
        /// <param name="summary">
        /// A short summary of the advisory.
        /// </param>
        /// <param name="description">
        /// A detailed description of what the advisory impacts.
        /// </param>
        /// <param name="vulnerabilities">
        /// An array of products affected by the vulnerability detailed in a repository security advisory.
        /// </param>
        /// <param name="cweIds">
        /// A list of Common Weakness Enumeration (CWE) IDs.
        /// </param>
        /// <param name="severity">
        /// The severity of the advisory. You must choose between setting this field or `cvss_vector_string`.
        /// </param>
        /// <param name="cvssVectorString">
        /// The CVSS vector that calculates the severity of the advisory. You must choose between setting this field or `severity`.
        /// </param>
        /// <param name="startPrivateFork">
        /// Whether to create a temporary private fork of the repository to collaborate on a fix.<br/>
        /// Default Value: false
        /// </param>
        /// <param name="cancellationToken">The token to cancel the operation with</param>
        /// <exception cref="global::System.InvalidOperationException"></exception>
        global::System.Threading.Tasks.Task<global::G.RepositoryAdvisory> SecurityAdvisoriesCreatePrivateVulnerabilityReportAsync(
            string owner,
            string repo,
            string summary,
            string description,
            global::System.Collections.Generic.IList<global::G.PrivateVulnerabilityReportCreateVulnerabilitie>? vulnerabilities = default,
            global::System.Collections.Generic.IList<string>? cweIds = default,
            global::G.PrivateVulnerabilityReportCreateSeverity? severity = default,
            string? cvssVectorString = default,
            bool? startPrivateFork = default,
            global::System.Threading.CancellationToken cancellationToken = default);
    }
}