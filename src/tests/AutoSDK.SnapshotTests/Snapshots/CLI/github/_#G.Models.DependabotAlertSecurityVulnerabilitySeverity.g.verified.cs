//HintName: G.Models.DependabotAlertSecurityVulnerabilitySeverity.g.cs

#nullable enable

namespace G
{
    /// <summary>
    /// The severity of the vulnerability.<br/>
    /// Included only in responses
    /// </summary>
    public enum DependabotAlertSecurityVulnerabilitySeverity
    {
        /// <summary>
        /// 
        /// </summary>
        Low,
        /// <summary>
        /// 
        /// </summary>
        Medium,
        /// <summary>
        /// 
        /// </summary>
        High,
        /// <summary>
        /// 
        /// </summary>
        Critical,
    }

    /// <summary>
    /// Enum extensions to do fast conversions without the reflection.
    /// </summary>
    public static class DependabotAlertSecurityVulnerabilitySeverityExtensions
    {
        /// <summary>
        /// Converts an enum to a string.
        /// </summary>
        public static string ToValueString(this DependabotAlertSecurityVulnerabilitySeverity value)
        {
            return value switch
            {
                DependabotAlertSecurityVulnerabilitySeverity.Low => "low",
                DependabotAlertSecurityVulnerabilitySeverity.Medium => "medium",
                DependabotAlertSecurityVulnerabilitySeverity.High => "high",
                DependabotAlertSecurityVulnerabilitySeverity.Critical => "critical",
                _ => throw new global::System.ArgumentOutOfRangeException(nameof(value), value, null),
            };
        }
        /// <summary>
        /// Converts an string to a enum.
        /// </summary>
        public static DependabotAlertSecurityVulnerabilitySeverity? ToEnum(string value)
        {
            return value switch
            {
                "low" => DependabotAlertSecurityVulnerabilitySeverity.Low,
                "medium" => DependabotAlertSecurityVulnerabilitySeverity.Medium,
                "high" => DependabotAlertSecurityVulnerabilitySeverity.High,
                "critical" => DependabotAlertSecurityVulnerabilitySeverity.Critical,
                _ => null,
            };
        }
    }
}